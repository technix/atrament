{"version":3,"sources":["webpack://Atrament/webpack/universalModuleDefinition","webpack://Atrament/webpack/bootstrap","webpack://Atrament/./src/ink/functions.js","webpack://Atrament/./src/ink/observers.js","webpack://Atrament/./src/command.js","webpack://Atrament/./src/scene.js","webpack://Atrament/./node_modules/inkjs/dist/ink-es2015.js","webpack://Atrament/./src/story.js","webpack://Atrament/./src/episode.js","webpack://Atrament/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","InkFunctions","_classCallCheck","functions","fnList","_this","keys","forEach","fn","story","_this2","bindFunction","InkObservers","observers","obList","ob","observeVar","Command","deps","dependencies","commands","cmd","callback","rawText","cmdArr","replace","split","params","slice","cmdDeps","push","apply","concat","parseTags","tags","tagsObj","item","line","trim","content","join","firstChar","substr","JSON","parse","thisStory","cmdInstance","scene","type","text","choices","canContinue","Continue","currentText","indexOf","output","run","currentTags","assign","currentChoices","choice","id","global","_typeof","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","Path$1","_isRelative","_components","arguments","componentsString","Component","Array","_createClass","pathToAppend","upwardMoves","components","length","isParent","otherPath","isRelative","Equals","isIndex","compsStr","set","componentsStr","substring","str","test","parseInt","path","indexOrName","_index","_name","index","toString","otherComp","parentId","Object$1","parent","_path","nearestContainer","Container","console","warn","constructor","tail","ContentAtPath","rootContentContainer","globalPath","ownPath","minPathLength","Math","min","lastSharedPathCompIndex","ownComp","numUpwardsMoves","newPathComps","up","ToParent","down","globalPathStr","relativePathStr","PathByAppendingPath","ConvertPathToRelative","Length","obj","prop","comps","child","container","namedChild","hasValidName","unshift","ancestor","StringBuilder","_string","Append","format","args","match","number","InkListItem","fullNameOrOriginName","itemName","originName","nameParts","fullname","otherItem","originCode","itemCode","InkList","polymorphicArgument","originStory","_keys","_values","origins","_originNames","otherList","kv","Add","Key","Value","SetInitialOriginName","def","listDefinitions","TryGetDefinition","Error","singleOriginListName","singleElement","itemOrItemName","_this3","AddItem","origin","intVal","TryGetValueForItem","foundListDef","ContainsItemWithName","itemVal","ValueForItem","contains","itemWithValue","initialOriginName","initialOriginNames","union","intersection","ContainsKey","listToRemove","result","Remove","_this4","Count","minItem","maxItem","other","otherInkList","equals","ordered","sort","a","b","sb","NaN","maxOriginName","every","_this5","itemAndValue","max","_this6","list","items","ValueType","Int","Float","List","String","DivertTarget","VariablePointer","AbstractValue","_Object$","val","_this7","_possibleConstructorReturn","__proto__","getPrototypeOf","_valueType","_isTruthy","_valueObject","_inherits","newType","Create","Number","isInteger","IntValue","isNaN","StringValue","DivertTargetValue","ListValue","FloatValue","_AbstractValue","_this8","_value","_Value","_this9","valueType","parseFloat","_Value2","_this10","_Value3","_this11","_isNewline","_isInlineWhitespace","parsedInt","parsedFloat","isNewline","isInlineWhitespace","_Value4","targetPath","_this12","VariablePointerValue","_Value5","variableName","contextIndex","_this13","_Value6","listOrSingleItem","singleValue","_this14","isNull","isTruthy","oldValue","newValue","oldList","newList","SetInitialOriginNames","originNames","StoryException","_Error","message","_this15","_Object$2","_this16","_content","namedContent","visitsShouldBeCounted","turnIndexShouldBeCounted","countingAtStartOnly","CountFlags","Visits","Turns","CountStartOnly","_pathToFirstLeafContent","contentObj","_this17","AddContent","TryAddNamedContent","AddToNamedContentOnly","namedContentObj","partialPathLength","currentContainer","currentObj","comp","ContentWithPathComponent","otherContainer","_this18","component","foundContent","indentation","pointedObj","BuildStringOfHierarchy","appendIndentation","AppendFormat","AppendLine","onlyNamed","namedOnlyContentDict","named","existingNamedOnly","namedOnlyContent","flags","flag","internalPathToFirstLeafContent","Path","Glue","_Object$3","_this19","glueType","GlueType","Bidirectional","Left","Right","ControlCommand","_Object$4","commandType","_this20","_commandType","CommandType","NotSet","EvalStart","EvalOutput","EvalEnd","Duplicate","PopEvaluatedValue","PopFunction","PopTunnel","BeginString","EndString","NoOp","ChoiceCount","TurnsSince","ReadCount","Random","SeedRandom","VisitIndex","SequenceShuffleIndex","StartThread","Done","End","ListFromInt","ListRange","TOTAL_VALUES","PushPopType","Tunnel","Function","Divert","_Object$5","stackPushType","_this21","_targetPath","_targetContent","variableDivertName","pushesToStack","isExternal","isConditional","externalArgs","otherDivert","hasVariableTarget","targetStr","targetObj","targetContent","ResolvePath","CompactPathString","ChoicePoint","_Object$6","onceOnly","_this22","_pathOnChoice","hasCondition","hasStartContent","hasChoiceOnlyContent","isInvisibleDefault","targetString","pathOnChoice","choiceTargetObj","choiceTarget","VariableReference","_Object$7","_this23","pathForCount","pathStringForCount","VariableAssignment","_Object$8","isNewDeclaration","_this24","_variableName","_isNewDeclaration","isGlobal","Void","_Object$9","NativeFunctionCall","_Object$10","_this26","_numberOfParameters","_prototype","_isPrototype","_operationFuncs","GenerateNativeFunctionsIfNecessary","parameters","Call","numberOfParameters","hasList","CallBinaryListOperation","coercedParams","CoerceValuesToSingleType","coercedType","CallType","parametersOfSingleType","param1","valType","val1","paramCount","opForTypeObj","val2","resultVal","CallListIncrementOperation","v1","v2","op","listIntParams","_this27","listVal","resultInkList","listItemWithValue","listItem","listItemValue","targetInt","intOp","itemOrigin","incrementedItem","TryGetItemWithValue","exists","parametersIn","specialCaseList","parametersOut","valueObject","originOfMaxItem","castedValue","Cast","_nativeFunctions","numberOfParamters","nativeFunc","functionName","AddIntBinaryOp","x","y","Subtract","Multiply","Divide","Mod","AddIntUnaryOp","Negate","Equal","Greater","Less","GreaterThanOrEquals","LessThanOrEquals","NotEquals","Not","And","Or","Max","Min","AddFloatBinaryOp","AddFloatUnaryOp","AddStringBinaryOp","AddListBinaryOp","Union","Without","Has","Contains","Hasnt","Intersect","GreaterThan","LessThan","AddListUnaryOp","Invert","inverse","All","all","ListMin","MinAsList","ListMax","MaxAsList","ValueOfList","AddOpToNativeFunc","d1","d2","internalConstructor","AddOpFuncForType","Tag","_Object$11","tagText","_this28","_text","Choice","choicePoint","threadAtGeneration","_originalThreadIndex","_originalChoicePath","pathStringOnChoice","ListDefinition","_items","_rawListItemsKeys","_itemNameToValues","Null","intval","rawList","forEachItems","ListDefinitionsOrigin","lists","_this29","_lists","listWithItem","ContainsItem","itemValue","listOfLists","JsonSerialisation","serialisables","_this30","jArray","RuntimeObjectToJToken","skipLast","count","jTok","runtimeObj","JTokenToRuntimeObject","jObject","dict","dictionary","jsonObj","jObj","token","_controlCommandNames","CallExistsWithName","CallWithName","propValue","varPtr","isDivert","divPushType","external","divert","target","targetPathString","readCountVarRef","isVarAss","isGlobalVar","varName","isNewDecl","varAss","listContent","namesAsObjs","nameToVal","JObjectToChoice","JArrayToContainer","stringify","ContainerToJArray","divTypeKey","strVal","InkListToJObject","^->","varPtrVal","^var","ci","glue","isBi","isLeft","varRef","readCountPath","ChoiceToJObject","ListToJArray","countFlags","terminatingObj","DictionaryRuntimeObjsToJObject","subContainerJArray","attrJObj","JArrayToRuntimeObjList","namedContentItem","originalChoicePath","originalThreadIndex","listDefJson","itemToVal","defsObj","allDefs","nameValueKey","nameValue","i$1","Element","contentIndex","inExpressionEvaluation","currentContentIndex","temporaryVariables","copy","Thread","jsonToken","storyContext","_this31","callstack","threadIndex","previousContentObject","jThreadObj","jElTok","jElementObj","pushPopType","currentContainerPathStr","currentContainerPathStrToken","el","jObjTemps","JObjectToDictionaryRuntimeObjs","prevContentObjPath","prevPath","e","Copy","threadJObj","jThreadCallstack","CallStack","copyOrrootContentContainer","_this32","_threads","_threadCounter","otherThread","canPop","currentElement","CanPop","callStack","pop","newThread","currentThread","canPopThread","splice","_this33","jThreadTok","thread","jThreads","currentElementIndex","varValue","declareNew","contextElement","RetainListOriginsForAssignment","filter","elements","VariablesState","listDefsOrigin","_globalVariables","_callStack","_listDefsOrigin","_batchObservingVariableChanges","_changedVariables","variableChangedEvent","variableChangedEventCallbacks","Proxy","$","_this34","cb","toCopy","batchObservingVariableChanges","GetRawVariableWithName","varPointer","ValueAtVariablePointer","FindSingleItemListWithName","GetTemporaryVariableWithName","pointer","GetVariableWithName","setGlobal","ResolveVariablePointer","existingPointer","SetGlobal","SetTemporaryVariable","GetContextIndexOfVariableNamed","valueOfVariablePointedTo","varContents","_this35","currentValue","PRNG","seed","_seed","next","StoryState","_outputStream","_outputStreamTextDirty","_outputStreamTagsDirty","OutputStreamDirty","_evaluationStack","_variablesState","_visitCounts","_turnIndices","_currentTurnIndex","divertedTargetObject","timeSeed","Date","getTime","storySeed","previousRandom","_currentChoices","_currentText","_currentTags","_currentErrors","didSafeExit","_isExternalFunctionEvaluation","_originalCallstack","_originalEvaluationStackHeight","GoToStart","leftGlue","g","isRight","mainContentContainer","_this36","names","evaluationStack","numberOfObjects","_this37","listText","TrySplittingHeadTailWhitespace","textObj","PushToOutputStreamIndividual","single","headFirstNewlineIdx","headLastNewlineIdx","tailLastNewlineIdx","tailFirstNewlineIdx","listTexts","innerStrStart","innerStrEnd","leadingSpaces","innerStrText","numSpaces","trailingSpaces","includeInOutput","existingRightGlue","currentRightGlue","matchingRightGlue","MatchRightGlueForLeftGlue","TrimNewlinesFromOutputStream","currentGlueIndex","TrimFromExistingGlue","isNonWhitespace","RemoveExistingGlue","outputStreamEndsInNewline","outputStreamContainsContent","rightGlueToStopAt","removeWhitespaceFrom","rightGluePos","foundNonWhitespace","txt","outputStream","PopThread","Pop","currentContentObject","currentPath","funcContainer","PassArgumentsToEvaluationStack","PushEvaluationStack","returnedObj","poppedObj","PopEvaluationStack","returnVal","pathString","visitCountOut","visitCounts","keyValue","hasError","currentErrors","variablesState","CopyFrom","currentTurnIndex","indented","jsonString","currentObject","outputObj","textContent","_this38","tag","depth","_this39","choiceThreads","ThreadWithIndex","GetJsonToken","IntDictionaryToJObject","turnIndices","kInkSaveStateVersion","inkVersionCurrent","_this40","jSaveVersion","kMinCompatibleLoadVersion","SetJsonToken","currentDivertTargetPath","divertPath","JObjectToIntDictionary","jChoiceThreads","foundActiveThread","jSavedChoiceThread","nVal","isFinite","floor","Story","_Object$12","_this41","inkVersionMinimumCompatible","_variableObservers","_externals","_prevContainerSet","_listDefinitions","_mainContentContainer","rootObject","versionObj","formatFromFile","listDefsObj","rootToken","JTokenToListDefinitions","_hasValidatedExternals","allowExternalFunctionFallbacks","ResetState","rootContainerJsonList","ListDefinitionsToJToken","_state","ObserveVariableChange","VariableStateDidChangeEvent","ResetGlobals","ResetErrors","ForceEnd","originalPath","state","ChoosePathString","ContinueInternal","ValidateExternalBindings","ResetOutput","stateAtLastNewline","Step","TryFollowDefaultInvisibleChoice","inStringEvaluation","currText","prevTextLength","prevTagCount","RestoreStateSnapshot","StateSnapshot","generatedChoices","_temporaryEvaluationContainer","shouldAddToStream","currentContentObj","VisitContainer","isLogicOrFlowControl","PerformLogicAndFlowControl","ProcessChoice","contextIdx","ContextForVariableNamed","PushToOutputStream","NextContent","PushThread","atStart","IncrementVisitCountForContainer","RecordTurnIndexVisitToContainer","newContentObject","prevAncestor","currentChildOfContainer","currentContainerAncestor","enteringAtStart","showChoice","conditionValue","IsTruthy","startText","choiceOnlyText","VisitCountForContainer","divTarget","currentDivert","errorMessage","CallExternalFunction","Push","debugMetadata","sourceName","evalCommand","PeekEvaluationStack","popType","overrideTunnelReturnTarget","popped","TryExitExternalFunctionEvaluation","expected","errorMsg","contentStackForString","outputCountConsumed","reverse","choiceCount","extraNote","eitherCount","divertTarget","TurnsSinceForContainer","maxInt","minInt","randomRange","resultSeed","nextRandom","chosenValue","shuffleIndex","NextSequenceShuffleIndex","listNameVal","generatedListValue","foundItem","targetList","IntBound","minVal","maxVal","assignedVal","Assign","foundValue","containerForCount","func","funcParams","ChoosePath","SetChosenPath","VisitChangedContainersDueToDivert","choiceIdx","choiceToChoose","returnTextOutput","StartExternalFunctionEvaluation","stringOutput","textOutput","CompleteExternalFunctionEvaluation","returned","exprContainer","startCallStackHeight","evalStackHeight","funcName","numberOfArguments","fallbackFunctionContainer","valueObj","funcResult","returnObj","_this42","BindExternalFunctionGeneral","coercedArgs","TryCoerce","containerOrObject","missingExternals","_this43","innerContent","observer","variableNames","ObserveVariable","specificVariableName","newValueObj","TagsAtStartOfFlowContainerWithPathString","flowContainer","firstContent","IncrementContentPointer","didPop","successfulIncrement","currEl","nextAncestor","indexInAncestor","allChoices","invisibleChoices","containerPathStr","numElementsIntVal","seqContainer","numElements","seqCount","loopIndex","iterationIndex","seqPathStr","sequenceHash","charCodeAt","randomSeed","random","unpickedIndices","chosen","chosenIndex","useEndLineNumber","AddError","_inkEs","AtramentStory","storyContent","_scene2","default","ChooseChoiceIndex","toJson","jsonState","LoadJson","globalTags","knot","TagsForContentAtPath","ref","vState","vars","k","VisitCountAtPathString","fnName","functionDef","BindExternalFunction","Episode","episodeId","inkObservers","inkFunctions","$episode","$story","sceneId","attach","getScene","updateEpisode","choiceId","makeChoice","isActive","filename","episode","saveState","loadState","stub","Promise","Atrament","gameConfig","game","events","loadStory","loadGame","saveGame","error","inkCommands","command","transcript","loadEpisode","episodes","then","reset","slotId","gameState","dispatch","data","restoreState","getGameState","renderScene","getCurrentScene","resolve","reject","initEpisode","cmdObj","register","getState","eventName","eventHandler","eventParams"],"mappings":"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","file":"atrament.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Atrament\"] = factory();\n\telse\n\t\troot[\"Atrament\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","class InkFunctions {\n  constructor() {\n    this.functions = {};\n  }\n\n  register(fnList) {\n    Object.keys(fnList).forEach((fn) => {\n      this.functions[fn] = fnList[fn];\n    });\n  }\n\n  attach(story) {\n    Object.keys(this.functions).forEach((fn) => {\n      story.bindFunction(fn, this.functions[fn]);\n    });\n  }\n}\n\nexport default InkFunctions;\n","class InkObservers {\n  constructor() {\n    this.observers = {};\n  }\n\n  register(obList) {\n    Object.keys(obList).forEach((ob) => {\n      this.observers[ob] = obList[ob];\n    });\n  }\n\n  attach(story) {\n    Object.keys(this.observers).forEach((ob) => {\n      story.observeVar(ob, this.observers[ob]);\n    });\n  }\n}\n\nexport default InkObservers;\n","class Command {\n  constructor(deps) {\n    this.dependencies = deps;\n    this.commands = {};\n  }\n\n  register(cmd, callback, deps) {\n    this.commands[cmd] = {callback, deps};\n  }\n\n  run(rawText) {\n    const cmdArr = rawText.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, '').split(' ');\n    const cmd = cmdArr[1];\n    const params = cmdArr.slice(2);\n    if (!(cmd in this.commands)) {\n      return rawText;\n    }\n    const c = this.commands[cmd];\n    // inject dependencies\n    const cmdDeps = [];\n    if (c.deps) {\n      c.deps.forEach((d) => {\n        cmdDeps.push(this.dependencies[d]);\n      });\n    }\n    // run callback\n    return c.callback(params, ...cmdDeps);\n  }\n}\n\nexport default Command;\n","\nfunction parseTags(tags) {\n  const tagsObj = {};\n  tags.forEach((item) => {\n    const line = item.split(':');\n    const key = line[0].trim();\n    let content = line.slice(1).join(':').trim();\n    const firstChar = content.substr(0, 1);\n    if (firstChar === '{' || firstChar === '[') {\n      content = JSON.parse(content); // this is JSON\n    }\n    tagsObj[key] = content;\n  });\n  return tagsObj;\n}\n\nfunction getScene(thisStory, cmdInstance) {\n  const scene = {\n    type: 'text',\n    text: [],\n    tags: {},\n    choices: []\n  };\n  while (thisStory.canContinue) {\n    thisStory.Continue();\n    const {currentText} = thisStory;\n    if (currentText.indexOf('>>>') === 0) {\n      // parse command\n      const output = cmdInstance.run(currentText);\n      if (output) {\n        scene.text.push(output);\n      }\n    } else {\n      // add story text\n      scene.text.push(currentText); // eslint-disable-line new-cap\n    }\n    // add tags\n    const tags = parseTags(thisStory.currentTags);\n    if (tags.scene) {\n      scene.type = tags.scene;\n    }\n    scene.tags = Object.assign({}, scene.tags, tags);\n  }\n  thisStory.currentChoices.forEach((choice, id) => {\n    scene.choices.push({id, choice: choice.text});\n  });\n  return scene;\n}\n\nexport default getScene;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('inkjs', ['exports'], factory) :\n\t(factory((global.inkjs = global.inkjs || {})));\n}(this, (function (exports) { 'use strict';\n\n\tclass Path$1{\r\n\t\tconstructor(/*polymorphic constructor*/){\r\n\t\t\tthis._isRelative;\r\n\t\t\tthis._components = [];\r\n\t\t\t\r\n\t\t\tif (typeof arguments[0] == 'string'){\r\n\t\t\t\tthis.componentsString = arguments[0];\r\n\t\t\t}\r\n\t\t\telse if (arguments[0] instanceof Component && arguments[1] instanceof Path$1){\r\n\t\t\t\tthis._components.push(arguments[0]);\r\n\t\t\t\tthis._components = this._components.concat(arguments[1]);\r\n\t\t\t}\r\n\t\t\telse if (arguments[0] instanceof Array){\r\n\t\t\t\tthis._components = this._components.concat(arguments[0]);\r\n\t\t\t\tthis._isRelative = !!arguments[1];\r\n\t\t\t}\r\n\t\t}\r\n\t\tget isRelative(){\r\n\t\t\treturn this._isRelative;\r\n\t\t}\r\n\t\tget components(){\r\n\t\t\treturn this._components;\r\n\t\t}\r\n\t\tget head(){\r\n\t\t\tif (this.components.length > 0) {\r\n\t\t\t\treturn this.components[0];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget tail(){\r\n\t\t\tif (this.components.length >= 2) {\r\n\t\t\t\tvar tailComps = this.components.slice(1, this.components.length);//careful, the original code uses length-1 here. This is because the second argument of List.GetRange is a number of elements to extract, wherease Array.slice uses an index\r\n\t\t\t\treturn new Path$1(tailComps);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn Path$1.self;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget length(){\r\n\t\t\treturn this.components.length;\r\n\t\t}\r\n\t\tget lastComponent(){\r\n\t\t\tif (this.components.length > 0) {\r\n\t\t\t\treturn this.components[this.components.length - 1];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget containsNamedComponent(){\r\n\t\t\tfor (var i = 0, l = this.components.length; i < l; i++){\r\n\t\t\t\tif (!this.components[i].isIndex){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tstatic get self(){\r\n\t\t\tvar path = new Path$1();\r\n\t\t\tpath._isRelative = true;\r\n\t\t\treturn path;\r\n\t\t}\r\n\t\t\r\n\t\tPathByAppendingPath(pathToAppend){\r\n\t\t\tvar p = new Path$1();\r\n\r\n\t\t\tvar upwardMoves = 0;\r\n\t\t\tfor (var i = 0; i < pathToAppend.components.length; ++i) {\r\n\t\t\t\tif (pathToAppend.components[i].isParent) {\r\n\t\t\t\t\tupwardMoves++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < this.components.length - upwardMoves; ++i) {\r\n\t\t\t\tp.components.push(this.components[i]);\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = upwardMoves; i < pathToAppend.components.length; ++i) {\r\n\t\t\t\tp.components.push(pathToAppend.components[i]);\r\n\t\t\t}\r\n\r\n\t\t\treturn p;\r\n\t\t}\r\n\t\tget componentsString(){\r\n\t\t\tvar compsStr = this.components.join(\".\");\r\n\t\t\tif (this.isRelative)\r\n\t\t\t\treturn \".\" + compsStr;\r\n\t\t\telse\r\n\t\t\t\treturn compsStr;\r\n\t\t}\r\n\t\tset componentsString(value){\r\n\t\t\tthis.components.length = 0;\r\n\r\n\t\t\tvar componentsStr = value;\r\n\t\t\t\r\n\t\t\tif (componentsStr == null || componentsStr == '') return;\r\n\r\n\t\t\t// When components start with \".\", it indicates a relative path, e.g.\r\n\t\t\t//   .^.^.hello.5\r\n\t\t\t// is equivalent to file system style path:\r\n\t\t\t//  ../../hello/5\r\n\t\t\tif (componentsStr[0] == '.') {\r\n\t\t\t\tthis._isRelative = true;\r\n\t\t\t\tcomponentsStr = componentsStr.substring(1);\r\n\t\t\t}\r\n\r\n\t\t\tvar componentStrings = componentsStr.split('.');\r\n\t\t\tcomponentStrings.forEach(str => {\r\n\t\t\t\t//we need to distinguish between named components that start with a number, eg \"42somewhere\", and indexed components\r\n\t\t\t\t//the normal parseInt won't do for the detection because it's too relaxed.\r\n\t\t\t\t//see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\r\n\t\t\t\tif (/^(\\-|\\+)?([0-9]+|Infinity)$/.test(str)){\r\n\t\t\t\t\tthis.components.push(new Component(parseInt(str)));\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthis.components.push(new Component(str));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn this.componentsString;\r\n\t\t}\r\n\t\tEquals(otherPath){\r\n\t\t\tif (otherPath == null)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (otherPath.components.length != this.components.length)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (otherPath.isRelative != this.isRelative)\r\n\t\t\t\treturn false;\r\n\t\t\t\r\n\t\t\t//the original code uses SequenceEqual here, so we need to iterate over the components manually.\r\n\t\t\tfor (var i = 0, l = otherPath.components.length; i < l; i++){\r\n\t\t\t\t//it's not quite clear whether this test should use Equals or a simple == operator, see https://github.com/y-lohse/inkjs/issues/22\r\n\t\t\t\tif (!otherPath.components[i].Equals(this.components[i])) return false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tclass Component{\r\n\t\tconstructor(indexOrName){\r\n\t\t\tif (typeof indexOrName == 'string'){\r\n\t\t\t\tthis._index = -1;\r\n\t\t\t\tthis._name = indexOrName;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._index = parseInt(indexOrName);\r\n\t\t\t\tthis._name = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget index(){\r\n\t\t\treturn this._index;\r\n\t\t}\r\n\t\tget name(){\r\n\t\t\treturn this._name;\r\n\t\t}\r\n\t\tget isIndex(){\r\n\t\t\treturn this.index >= 0;\r\n\t\t}\r\n\t\tget isParent(){\r\n\t\t\treturn this.name == Path$1.parentId;\r\n\t\t}\r\n\t\t\r\n\t\tstatic ToParent(){\r\n\t\t\treturn new Component(Path$1.parentId);\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\tif (this.isIndex) {\r\n\t\t\t\treturn this.index.toString();\r\n\t\t\t} else {\r\n\t\t\t\treturn this.name;\r\n\t\t\t}\r\n\t\t}\r\n\t\tEquals(otherComp){\r\n\t\t\tif (otherComp != null && otherComp.isIndex == this.isIndex) {\r\n\t\t\t\tif (this.isIndex) {\r\n\t\t\t\t\treturn this.index == otherComp.index;   \r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.name == otherComp.name;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tPath$1.parentId = \"^\";\r\n\tPath$1.Component = Component;\n\n\tclass Object$1{\r\n\t\tconstructor(){\r\n\t\t\tthis.parent = null;\r\n\t\t\tthis._path = null;\r\n\t\t}\r\n\t\tget path(){\r\n\t\t\tif (this._path == null) {\r\n\r\n\t\t\t\tif (this.parent == null) {\r\n\t\t\t\t\tthis._path = new Path$1();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Maintain a Stack so that the order of the components\r\n\t\t\t\t\t// is reversed when they're added to the Path.\r\n\t\t\t\t\t// We're iterating up the hierarchy from the leaves/children to the root.\r\n\t\t\t\t\tvar comps = [];\r\n\r\n\t\t\t\t\tvar child = this;\r\n\t//\t\t\t\tContainer container = child.parent as Container;\r\n\t\t\t\t\tvar container = child.parent;\r\n\r\n\t\t\t\t\twhile (container instanceof Container) {\r\n\r\n\t\t\t\t\t\tvar namedChild = child;\r\n\t\t\t\t\t\tif (namedChild.name && namedChild.hasValidName) {\r\n\t\t\t\t\t\t\tcomps.unshift(new Path$1.Component(namedChild.name));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcomps.unshift(new Path$1.Component(container.content.indexOf(child)));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tchild = container;\r\n\t//\t\t\t\t\tcontainer = container.parent as Container;\r\n\t\t\t\t\t\tcontainer = container.parent;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._path = new Path$1(comps);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this._path;\r\n\t\t}\r\n\t\tget rootContentContainer(){\r\n\t\t\tvar ancestor = this;\r\n\t\t\twhile (ancestor.parent) {\r\n\t\t\t\tancestor = ancestor.parent;\r\n\t\t\t}\r\n\t\t\treturn ancestor;\r\n\t\t}\r\n\t\t\r\n\t\tResolvePath(path){\r\n\t\t\tif (path.isRelative) {\r\n\t\t\t\tvar nearestContainer = this;\r\n\r\n\t\t\t\tif (nearestContainer instanceof Container === false) {\r\n\t\t\t\t\tif (this.parent == null) console.warn(\"Can't resolve relative path because we don't have a parent\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tnearestContainer = this.parent;\r\n\t\t\t\t\tif (nearestContainer.constructor.name !== 'Container') console.warn(\"Expected parent to be a container\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t//Debug.Assert (path.components [0].isParent);\r\n\t\t\t\t\tpath = path.tail;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn nearestContainer.ContentAtPath(path);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.rootContentContainer.ContentAtPath(path);\r\n\t\t\t}\r\n\t\t}\r\n\t\tConvertPathToRelative(globalPath){\r\n\t\t\tvar ownPath = this.path;\r\n\r\n\t\t\tvar minPathLength = Math.min(globalPath.components.length, ownPath.components.length);\r\n\t\t\tvar lastSharedPathCompIndex = -1;\r\n\r\n\t\t\tfor (var i = 0; i < minPathLength; ++i) {\r\n\t\t\t\tvar ownComp = ownPath.components[i];\r\n\t\t\t\tvar otherComp = globalPath.components[i];\r\n\r\n\t\t\t\tif (ownComp.Equals(otherComp)) {\r\n\t\t\t\t\tlastSharedPathCompIndex = i;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// No shared path components, so just use global path\r\n\t\t\tif (lastSharedPathCompIndex == -1)\r\n\t\t\t\treturn globalPath;\r\n\r\n\t\t\tvar numUpwardsMoves = (ownPath.components.length-1) - lastSharedPathCompIndex;\r\n\r\n\t\t\tvar newPathComps = [];\r\n\r\n\t\t\tfor(var up = 0; up < numUpwardsMoves; ++up)\r\n\t\t\t\tnewPathComps.push(Path$1.Component.ToParent());\r\n\r\n\t\t\tfor (var down = lastSharedPathCompIndex + 1; down < globalPath.components.length; ++down)\r\n\t\t\t\tnewPathComps.push(globalPath.components[down]);\r\n\r\n\t\t\tvar relativePath = new Path$1(newPathComps, true);\r\n\t\t\treturn relativePath;\r\n\t\t}\r\n\t\tCompactPathString(otherPath){\r\n\t\t\tvar globalPathStr = null;\r\n\t\t\tvar relativePathStr = null;\r\n\t\t\t\r\n\t\t\tif (otherPath.isRelative) {\r\n\t\t\t\trelativePathStr = otherPath.componentsString;\r\n\t\t\t\tglobalPathStr = this.path.PathByAppendingPath(otherPath).componentsString;\r\n\t\t\t} \r\n\t\t\telse {\r\n\t\t\t\tvar relativePath = this.ConvertPathToRelative(otherPath);\r\n\t\t\t\trelativePathStr = relativePath.componentsString;\r\n\t\t\t\tglobalPathStr = otherPath.componentsString;\r\n\t\t\t}\r\n\r\n\t\t\tif (relativePathStr.Length < globalPathStr.Length) \r\n\t\t\t\treturn relativePathStr;\r\n\t\t\telse\r\n\t\t\t\treturn globalPathStr;\r\n\t\t}\t\r\n\t\tCopy(){\r\n\t\t\tthrow \"Not Implemented\";\r\n\t\t}\r\n\t\t//SetCHild works slightly diferently in the js implementation. SInce we can't pass an objets property by reference, we instead pass the object and the property string.\r\n\t\tSetChild(obj, prop, value){\r\n\t\t\tif (obj[prop])\r\n\t\t\t\tobj[prop] = null;\r\n\r\n\t\t\tobj[prop] = value;\r\n\r\n\t\t\tif( obj[prop] )\r\n\t\t\t\tobj[prop].parent = this;\r\n\t\t}\r\n\t}\n\n\tclass StringBuilder{\r\n\t\tconstructor(str){\r\n\t\t\tstr = (typeof str !== 'undefined') ? str.toString() : '';\r\n\t\t\tthis._string = str;\r\n\t\t}\r\n\t\tget Length(){\r\n\t\t\treturn this._string.length;\r\n\t\t}\r\n\t\tAppend(str){\r\n\t\t\tthis._string += str;\r\n\t\t}\r\n\t\tAppendLine(str){\r\n\t\t\tif (typeof str !== 'undefined') this.Append(str);\r\n\t\t\tthis._string += \"\\n\";\r\n\t\t}\r\n\t\tAppendFormat(format){\r\n\t\t\t//taken from http://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format\r\n\t\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\t\treturn format.replace(/{(\\d+)}/g, function(match, number){\r\n\t\t\t\treturn typeof args[number] != 'undefined' ? args[number] : match;\r\n\t\t\t});\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn this._string;\r\n\t\t}\r\n\t}\n\n\tclass InkListItem{\r\n\t\tconstructor(fullNameOrOriginName, itemName){\r\n\t\t\tif (itemName !== undefined){\r\n\t\t\t\tthis.originName = fullNameOrOriginName;\r\n\t\t\t\tthis.itemName = itemName;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar nameParts = fullNameOrOriginName.toString().split('.');\r\n\t            this.originName = nameParts[0];\r\n\t            this.itemName = nameParts[1];\r\n\t\t\t}\r\n\t\t}\r\n\t\tstatic Null(){\r\n\t\t\treturn new InkListItem(null, null);\r\n\t\t}\r\n\t\tisNull(){\r\n\t\t\treturn this.originName == null && this.itemName == null;\r\n\t\t}\r\n\t\tget fullName(){\r\n\t\t\treturn ((this.originName !== null) ? this.originName : \"?\") + \".\" + this.itemName;\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn this.fullname;\r\n\t\t}\r\n\t\tEquals(obj){\r\n\t\t\tif (obj instanceof InkListItem) {\r\n\t//\t\t\tvar otherItem = (InkListItem)obj;\r\n\t\t\t\tvar otherItem = obj;\r\n\t\t\t\treturn otherItem.itemName   == this.itemName \r\n\t\t\t\t\t&& otherItem.originName == this.originName;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//GetHashCode not implemented\r\n\t\ttoString(){\r\n\t\t\t//WARNING: experimental. InkListItem are structs and are used as keys inside hashes. In js, we can't use an object as a key, as the key needs to be a string. C# gets around that with the internal GetHashCode, and the js equivalent to that is toString. So here, toString acts as C#'s GetHashCode\r\n\t\t\tvar originCode = '0';\r\n\t\t\tvar itemCode = (this.itemName) ? this.itemName.toString() : 'null';\r\n\t\t\tif (this.originName != null)\r\n\t\t\t\toriginCode = this.originName.toString();\r\n\t\t\t\r\n\t\t\treturn originCode + itemCode;\r\n\t\t}\r\n\t}\r\n\r\n\t//in C#, rawlists are based on dictionnary; the equivalent of a dictionnary in js is Object, but we can't use that or it will conflate dictionnary items and InkList class properties.\r\n\t//instead InkList-js has a special _values property wich contains the actual \"Dictionnary\", and a few Dictionnary methods are re-implemented on InkList. This also means directly iterating over the InkList won't work as expected. Maybe we can return a proxy if that's required.\r\n\t//@TODO: actually we could use a Map for this.\r\n\tclass InkList {\r\n\t\tconstructor(polymorphicArgument, originStory){\r\n\t\t\tthis._keys = {};\r\n\t\t\tthis._values = {};\r\n\t\t\tthis.origins = null;\r\n\t\t\tthis._originNames = null;\r\n\t\t\t\r\n\t\t\t//polymorphioc constructor\r\n\t\t\tif (polymorphicArgument){\r\n\t\t\t\tif (polymorphicArgument instanceof InkList){\r\n\t\t\t\t\tvar otherList = polymorphicArgument;\r\n\t\t\t\t\totherList.forEach((kv)=>{\r\n\t\t\t\t\t\tthis.Add(kv.Key, kv.Value);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._originNames = otherList._originNames;\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof polymorphicArgument === 'string'){\r\n\t\t\t\t\tthis.SetInitialOriginName(polymorphicArgument);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar def = null;\r\n\t\t\t\t\tif (def = originStory.listDefinitions.TryGetDefinition(polymorphicArgument, def)){\r\n\t\t\t\t\t\tthis.origins = [def];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tthrow new Error(\"InkList origin could not be found in story when constructing new list: \" + singleOriginListName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (polymorphicArgument.hasOwnProperty('Key') && polymorphicArgument.hasOwnProperty('Value')){\r\n\t\t\t\t\tvar singleElement = polymorphicArgument;\r\n\t\t\t\t\tthis.Add(singleElement.Key, singleElement.Value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tforEach(fn){\r\n\t\t\tfor (var key in this._values){\r\n\t\t\t\tfn({\r\n\t\t\t\t\tKey: this._keys[key],\r\n\t\t\t\t\tValue: this._values[key]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tAddItem(itemOrItemName){\r\n\t\t\tif (itemOrItemName instanceof InkListItem){\r\n\t\t\t\tvar item = itemOrItemName;\r\n\t\t\t\t\r\n\t\t\t\tif (item.originName == null) {\r\n\t\t\t\t\t\tthis.AddItem(item.itemName);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.origins.forEach((origin)=>{\r\n\t\t\t\t\tif (origin.name == item.originName) {\r\n\t\t\t\t\t\t\tvar intVal;\r\n\t\t\t\t\t\t\tintVal = origin.TryGetValueForItem(item, intVal);\r\n\t\t\t\t\t\t\tif (intVal !== undefined) {\r\n\t\t\t\t\t\t\t\t\tthis.Add(item, intVal);\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow \"Could not add the item \" + item + \" to this list because it doesn't exist in the original list definition in ink.\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthrow \"Failed to add item to list because the item was from a new list definition that wasn't previously known to this list. Only items from previously known lists can be used, so that the int value can be found.\";\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar itemName = itemOrItemName;\r\n\t\t\t\t\r\n\t\t\t\tvar foundListDef = null;\r\n\r\n\t\t\t\tthis.origins.forEach((origin)=>{\r\n\t\t\t\t\tif (origin.ContainsItemWithName(itemName)) {\r\n\t\t\t\t\t\t\tif (foundListDef != null) {\r\n\t\t\t\t\t\t\t\t\tthrow \"Could not add the item \" + itemName + \" to this list because it could come from either \" + origin.name + \" or \" + foundListDef.name;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tfoundListDef = origin;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (foundListDef == null)\r\n\t\t\t\t\t\tthrow \"Could not add the item \" + itemName + \" to this list because it isn't known to any list definitions previously associated with this list.\";\r\n\r\n\t\t\t\tvar item = new InkListItem(foundListDef.name, itemName);\r\n\t\t\t\tvar itemVal = foundListDef.ValueForItem(item);\r\n\t\t\t\tthis.Add(item, itemVal);\r\n\t\t\t}\r\n\t\t}\r\n\t\tContainsItemNamed(itemName){\r\n\t\t\tvar contains = false;\r\n\t\t\tthis.forEach(itemWithValue => {\r\n\t\t\t\t\tif (itemWithValue.Key.itemName == itemName) contains = true;\r\n\t\t\t});\r\n\t\t\treturn contains;\r\n\t\t}\r\n\t\tContainsKey(key){\r\n\t\t\treturn key in this._values;\r\n\t\t}\r\n\t\tAdd(key, value){\r\n\t\t\tthis._keys[key] = key;\r\n\t\t\tthis._values[key] = value;\r\n\t\t}\r\n\t\tRemove(key){\r\n\t\t\tdelete this._values[key];\r\n\t\t\tdelete this._keys[key];\r\n\t\t}\r\n\t\tget Count(){\r\n\t\t\treturn Object.keys(this._values).length;\r\n\t\t}\r\n\t\tget originOfMaxItem(){\r\n\t\t\tif (this.origins == null) return null;\r\n\r\n\t\t\tvar maxOriginName = this.maxItem.Key.originName;\r\n\t\t\tvar result = null;\r\n\t\t\tthis.origins.every(function(origin){\r\n\t\t\t\tif (origin.name == maxOriginName){\r\n\t\t\t\t\tresult = origin;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse return true;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tget originNames(){\r\n\t\t\tif (this.Count > 0) {\r\n\t\t\t\tif (this._originNames == null && this.Count > 0)\r\n\t\t\t\t\tthis._originNames = [];\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._originNames.length = 0;\r\n\r\n\t\t\t\tthis.forEach((itemAndValue)=>{\r\n\t\t\t\t\tthis._originNames.push(itemAndValue.Key.originName);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn this._originNames;\r\n\t\t}\r\n\t\tSetInitialOriginName(initialOriginName){\r\n\t\t\tthis._originNames = [initialOriginName];\r\n\t\t}\r\n\t\tSetInitialOriginNames(initialOriginNames){\r\n\t\t\tif (initialOriginNames == null)\r\n\t\t\t\t\tthis._originNames = null;\r\n\t\t\telse\r\n\t\t\t\t\tthis._originNames = initialOriginNames.slice();//store a copy\r\n\t\t}\r\n\t\tget maxItem(){\r\n\t\t\tvar max = {\r\n\t\t\t\tKey: null,\r\n\t\t\t\tValue: null\r\n\t\t\t};\r\n\t\t\tthis.forEach(function(kv){\r\n\t\t\t\tif (max.Key === null || kv.Value > max.Value)\r\n\t\t\t\t\tmax = kv;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn max;\r\n\t\t}\r\n\t\tget minItem(){\r\n\t\t\tvar min = {\r\n\t\t\t\tKey: null,\r\n\t\t\t\tValue: null\r\n\t\t\t};\r\n\t\t\tthis.forEach(function(kv){\r\n\t\t\t\tif (min.Key === null || kv.Value < min.Value)\r\n\t\t\t\t\tmin = kv;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn min;\r\n\t\t}\r\n\t\tget inverse(){\r\n\t\t\tvar list = new InkList();\r\n\t\t\tif (this.origins != null) {\r\n\t\t\t\tthis.origins.forEach((origin)=>{\r\n\t\t\t\t\torigin.items.forEach((itemAndValue)=>{\r\n\t\t\t\t\t\tif (!this.ContainsKey(itemAndValue.Key))\r\n\t\t\t\t\t\t\tlist.Add(itemAndValue.Key, itemAndValue.Value);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn list;\r\n\t\t}\r\n\t\tget all(){\r\n\t\t\tvar list = new InkList();\r\n\t\t\tif (this.origins != null) {\r\n\t\t\t\tthis.origins.forEach(function(origin){\r\n\t\t\t\t\torigin.items.forEach(function(itemAndValue){\r\n\t\t\t\t\t\tlist.Add(itemAndValue.Key, itemAndValue.Value);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn list;\r\n\t\t}\r\n\t\tUnion(otherList){\r\n\t\t\tvar union = new InkList(this);\r\n\t\t\totherList.forEach(function(kv){\r\n\t\t\t\tunion.Add(kv.Key, kv.Value);\r\n\t\t\t});\r\n\t\t\treturn union;\r\n\t\t}\r\n\t\tIntersect(otherList){\r\n\t\t\tvar intersection = new InkList();\r\n\t\t\tthis.forEach(function(kv){\r\n\t\t\t\tif (otherList.ContainsKey(kv.Key))\r\n\t\t\t\t\tintersection.Add(kv.Key, kv.Value);\r\n\t\t\t});\r\n\t\t\treturn intersection;\r\n\t\t}\r\n\t\tWithout(listToRemove){\r\n\t\t\tvar result = new InkList(this);\r\n\t\t\tlistToRemove.forEach(function(kv){\r\n\t\t\t\tresult.Remove(kv.Key);\r\n\t\t\t});\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tContains(otherList){\r\n\t\t\tvar contains = true;\r\n\t\t\totherList.forEach((kv)=>{\r\n\t\t\t\tif (!this.ContainsKey(kv.Key)) contains = false;\r\n\t\t\t});\r\n\t\t\treturn contains;\r\n\t\t}\r\n\t\tGreaterThan(otherList){\r\n\t\t\tif (this.Count == 0) return false;\r\n\t\t\tif (otherList.Count == 0) return true;\r\n\r\n\t\t\t// All greater\r\n\t\t\treturn this.minItem.Value > otherList.maxItem.Value;\r\n\t\t}\r\n\t\tGreaterThanOrEquals(otherList){\r\n\t\t\tif (this.Count == 0) return false;\r\n\t\t\tif (otherList.Count == 0) return true;\r\n\r\n\t\t\treturn this.minItem.Value >= otherList.minItem.Value\r\n\t\t\t\t&& this.maxItem.Value >= otherList.maxItem.Value;\r\n\t\t}\r\n\t\tLessThan(otherList){\r\n\t\t\tif (otherList.Count == 0) return false;\r\n\t\t\tif (this.Count == 0) return true;\r\n\r\n\t\t\treturn this.maxItem.Value < otherList.minItem.Value;\r\n\t\t}\r\n\t\tLessThanOrEquals(otherList){\r\n\t\t\tif (otherList.Count == 0) return false;\r\n\t\t\tif (this.Count == 0) return true;\r\n\r\n\t\t\treturn this.maxItem.Value <= otherList.maxItem.Value\r\n\t\t\t\t&& this.minItem.Value <= otherList.minItem.Value;\r\n\t\t}\r\n\t\tMaxAsList(){\r\n\t\t\tif (this.Count > 0)\r\n\t\t\t\treturn new InkList(this.maxItem);\r\n\t\t\telse\r\n\t\t\t\treturn new InkList();\r\n\t\t}\r\n\t\tMinAsList(){\r\n\t\t\tif (this.Count > 0)\r\n\t\t\t\treturn new InkList(this.minItem);\r\n\t\t\telse\r\n\t\t\t\treturn new InkList();\r\n\t\t}\r\n\t\tEquals(other){\r\n\t//\t\tvar otherInkList = other as InkList;\r\n\t\t\tvar otherInkList = other;\r\n\t\t\tif (otherInkList instanceof InkList === false) return false;\r\n\t\t\tif (otherInkList.Count != this.Count) return false;\r\n\r\n\t\t\tvar equals = true;\r\n\t\t\tthis.forEach(function(kv){\r\n\t\t\t\tif (!otherInkList.ContainsKey(kv.Key))\r\n\t\t\t\t\tequals = false;\r\n\t\t\t});\r\n\r\n\t\t\treturn equals;\r\n\t\t}\r\n\t\t//GetHashCode not implemented\r\n\t\ttoString(){\r\n\t\t\tvar ordered = [];\r\n\t\t\tthis.forEach(function(kv){\r\n\t\t\t\tordered.push(kv);\r\n\t\t\t});\r\n\t\t\tordered = ordered.sort((a, b) => {\r\n\t\t\t\treturn (a.Value === b.Value) ? 0 : ((a.Value > b.Value) ? 1 : -1);\r\n\t\t\t});\r\n\r\n\t\t\tvar sb = new StringBuilder();\r\n\t\t\tfor (var i = 0; i < ordered.length; i++) {\r\n\t\t\t\tif (i > 0)\r\n\t\t\t\t\tsb.Append(\", \");\r\n\r\n\t\t\t\tvar item = ordered[i].Key;\r\n\t\t\t\tsb.Append(item.itemName);\r\n\t\t\t}\r\n\r\n\t\t\treturn sb.toString();\r\n\t\t}\r\n\t\t//casting a InkList to a Number, for somereason, actually gives a number. This messes up the type detection when creating a Value from a InkList. Returning NaN here prevents that.\r\n\t\tvalueOf(){\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t}\n\n\tvar ValueType = {\r\n\t\t// Used in coersion\r\n\t\tInt: 0,\r\n\t\tFloat: 1,\r\n\t\tList: 2,\r\n\t\tString: 3,\r\n\r\n\t\t// Not used for coersion described above\r\n\t\tDivertTarget: 4,\r\n\t\tVariablePointer: 5\r\n\t};\r\n\r\n\tclass AbstractValue extends Object$1{\r\n\t\tconstructor(val){\r\n\t\t\tsuper();\r\n\t\t\tthis._valueType;\r\n\t\t\tthis._isTruthy;\r\n\t\t\tthis._valueObject;\r\n\t\t}\r\n\t\tget valueType(){\r\n\t\t\treturn this._valueType;\r\n\t\t}\r\n\t\tget isTruthy(){\r\n\t\t\treturn this._isTruthy;\r\n\t\t}\r\n\t\tget valueObject(){\r\n\t\t\treturn this._valueObject;\r\n\t\t}\r\n\t\t\r\n\t\tCast(newType){\r\n\t\t\tthrow \"Trying to casting an AbstractValue\";\r\n\t\t}\r\n\t\tstatic Create(val){\r\n\t\t\t// Implicitly convert bools into ints\r\n\t\t\tif (typeof val === 'boolean'){\r\n\t\t\t\tvar b = !!val;\r\n\t\t\t\tval = (b) ? 1 : 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (Number.isInteger(Number(val))) {\r\n\t\t\t\treturn new IntValue(val);\r\n\t\t\t} else if (!isNaN(val)) {\r\n\t\t\t\treturn new FloatValue(val);\r\n\t\t\t} else if (typeof val === 'string') {\r\n\t\t\t\treturn new StringValue(val);\r\n\t\t\t} else if (val instanceof Path$1) {\r\n\t\t\t\treturn new DivertTargetValue(val);\r\n\t\t\t} else if (val instanceof InkList) {\r\n\t\t\t\treturn new ListValue(val);\r\n\t\t\t}\r\n\t\t\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tCopy(val){\r\n\t\t\treturn AbstractValue.Create(val);\r\n\t\t}\r\n\t}\r\n\r\n\tclass Value extends AbstractValue{\r\n\t\tconstructor(val){\r\n\t\t\tsuper();\r\n\t\t\tthis.value = val;\r\n\t\t}\r\n\t\tget value(){\r\n\t\t\treturn this._value;\r\n\t\t}\r\n\t\tset value(value){\r\n\t\t\tthis._value = value;\r\n\t\t}\r\n\t\tget valueObject(){\r\n\t\t\treturn this.value;\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn this.value.toString();\r\n\t\t}\r\n\t}\r\n\r\n\tclass IntValue extends Value{\r\n\t\tconstructor(val){\r\n\t\t\tsuper(val || 0);\r\n\t\t\tthis._valueType = ValueType.Int;\r\n\t\t}\r\n\t\tget isTruthy(){\r\n\t\t\treturn this.value != 0;\r\n\t\t}\r\n\t\tget valueType(){\r\n\t\t\treturn ValueType.Int;\r\n\t\t}\r\n\t\t\r\n\t\tCast(newType){\r\n\t\t\tif (newType == this.valueType) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (newType == ValueType.Float) {\r\n\t\t\t\treturn new FloatValue(parseFloat(this.value));\r\n\t\t\t}\r\n\r\n\t\t\tif (newType == ValueType.String) {\r\n\t\t\t\treturn new StringValue(\"\" + this.value);\r\n\t\t\t}\r\n\r\n\t\t\tthrow \"Unexpected type cast of Value to new ValueType\";\r\n\t\t}\r\n\t}\r\n\r\n\tclass FloatValue extends Value{\r\n\t\tconstructor(val){\r\n\t\t\tsuper(val || 0.0);\r\n\t\t\tthis._valueType = ValueType.Float;\r\n\t\t}\r\n\t\tget isTruthy(){\r\n\t\t\treturn this._value != 0.0;\r\n\t\t}\r\n\t\tget valueType(){\r\n\t\t\treturn ValueType.Float;\r\n\t\t}\r\n\t\t\r\n\t\tCast(newType){\r\n\t\t\tif (newType == this.valueType) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (newType == ValueType.Int) {\r\n\t\t\t\treturn new IntValue(parseInt(this.value));\r\n\t\t\t}\r\n\r\n\t\t\tif (newType == ValueType.String) {\r\n\t\t\t\treturn new StringValue(\"\" + this.value);\r\n\t\t\t}\r\n\r\n\t\t\tthrow \"Unexpected type cast of Value to new ValueType\";\r\n\t\t}\r\n\t}\r\n\r\n\tclass StringValue extends Value{\r\n\t\tconstructor(val){\r\n\t\t\tsuper(val || '');\r\n\t\t\tthis._valueType = ValueType.String;\r\n\t\t\t\r\n\t\t\tthis._isNewline = (this.value == \"\\n\");\r\n\t\t\tthis._isInlineWhitespace = true;\r\n\t\t\t\r\n\t\t\tthis.value.split().every(c => {\r\n\t\t\t\tif (c != ' ' && c != '\\t'){\r\n\t\t\t\t\tthis._isInlineWhitespace = false;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\t\tget valueType(){\r\n\t\t\treturn ValueType.String;\r\n\t\t}\r\n\t\tget isTruthy(){\r\n\t\t\treturn this.value.length > 0;\r\n\t\t}\r\n\t\tget isNewline(){\r\n\t\t\treturn this._isNewline;\r\n\t\t}\r\n\t\tget isInlineWhitespace(){\r\n\t\t\treturn this._isInlineWhitespace;\r\n\t\t}\r\n\t\tget isNonWhitespace(){\r\n\t\t\treturn !this.isNewline && !this.isInlineWhitespace;\r\n\t\t}\r\n\t\t\r\n\t\tCast(newType){\r\n\t\t\tif (newType == this.valueType) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif (newType == ValueType.Int) {\r\n\r\n\t\t\t\tvar parsedInt;\r\n\t\t\t\tif (parsedInt = parseInt(value)) {\r\n\t\t\t\t\treturn new IntValue(parsedInt);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (newType == ValueType.Float) {\r\n\t\t\t\tvar parsedFloat;\r\n\t\t\t\tif (parsedFloat = parsedFloat(value)) {\r\n\t\t\t\t\treturn new FloatValue(parsedFloat);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthrow \"Unexpected type cast of Value to new ValueType\";\r\n\t\t}\r\n\t}\r\n\r\n\tclass DivertTargetValue extends Value{\r\n\t\tconstructor(targetPath){\r\n\t\t\tsuper(targetPath);\r\n\t\t\t\r\n\t\t\tthis._valueType = ValueType.DivertTarget;\r\n\t\t}\r\n\t\tget targetPath(){\r\n\t\t\treturn this.value;\r\n\t\t}\r\n\t\tset targetPath(value){\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\t\tget isTruthy(){\r\n\t\t\tthrow \"Shouldn't be checking the truthiness of a divert target\";\r\n\t\t}\r\n\t\t\r\n\t\tCast(newType){\r\n\t\t\tif (newType == this.valueType)\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tthrow \"Unexpected type cast of Value to new ValueType\";\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn \"DivertTargetValue(\" + this.targetPath + \")\";\r\n\t\t}\r\n\t}\r\n\r\n\tclass VariablePointerValue extends Value{\r\n\t\tconstructor(variableName, contextIndex){\r\n\t\t\tsuper(variableName);\r\n\t\t\t\r\n\t\t\tthis._valueType = ValueType.VariablePointer;\r\n\t\t\tthis.contextIndex = (typeof contextIndex !== 'undefined') ? contextIndex : -1;\r\n\t\t}\r\n\t\tget variableName(){\r\n\t\t\treturn this.value;\r\n\t\t}\r\n\t\tset variableName(value){\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\t\tget isTruthy(){\r\n\t\t\tthrow \"Shouldn't be checking the truthiness of a variable pointer\";\r\n\t\t}\r\n\t\t\r\n\t\tCast(newType){\r\n\t\t\tif (newType == this.valueType)\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tthrow \"Unexpected type cast of Value to new ValueType\";\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn \"VariablePointerValue(\" + this.variableName + \")\";\r\n\t\t}\r\n\t\tCopy(){\r\n\t\t\treturn new VariablePointerValue(this.variableName, this.contextIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tclass ListValue extends Value{\r\n\t\tget valueType(){\r\n\t\t\treturn ValueType.List;\r\n\t\t}\r\n\t\tget isTruthy(){\r\n\t\t\tvar isTruthy = false;\r\n\t\t\tthis.value.forEach(function(kv){\r\n\t\t\t\tvar listItemIntValue = kv.Value;\r\n\t\t\t\tif (listItemIntValue != 0)\r\n\t\t\t\t\tisTruthy = true; \r\n\t\t\t});\r\n\t\t\treturn isTruthy;\r\n\t\t}\r\n\t\tCast(newType){\r\n\t\t\t if (newType == ValueType.Int) {\r\n\t\t\t\tvar max = this.value.maxItem;\r\n\t\t\t\tif( max.Key.isNull )\r\n\t\t\t\t\treturn new IntValue(0);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn new IntValue(max.Value);\r\n\t\t\t}\r\n\r\n\t\t\telse if (newType == ValueType.Float) {\r\n\t\t\t\tvar max = this.value.maxItem;\r\n\t\t\t\tif (max.Key.isNull)\r\n\t\t\t\t\treturn new FloatValue(0.0);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn new FloatValue(parseFloat(max.Value));\r\n\t\t\t}\r\n\r\n\t\t\telse if (newType == ValueType.String) {\r\n\t\t\t\tvar max = value.maxItem;\r\n\t\t\t\tif (max.Key.isNull)\r\n\t\t\t\t\treturn new StringValue(\"\");\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn new StringValue(max.Key.toString());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (newType == this.valueType)\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tthrow \"Unexpected type cast of Value to new ValueType\";\r\n\t\t}\r\n\t\tconstructor(listOrSingleItem, singleValue){\r\n\t\t\tsuper(null);\r\n\t\t\t\r\n\t\t\tthis._valueType = ValueType.List;\r\n\t\t\t\r\n\t\t\tif (listOrSingleItem instanceof InkList){\r\n\t\t\t\tthis.value = new InkList(listOrSingleItem);\r\n\t\t\t}\r\n\t\t\telse if (listOrSingleItem !== undefined && singleValue !== undefined){\r\n\t\t\t\tthis.value = new InkList({\r\n\t\t\t\t\tKey: listOrSingleItem,\r\n\t\t\t\t\tValue: singleValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.value = new InkList();\r\n\t\t\t}\r\n\t\t}\r\n\t\tstatic RetainListOriginsForAssignment(oldValue, newValue){\r\n\t//\t\tvar oldList = oldValue as ListValue;\r\n\t\t\tvar oldList = oldValue;\r\n\t//\t\tvar newList = newValue as ListValue;\r\n\t\t\tvar newList = newValue;\r\n\r\n\t\t\t// When assigning the emtpy list, try to retain any initial origin names\r\n\t\t\tif (oldList instanceof ListValue && newList instanceof ListValue && newList.value.Count == 0)\r\n\t\t\t\tnewList.value.SetInitialOriginNames(oldList.value.originNames);\r\n\t\t}\r\n\t}\n\n\tclass StoryException extends Error{\r\n\t\tconstructor(message) {\r\n\t\t\tsuper(message);\r\n\t\t\tthis.message = message;\r\n\t\t\tthis.name = 'StoryException';\r\n\t\t}\r\n\t}\n\n\tclass Container extends Object$1{//also implements INamedContent. Not sure how to do it cleanly in JS.\r\n\t\tconstructor(){\r\n\t\t\tsuper();\r\n\t\t\tthis.name = '';\r\n\t\t\t\r\n\t\t\tthis._content = [];\r\n\t\t\tthis.namedContent = {};\r\n\t\t\t\r\n\t\t\tthis.visitsShouldBeCounted = false;\r\n\t\t\tthis.turnIndexShouldBeCounted = false;\r\n\t\t\tthis.countingAtStartOnly = false;\r\n\t\t\t\r\n\t\t\tthis.CountFlags = {\r\n\t\t\t\tVisits: 1,\r\n\t\t\t\tTurns: 2,\r\n\t\t\t\tCountStartOnly: 4\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis._pathToFirstLeafContent = null;\r\n\t\t}\r\n\t\tget hasValidName(){\r\n\t\t\treturn this.name != null && this.name.length > 0;\r\n\t\t}\r\n\t\tget content(){\r\n\t\t\treturn this._content;\r\n\t\t}\r\n\t\tset content(value){\r\n\t\t\tthis.AddContent(value);\r\n\t\t}\r\n\t\tget namedOnlyContent(){\r\n\t\t\tvar namedOnlyContentDict = {};\r\n\t\t\t\r\n\t\t\tfor (var key in this.namedContent){\r\n\t\t\t\tnamedOnlyContentDict[key] = this.namedContent[key];\r\n\t\t\t}\r\n\r\n\t\t\tthis.content.forEach(c => {\r\n\t//\t\t\tvar named = c as INamedContent;\r\n\t\t\t\tvar named = c;\r\n\t\t\t\tif (named.name && named.hasValidName) {\r\n\t\t\t\t\tdelete namedOnlyContentDict[named.name];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (Object.keys(namedOnlyContentDict).length == 0)\r\n\t\t\t\tnamedOnlyContentDict = null;\r\n\r\n\t\t\treturn namedOnlyContentDict;\r\n\t\t}\r\n\t\tset namedOnlyContent(value){\r\n\t\t\tvar existingNamedOnly = this.namedOnlyContent;\r\n\t\t\tif (existingNamedOnly != null) {\r\n\t\t\t\tfor (var key in existingNamedOnly){\r\n\t\t\t\t\tdelete this.namedContent[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (value == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tfor (var key in value){\r\n\t//\t\t\tvar named = kvPair.Value as INamedContent;\r\n\t\t\t\tvar named = value[key];\r\n\t\t\t\tif( named.name && typeof named.hasValidName !== 'undefined' )\r\n\t\t\t\t\tthis.AddToNamedContentOnly(named);\r\n\t\t\t}\r\n\t\t}\r\n\t\tget countFlags(){\r\n\t\t\tvar flags = 0;\r\n\t\t\tif (this.visitsShouldBeCounted)    flags |= this.CountFlags.Visits;\r\n\t\t\tif (this.turnIndexShouldBeCounted) flags |= this.CountFlags.Turns;\r\n\t\t\tif (this.countingAtStartOnly)      flags |= this.CountFlags.CountStartOnly;\r\n\r\n\t\t\t// If we're only storing CountStartOnly, it serves no purpose,\r\n\t\t\t// since it's dependent on the other two to be used at all.\r\n\t\t\t// (e.g. for setting the fact that *if* a gather or choice's\r\n\t\t\t// content is counted, then is should only be counter at the start)\r\n\t\t\t// So this is just an optimisation for storage.\r\n\t\t\tif (flags == this.CountFlags.CountStartOnly) {\r\n\t\t\t\tflags = 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn flags;\r\n\t\t}\r\n\t\tset countFlags(value){\r\n\t\t\t var flag = value;\r\n\t\t\tif ((flag & this.CountFlags.Visits) > 0) this.visitsShouldBeCounted = true;\r\n\t\t\tif ((flag & this.CountFlags.Turns) > 0)  this.turnIndexShouldBeCounted = true;\r\n\t\t\tif ((flag & this.CountFlags.CountStartOnly) > 0) this.countingAtStartOnly = true;\r\n\t\t}\r\n\t\tget pathToFirstLeafContent(){\r\n\t\t\tif( this._pathToFirstLeafContent == null )\r\n\t\t\t\tthis._pathToFirstLeafContent = this.path.PathByAppendingPath(this.internalPathToFirstLeafContent);\r\n\r\n\t\t\treturn this._pathToFirstLeafContent;\r\n\t\t}\r\n\t\tget internalPathToFirstLeafContent(){\r\n\t\t\tvar path = new Path ();\r\n\t\t\tvar container = this;\r\n\t\t\twhile (container instanceof Container) {\r\n\t\t\t\tif (container.content.length > 0) {\r\n\t\t\t\t\tpath.components.push(new Path.Component(0));\r\n\t//\t\t\t\tcontainer = container.content [0] as Container;\r\n\t\t\t\t\tcontainer = container.content[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn path;\r\n\t\t}\r\n\t\t\r\n\t\tAddContent(contentObj){\r\n\t\t\tif (contentObj instanceof Array){\r\n\t\t\t\tcontentObj.forEach(c => {\r\n\t\t\t\t\tthis.AddContent(c);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._content.push(contentObj);\r\n\t\t\t\t\r\n\t\t\t\tif (contentObj.parent) {\r\n\t                throw \"content is already in \" + contentObj.parent;\r\n\t            }\r\n\t\t\t\t\r\n\t\t\t\tcontentObj.parent = this;\r\n\r\n\t\t\t\tthis.TryAddNamedContent(contentObj);\r\n\t\t\t}\r\n\t\t}\r\n\t\tTryAddNamedContent(contentObj){\r\n\t\t\t//so here, in the reference implementation, contentObj is casted to an INamedContent\r\n\t\t\t//but here we use js-style duck typing: if it implements the same props as the interface, we treat it as valid\r\n\t\t\tif (contentObj.hasValidName && contentObj.name){\r\n\t\t\t\tthis.AddToNamedContentOnly(contentObj);\r\n\t\t\t}\r\n\t\t}\r\n\t\tAddToNamedContentOnly(namedContentObj){\r\n\t\t\tif (namedContentObj instanceof Object$1 === false) console.warn(\"Can only add Runtime.Objects to a Runtime.Container\");\r\n\t\t\tnamedContentObj.parent = this;\r\n\r\n\t\t\tthis.namedContent[namedContentObj.name] = namedContentObj;\r\n\t\t}\r\n\t\tContentAtPath(path, partialPathLength){\r\n\t\t\tpartialPathLength = (typeof partialPathLength !== 'undefined') ? partialPathLength : path.components.length;\r\n\r\n\t\t\tvar currentContainer = this;\r\n\t\t\tvar currentObj = this;\r\n\r\n\t\t\tfor (var i = 0; i < partialPathLength; ++i) {\r\n\t\t\t\tvar comp = path.components[i];\r\n\t\t\t\tif (!(currentContainer instanceof Container))\r\n\t\t\t\t\tthrow \"Path continued, but previous object wasn't a container: \" + currentObj;\r\n\t\t\t\t\r\n\t\t\t\tcurrentObj = currentContainer.ContentWithPathComponent(comp);\r\n\t//\t\t\tcurrentContainer = currentObj as Container;\r\n\t\t\t\tcurrentContainer = currentObj;\r\n\t\t\t}\r\n\r\n\t\t\treturn currentObj;\r\n\t\t}\r\n\t\tInsertContent(contentObj, index){\r\n\t\t\tthis.content[i] = contentObj;\r\n\r\n\t\t\tif (contentObj.parent) {\r\n\t\t\t\tthrow \"content is already in \" + contentObj.parent;\r\n\t\t\t}\r\n\r\n\t\t\tcontentObj.parent = this;\r\n\r\n\t\t\tthis.TryAddNamedContent(contentObj);\r\n\t\t}\r\n\t\tAddContentsOfContainer(otherContainer){\r\n\t\t\tthis.content = this.content.concat(otherContainer.content);\r\n\t\t\t\r\n\t\t\totherContainer.content.forEach(obj => {\r\n\t\t\t\tobj.parent = this;\r\n\t\t\t\tthis.TryAddNamedContent(obj);\r\n\t\t\t});\r\n\t\t}\r\n\t\tContentWithPathComponent(component){\r\n\t\t\tif (component.isIndex) {\r\n\r\n\t\t\t\tif (component.index >= 0 && component.index < this.content.length) {\r\n\t\t\t\t\treturn this.content[component.index];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When path is out of range, quietly return nil\r\n\t\t\t\t// (useful as we step/increment forwards through content)\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t} \r\n\r\n\t\t\telse if (component.isParent) {\r\n\t\t\t\treturn this.parent;\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tvar foundContent = null;\r\n\t\t\t\tif (foundContent = this.namedContent[component.name]){\r\n\t\t\t\t\treturn foundContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new StoryException(\"Content '\"+component.name+\"' not found at path: '\"+this.path+\"'\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tBuildStringOfHierarchy(sb, indentation, pointedObj){\r\n\t\t\tif (arguments.length == 0){\r\n\t\t\t\tvar sb = new StringBuilder();\r\n\t\t\t\tthis.BuildStringOfHierarchy(sb, 0, null);\r\n\t\t\t\treturn sb.toString();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction appendIndentation(){\r\n\t\t\t\tvar spacesPerIndent = 4;\r\n\t\t\t\tfor(var i = 0; i < spacesPerIndent*indentation; ++i) { \r\n\t\t\t\t\tsb.Append(\" \"); \r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tappendIndentation();\r\n\t\t\tsb.Append(\"[\");\r\n\r\n\t\t\tif (this.hasValidName) {\r\n\t\t\t\tsb.AppendFormat(\" ({0})\", this.name);\r\n\t\t\t}\r\n\r\n\t\t\tif (this == pointedObj) {\r\n\t\t\t\tsb.Append(\"  <---\");\r\n\t\t\t}\r\n\r\n\t\t\tsb.AppendLine();\r\n\r\n\t\t\tindentation++;\r\n\r\n\t\t\tfor (var i = 0; i < this.content.length; ++i) {\r\n\r\n\t\t\t\tvar obj = this.content[i];\r\n\r\n\t\t\t\tif (obj instanceof Container) {\r\n\r\n\t\t\t\t\tvar container = obj;\r\n\r\n\t\t\t\t\tcontainer.BuildStringOfHierarchy(sb, indentation, pointedObj);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tappendIndentation();\r\n\t\t\t\t\tif (obj instanceof StringValue) {\r\n\t\t\t\t\t\tsb.Append(\"\\\"\");\r\n\t\t\t\t\t\tsb.Append(obj.toString().replace(\"\\n\", \"\\\\n\"));\r\n\t\t\t\t\t\tsb.Append(\"\\\"\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsb.Append(obj.toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i != this.content.length - 1) {\r\n\t\t\t\t\tsb.Append(\",\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !(obj instanceof Container) && obj == pointedObj ) {\r\n\t\t\t\t\tsb.Append(\"  <---\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsb.AppendLine();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar onlyNamed = {};\r\n\t\t\t\r\n\t\t\tfor (var key in this.namedContent){\r\n\t\t\t\tif (this.content.indexOf(this.namedContent[key]) >= 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tonlyNamed[key] = this.namedContent[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Object.keys(onlyNamed).length > 0) {\r\n\t\t\t\tappendIndentation();\r\n\t\t\t\tsb.AppendLine(\"-- named: --\");\r\n\r\n\t\t\t\tfor (var key in onlyNamed){\r\n\t\t\t\t\tif (!(onlyNamed[key] instanceof Container)) console.warn(\"Can only print out named Containers\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar container = onlyNamed[key];\r\n\t\t\t\t\tcontainer.BuildStringOfHierarchy(sb, indentation, pointedObj);\r\n\t\t\t\t\tsb.Append(\"\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tindentation--;\r\n\r\n\t\t\tappendIndentation();\r\n\t\t\tsb.Append(\"]\");\r\n\t\t}\r\n\t}\n\n\tclass Glue extends Object$1{\r\n\t\tconstructor(type){\r\n\t\t\tsuper();\r\n\t\t\tthis.glueType = type;\r\n\t\t}\r\n\t\tget isLeft(){\r\n\t\t\treturn this.glueType == GlueType.Left;\r\n\t\t}\r\n\t\tget isBi(){\r\n\t\t\treturn this.glueType == GlueType.Bidirectional;\r\n\t\t}\r\n\t\tget isRight(){\r\n\t\t\treturn this.glueType == GlueType.Right;\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\tswitch (this.glueType) {\r\n\t\t\tcase GlueType.Bidirectional: return \"BidirGlue\";\r\n\t\t\tcase GlueType.Left: return \"LeftGlue\";\r\n\t\t\tcase GlueType.Right: return \"RightGlue\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn \"UnexpectedGlueType\";\r\n\t\t}\r\n\t}\r\n\r\n\tlet GlueType = {\r\n\t\tBidirectional: 0,\r\n\t\tLeft: 1,\r\n\t    Right: 2\r\n\t};\n\n\tclass ControlCommand extends Object$1{\r\n\t\tconstructor(commandType){\r\n\t\t\tsuper();\r\n\t\t\tthis._commandType = (typeof commandType != 'undefined') ? commandType : CommandType.NotSet;\r\n\t\t}\r\n\t\tget commandType(){\r\n\t\t\treturn this._commandType;\r\n\t\t}\r\n\t\tcopy(){\r\n\t\t\treturn new ControlCommand(this.commandType);\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn this.commandType.toString();\r\n\t\t}\r\n\t\tstatic EvalStart(){\r\n\t\t\treturn new ControlCommand(CommandType.EvalStart);\r\n\t\t}\r\n\t\tstatic EvalOutput(){\r\n\t\t\treturn new ControlCommand(CommandType.EvalOutput);\r\n\t\t}\r\n\t\tstatic EvalEnd(){\r\n\t\t\treturn new ControlCommand(CommandType.EvalEnd);\r\n\t\t}\r\n\t\tstatic Duplicate(){\r\n\t\t\treturn new ControlCommand(CommandType.Duplicate);\r\n\t\t}\r\n\t\tstatic PopEvaluatedValue(){\r\n\t\t\treturn new ControlCommand(CommandType.PopEvaluatedValue);\r\n\t\t}\r\n\t\tstatic PopFunction(){\r\n\t\t\treturn new ControlCommand(CommandType.PopFunction);\r\n\t\t}\r\n\t\tstatic PopTunnel(){\r\n\t\t\treturn new ControlCommand(CommandType.PopTunnel);\r\n\t\t}\r\n\t\tstatic BeginString(){\r\n\t\t\treturn new ControlCommand(CommandType.BeginString);\r\n\t\t}\r\n\t\tstatic EndString(){\r\n\t\t\treturn new ControlCommand(CommandType.EndString);\r\n\t\t}\r\n\t\tstatic NoOp(){\r\n\t\t\treturn new ControlCommand(CommandType.NoOp);\r\n\t\t}\r\n\t\tstatic ChoiceCount(){\r\n\t\t\treturn new ControlCommand(CommandType.ChoiceCount);\r\n\t\t}\r\n\t\tstatic TurnsSince(){\r\n\t\t\treturn new ControlCommand(CommandType.TurnsSince);\r\n\t\t}\r\n\t\tstatic ReadCount(){\r\n\t\t\treturn new ControlCommand(CommandType.ReadCount);\r\n\t\t}\r\n\t\tstatic Random(){\r\n\t\t\treturn new ControlCommand(CommandType.Random);\r\n\t\t}\r\n\t\tstatic SeedRandom(){\r\n\t\t\treturn new ControlCommand(CommandType.SeedRandom);\r\n\t\t}\r\n\t\tstatic VisitIndex(){\r\n\t\t\treturn new ControlCommand(CommandType.VisitIndex);\r\n\t\t}\r\n\t\tstatic SequenceShuffleIndex(){\r\n\t\t\treturn new ControlCommand(CommandType.SequenceShuffleIndex);\r\n\t\t}\r\n\t\tstatic StartThread(){\r\n\t\t\treturn new ControlCommand(CommandType.StartThread);\r\n\t\t}\r\n\t\tstatic Done(){\r\n\t\t\treturn new ControlCommand(CommandType.Done);\r\n\t\t}\r\n\t\tstatic End(){\r\n\t\t\treturn new ControlCommand(CommandType.End);\r\n\t\t}\r\n\t\tstatic ListFromInt(){\r\n\t\t\treturn new ControlCommand(CommandType.ListFromInt);\r\n\t\t}\r\n\t\tstatic ListRange(){\r\n\t\t\treturn new ControlCommand(CommandType.ListRange);\r\n\t\t}\r\n\t}\r\n\r\n\tvar CommandType = {\r\n\t\tNotSet: -1,\r\n\t\tEvalStart: 0,\r\n\t\tEvalOutput: 1,\r\n\t\tEvalEnd: 2,\r\n\t\tDuplicate: 3,\r\n\t\tPopEvaluatedValue: 4,\r\n\t\tPopFunction: 5,\r\n\t\tPopTunnel: 6,\r\n\t\tBeginString: 7,\r\n\t\tEndString: 8,\r\n\t\tNoOp: 9,\r\n\t\tChoiceCount: 10,\r\n\t\tTurnsSince: 11,\r\n\t\tRandom: 12,\r\n\t\tSeedRandom: 13,\r\n\t\tVisitIndex: 14,\r\n\t\tSequenceShuffleIndex: 15,\r\n\t\tStartThread: 16,\r\n\t\tDone: 17,\r\n\t\tEnd: 18,\r\n\t\tListFromInt: 19,\r\n\t\tListRange: 20,\r\n\t\tReadCount: 21\r\n\t};\r\n\tCommandType.TOTAL_VALUES = Object.keys(CommandType).length - 1;//-1 because NotSet shoudn't count\r\n\tControlCommand.CommandType = CommandType;\n\n\tlet PushPopType = {\r\n\t\tTunnel: 0,\r\n\t\tFunction: 1,\r\n\t};\n\n\tclass Divert extends Object$1{\r\n\t\tconstructor(stackPushType){\r\n\t\t\tsuper();\r\n\t\t\tthis._targetPath;\r\n\t\t\tthis._targetContent;\r\n\t\t\t\r\n\t\t\tthis.variableDivertName;\r\n\t\t\tthis.pushesToStack;\r\n\t\t\tthis.stackPushType;\r\n\t\t\t\r\n\t\t\tthis.isExternal;\r\n\t\t\tthis.isConditional;\r\n\t\t\tthis.externalArgs;\r\n\t\t\t\r\n\t\t\t//actual constructor\r\n\t\t\tthis.pushesToStack = false;\r\n\t\t\tif (stackPushType){\r\n\t\t\t\tthis.pushesToStack = true;\r\n\t\t\t\tthis.stackPushType = stackPushType;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget targetPath(){\r\n\t\t\t// Resolve any relative paths to global ones as we come across them\r\n\t\t\tif (this._targetPath != null && this._targetPath.isRelative) {\r\n\t\t\t\tvar targetObj = this.targetContent;\r\n\t\t\t\tif (targetObj) {\r\n\t\t\t\t\tthis._targetPath = targetObj.path;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._targetPath;\r\n\t\t}\r\n\t\tset targetPath(value){\r\n\t\t\tthis._targetPath = value;\r\n\t\t\tthis._targetContent = null;\r\n\t\t}\r\n\t\tget targetContent(){\r\n\t\t\tif (this._targetContent == null) {\r\n\t\t\t\tthis._targetContent = this.ResolvePath(this._targetPath);\r\n\t\t\t}\r\n\r\n\t\t\treturn this._targetContent;\r\n\t\t}\r\n\t\tget targetPathString(){\r\n\t\t\tif (this.targetPath == null)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\treturn this.CompactPathString(this.targetPath);\r\n\t\t}\r\n\t\tset targetPathString(value){\r\n\t\t\tif (value == null) {\r\n\t\t\t\tthis.targetPath = null;\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetPath = new Path$1(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tget hasVariableTarget(){\r\n\t\t\treturn this.variableDivertName != null;\r\n\t\t}\r\n\t\t\r\n\t\tEquals(obj){\r\n\t//\t\tvar otherDivert = obj as Divert;\r\n\t\t\tvar otherDivert = obj;\r\n\t\t\tif (otherDivert instanceof Divert) {\r\n\t\t\t\tif (this.hasVariableTarget == otherDivert.hasVariableTarget) {\r\n\t\t\t\t\tif (this.hasVariableTarget) {\r\n\t\t\t\t\t\treturn this.variableDivertName == otherDivert.variableDivertName;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.targetPath.Equals(otherDivert.targetPath);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\tif (this.hasVariableTarget) {\r\n\t\t\t\treturn \"Divert(variable: \" + this.variableDivertName + \")\";\r\n\t\t\t}\r\n\t\t\telse if (this.targetPath == null) {\r\n\t\t\t\treturn \"Divert(null)\";\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar sb = new StringBuilder;\r\n\r\n\t\t\t\tvar targetStr = this.targetPath.toString();\r\n\t//\t\t\tint? targetLineNum = DebugLineNumberOfPath (targetPath);\r\n\t\t\t\tvar targetLineNum = null;\r\n\t\t\t\tif (targetLineNum != null) {\r\n\t\t\t\t\ttargetStr = \"line \" + targetLineNum;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsb.Append(\"Divert\");\r\n\t\t\t\tif (this.pushesToStack) {\r\n\t\t\t\t\tif (this.stackPushType == PushPopType.Function) {\r\n\t\t\t\t\t\tsb.Append(\" function\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsb.Append(\" tunnel\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsb.Append(\" (\");\r\n\t\t\t\tsb.Append(targetStr);\r\n\t\t\t\tsb.Append(\")\");\r\n\r\n\t\t\t\treturn sb.toString();\r\n\t\t\t}\r\n\t\t}\r\n\t}\n\n\tclass ChoicePoint extends Object$1{\r\n\t\tconstructor(onceOnly){\r\n\t\t\tsuper();\r\n\t\t\tthis._pathOnChoice;\r\n\t\t\tthis.hasCondition;\r\n\t\t\tthis.hasStartContent;\r\n\t\t\tthis.hasChoiceOnlyContent;\r\n\t\t\tthis.onceOnly;\r\n\t\t\tthis.isInvisibleDefault;\r\n\t\t\t\r\n\t\t\tthis.onceOnly = !!onceOnly;\r\n\t\t}\r\n\t\tget pathOnChoice(){\r\n\t\t\tif (this._pathOnChoice != null && this._pathOnChoice.isRelative) {\r\n\t\t\t\tvar choiceTargetObj = this.choiceTarget;\r\n\t\t\t\tif (choiceTargetObj) {\r\n\t\t\t\t\tthis._pathOnChoice = choiceTargetObj.path;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._pathOnChoice;\r\n\t\t}\r\n\t\tget choiceTarget(){\r\n\t\t\t//return this.ResolvePath (_pathOnChoice) as Container;\r\n\t\t\treturn this.ResolvePath(this._pathOnChoice);\r\n\t\t}\r\n\t\tget pathStringOnChoice(){\r\n\t\t\treturn this.CompactPathString(this.pathOnChoice);\r\n\t\t}\r\n\t\tset pathStringOnChoice(value){\r\n\t\t\tthis.pathOnChoice = new Path$1(value);\r\n\t\t}\r\n\t\tget flags(){\r\n\t\t\tvar flags = 0;\r\n\t\t\tif (this.hasCondition)         flags |= 1;\r\n\t\t\tif (this.hasStartContent)      flags |= 2;\r\n\t\t\tif (this.hasChoiceOnlyContent) flags |= 4;\r\n\t\t\tif (this.isInvisibleDefault)   flags |= 8;\r\n\t\t\tif (this.onceOnly)             flags |= 16;\r\n\t\t\treturn flags;\r\n\t\t}\r\n\t\tset flags(value){\r\n\t\t\tthis.hasCondition = (value & 1) > 0;\r\n\t\t\tthis.hasStartContent = (value & 2) > 0;\r\n\t\t\tthis.hasChoiceOnlyContent = (value & 4) > 0;\r\n\t\t\tthis.isInvisibleDefault = (value & 8) > 0;\r\n\t\t\tthis.onceOnly = (value & 16) > 0;\r\n\t\t}\r\n\t\tset pathOnChoice(value){\r\n\t\t\tthis._pathOnChoice = value;\r\n\t\t}\r\n\t\t\r\n\t\ttoString(){\r\n\t//\t\tint? targetLineNum = DebugLineNumberOfPath (pathOnChoice);\r\n\t\t\tvar targetLineNum = null;\r\n\t\t\tvar targetString = this.pathOnChoice.toString();\r\n\r\n\t\t\tif (targetLineNum != null) {\r\n\t\t\t\ttargetString = \" line \" + targetLineNum;\r\n\t\t\t} \r\n\r\n\t\t\treturn \"Choice: -> \" + targetString;\r\n\t\t}\r\n\t}\n\n\tclass VariableReference extends Object$1{\r\n\t\tconstructor(name){\r\n\t\t\tsuper();\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.pathForCount;\r\n\t\t}\r\n\t\tget containerForCount(){\r\n\t\t\treturn this.ResolvePath(this.pathForCount);\r\n\t\t}\r\n\t\tget pathStringForCount(){\r\n\t\t\tif( this.pathForCount == null )\r\n\t\t\t\treturn null;\r\n\r\n\t\t\treturn this.CompactPathString(this.pathForCount);\r\n\t\t}\r\n\t\tset pathStringForCount(value){\r\n\t\t\tif (value == null)\r\n\t\t\t\tthis.pathForCount = null;\r\n\t\t\telse\r\n\t\t\t\tthis.pathForCount = new Path$1(value);\r\n\t\t}\r\n\t\t\r\n\t\ttoString(){\r\n\t\t\tif (this.name != null) {\r\n\t\t\t\treturn \"var(\" + this.name + \")\";\r\n\t\t\t} else {\r\n\t\t\t\tvar pathStr = this.pathStringForCount;\r\n\t\t\t\treturn \"read_count(\" + pathStr + \")\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\n\n\tclass VariableAssignment extends Object$1{\r\n\t\tconstructor(variableName, isNewDeclaration){\r\n\t\t\tsuper();\r\n\t\t\tthis._variableName = variableName || null;\r\n\t\t\tthis._isNewDeclaration = !!isNewDeclaration;\r\n\t\t\tthis.isGlobal;\r\n\t\t}\r\n\t\tget variableName(){\r\n\t\t\treturn this._variableName;\r\n\t\t}\r\n\t\tget isNewDeclaration(){\r\n\t\t\treturn this._isNewDeclaration;\r\n\t\t}\r\n\t\t\r\n\t\ttoString(){\r\n\t\t\treturn \"VarAssign to \" + this.variableName;\r\n\t\t}\r\n\t}\n\n\tclass Void extends Object$1{}\n\n\t//misses delegates, probably the returns from function calls\r\n\tclass NativeFunctionCall extends Object$1{\r\n\t\tconstructor(name){\r\n\t\t\tsuper();\r\n\t\t\tthis.name = name;\r\n\t\t\tthis._numberOfParameters;\r\n\t\t\t\r\n\t\t\tthis._prototype;\r\n\t\t\tthis._isPrototype;\r\n\t\t\tthis._operationFuncs = null;\t\r\n\t\t\t\r\n\t\t\tNativeFunctionCall.GenerateNativeFunctionsIfNecessary();\r\n\t\t}\r\n\t\tget name(){\r\n\t\t\treturn this._name;\r\n\t\t}\r\n\t\tset name(value){\r\n\t\t\tthis._name = value;\r\n\t\t\tif( !this._isPrototype )\r\n\t\t\t\tthis._prototype = NativeFunctionCall._nativeFunctions[this._name];\r\n\t\t}\r\n\t\tget numberOfParameters(){\r\n\t\t\tif (this._prototype) {\r\n\t\t\t\treturn this._prototype.numberOfParameters;\r\n\t\t\t} else {\r\n\t\t\t\treturn this._numberOfParameters;\r\n\t\t\t}\r\n\t\t}\r\n\t\tset numberOfParameters(value){\r\n\t\t\tthis._numberOfParameters = value;\r\n\t\t}\r\n\t\t\r\n\t\tstatic internalConstructor(name, numberOfParamters){\r\n\t\t\tvar nativeFunc = new NativeFunctionCall(name);\r\n\t\t\tnativeFunc._isPrototype = true;\r\n\t\t\tnativeFunc.numberOfParameters = numberOfParamters;\r\n\t\t\treturn nativeFunc;\r\n\t\t}\r\n\t\tstatic CallWithName(functionName){\r\n\t\t\treturn new NativeFunctionCall(functionName);\r\n\t\t}\r\n\t\tstatic CallExistsWithName(functionName){\r\n\t\t\tthis.GenerateNativeFunctionsIfNecessary();\r\n\t\t\treturn this._nativeFunctions[functionName];\r\n\t\t}\r\n\t\tCall(parameters){\r\n\t\t\tif (this._prototype) {\r\n\t\t\t\treturn this._prototype.Call(parameters);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.numberOfParameters != parameters.length) {\r\n\t\t\t\tthrow \"Unexpected number of parameters\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar hasList  = false;\r\n\t\t\tparameters.forEach(p => {\r\n\t\t\t\tif (p instanceof Void) throw new StoryException(\"Attempting to perform operation on a void value. Did you forget to 'return' a value from a function you called here?\");\r\n\t\t\t\tif (p instanceof ListValue)\r\n\t\t\t\t\thasList = true;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (parameters.length == 2 && hasList){\r\n\t\t\t\treturn this.CallBinaryListOperation(parameters);\r\n\t\t\t}\r\n\r\n\t\t\tvar coercedParams = this.CoerceValuesToSingleType(parameters);\r\n\t\t\tvar coercedType = coercedParams[0].valueType;\r\n\r\n\t\t\t//Originally CallType gets a type parameter that is used to do some casting, but we can do without.\r\n\t\t\tif (coercedType == ValueType.Int) {\r\n\t\t\t\treturn this.CallType(coercedParams);\r\n\t\t\t} else if (coercedType == ValueType.Float) {\r\n\t\t\t\treturn this.CallType(coercedParams);\r\n\t\t\t} else if (coercedType == ValueType.String) {\r\n\t\t\t\treturn this.CallType(coercedParams);\r\n\t\t\t} else if (coercedType == ValueType.DivertTarget) {\r\n\t\t\t\treturn this.CallType(coercedParams);\r\n\t\t\t} else if (coercedType == ValueType.List) {\r\n\t\t\t\treturn this.CallType(coercedParams);\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tCallType(parametersOfSingleType){\r\n\t\t\tvar param1 = parametersOfSingleType[0];\r\n\t\t\tvar valType = param1.valueType;\r\n\r\n\t\t\tvar val1 = param1;\r\n\r\n\t\t\tvar paramCount = parametersOfSingleType.length;\r\n\r\n\t\t\tif (paramCount == 2 || paramCount == 1) {\r\n\r\n\t\t\t\tvar opForTypeObj = this._operationFuncs[valType];\r\n\t\t\t\tif (!opForTypeObj) {\r\n\t\t\t\t\tthrow new StoryException(\"Cannot perform operation '\"+this.name+\"' on \"+valType);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Binary\r\n\t\t\t\tif (paramCount == 2) {\r\n\t\t\t\t\tvar param2 = parametersOfSingleType[1];\r\n\r\n\t\t\t\t\tvar val2 = param2;\r\n\r\n\t\t\t\t\tvar opForType = opForTypeObj;\r\n\r\n\t\t\t\t\t// Return value unknown until it's evaluated\r\n\t\t\t\t\tvar resultVal = opForType(val1.value, val2.value);\r\n\r\n\t\t\t\t\treturn Value.Create(resultVal);\r\n\t\t\t\t} \r\n\r\n\t\t\t\t// Unary\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\tvar opForType = opForTypeObj;\r\n\r\n\t\t\t\t\tvar resultVal = opForType(val1.value);\r\n\r\n\t\t\t\t\treturn Value.Create(resultVal);\r\n\t\t\t\t}  \r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tthrow \"Unexpected number of parameters to NativeFunctionCall: \" + parametersOfSingleType.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tCallBinaryListOperation(parameters)\r\n\t\t{\r\n\t\t\t// List-Int addition/subtraction returns a List (e.g. \"alpha\" + 1 = \"beta\")\r\n\t\t\tif ((this.name == \"+\" || this.name == \"-\") && parameters[0] instanceof ListValue && parameters[1] instanceof IntValue)\r\n\t\t\t\treturn this.CallListIncrementOperation(parameters);\r\n\r\n\t//\t\tvar v1 = parameters [0] as Value;\r\n\t\t\tvar v1 = parameters[0];\r\n\t//\t\tvar v2 = parameters [1] as Value;\r\n\t\t\tvar v2 = parameters[1];\r\n\r\n\t\t\t// And/or with any other type requires coerscion to bool (int)\r\n\t\t\tif ((this.name == \"&&\" || this.name == \"||\") && (v1.valueType != ValueType.List || v2.valueType != ValueType.List)) {\r\n\t//\t\t\tvar op = _operationFuncs [ValueType.Int] as BinaryOp<int>;\r\n\t\t\t\tvar op = this._operationFuncs[ValueType.Int];\r\n\t\t\t\tvar result = op(v1.isTruthy ? 1 : 0, v2.isTruthy ? 1 : 0);\r\n\t\t\t\treturn new IntValue(result);\r\n\t\t\t}\r\n\r\n\t\t\t// Normal (list • list) operation\r\n\t\t\tif (v1.valueType == ValueType.List && v2.valueType == ValueType.List)\r\n\t\t\t\treturn this.CallType([v1, v2]);\r\n\r\n\t\t\tthrow new StoryException(\"Can not call use '\" + this.name + \"' operation on \" + v1.valueType + \" and \" + v2.valueType);\r\n\t\t}\r\n\t\tCallListIncrementOperation(listIntParams)\r\n\t\t{\r\n\t\t\tvar listVal = listIntParams[0];\r\n\t\t\tvar intVal = listIntParams[1];\r\n\r\n\r\n\t\t\tvar resultInkList = new InkList();\r\n\r\n\t\t\tlistVal.value.forEach(listItemWithValue => {\r\n\t\t\t\tvar listItem = listItemWithValue.Key;\r\n\t\t\t\tvar listItemValue = listItemWithValue.Value;\r\n\r\n\t\t\t\t// Find + or - operation\r\n\t\t\t\tvar intOp = this._operationFuncs[ValueType.Int];\r\n\r\n\t\t\t\t// Return value unknown until it's evaluated\r\n\t\t\t\tvar targetInt = intOp(listItemValue, intVal.value);\r\n\r\n\t\t\t\t// Find this item's origin (linear search should be ok, should be short haha)\r\n\t\t\t\tvar itemOrigin = null;\r\n\t\t\t\tlistVal.value.origins.forEach(function(origin){\r\n\t\t\t\t\tif (origin.name == listItem.originName) {\r\n\t\t\t\t\t\titemOrigin = origin;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (itemOrigin != null) {\r\n\t\t\t\t\tvar incrementedItem = itemOrigin.TryGetItemWithValue(targetInt);\r\n\t\t\t\t\tif (incrementedItem.exists)\r\n\t\t\t\t\t\tresultInkList.Add(incrementedItem.item, targetInt);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn new ListValue(resultInkList);\r\n\t\t}\r\n\t\tCoerceValuesToSingleType(parametersIn){\r\n\t\t\tvar valType = ValueType.Int;\r\n\t\t\t\r\n\t\t\tvar specialCaseList = null;\r\n\r\n\t\t\t// Find out what the output type is\r\n\t\t\t// \"higher level\" types infect both so that binary operations\r\n\t\t\t// use the same type on both sides. e.g. binary operation of\r\n\t\t\t// int and float causes the int to be casted to a float.\r\n\t\t\tparametersIn.forEach(obj => {\r\n\t\t\t\tvar val = obj;\r\n\t\t\t\tif (val.valueType > valType) {\r\n\t\t\t\t\tvalType = val.valueType;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (val.valueType == ValueType.List) {\r\n\t//\t\t\t\t specialCaseList = val as ListValue;\r\n\t\t\t\t\t specialCaseList = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Coerce to this chosen type\r\n\t\t\tvar parametersOut = [];\r\n\t\t\t\r\n\t\t\tif (valType == ValueType.List) {\r\n\t\t\t\tparametersIn.forEach(function(val){\r\n\t\t\t\t\tif (val.valueType == ValueType.List) {\r\n\t\t\t\t\t\tparametersOut.push(val);\r\n\t\t\t\t\t} else if (val.valueType == ValueType.Int) {\r\n\t\t\t\t\t\tvar intVal = parseInt(val.valueObject);\r\n\t\t\t\t\t\tvar list = specialCaseList.value.originOfMaxItem;\r\n\r\n\t\t\t\t\t\tvar item = list.TryGetItemWithValue(intVal);\r\n\t\t\t\t\t\tif (item.exists) {\r\n\t\t\t\t\t\t\tvar castedValue = new ListValue(item.item, intVal);\r\n\t\t\t\t\t\t\tparametersOut.push(castedValue);\r\n\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\tthrow new StoryException(\"Could not find List item with the value \" + intVal + \" in \" + list.name);\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tthrow new StoryException(\"Cannot mix Lists and \" + val.valueType + \" values in this operation\");\r\n\t\t\t\t});\r\n\t\t\t} \r\n\r\n\t\t\t// Normal Coercing (with standard casting)\r\n\t\t\telse {\r\n\t\t\t\tparametersIn.forEach(function(val){\r\n\t\t\t\t\tvar castedValue = val.Cast(valType);\r\n\t\t\t\t\tparametersOut.push(castedValue);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn parametersOut;\r\n\t\t}\r\n\t\tstatic GenerateNativeFunctionsIfNecessary(){\r\n\t\t\tif (this._nativeFunctions == null) {\r\n\t\t\t\tthis._nativeFunctions = {};\r\n\r\n\t\t\t\t// Int operations\r\n\t\t\t\tthis.AddIntBinaryOp(this.Add,      (x, y) => {return x + y});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Subtract, (x, y) => {return x - y});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Multiply, (x, y) => {return x * y});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Divide,   (x, y) => {return parseInt(x / y)});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Mod,      (x, y) => {return x % y}); \r\n\t\t\t\tthis.AddIntUnaryOp(this.Negate,   x => {return -x}); \r\n\r\n\t\t\t\tthis.AddIntBinaryOp(this.Equal,    (x, y) => {return x == y ? 1 : 0});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Greater,  (x, y) => {return x > y  ? 1 : 0});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Less,     (x, y) => {return x < y  ? 1 : 0});\r\n\t\t\t\tthis.AddIntBinaryOp(this.GreaterThanOrEquals, (x, y) => {return x >= y ? 1 : 0});\r\n\t\t\t\tthis.AddIntBinaryOp(this.LessThanOrEquals, (x, y) => {return x <= y ? 1 : 0});\r\n\t\t\t\tthis.AddIntBinaryOp(this.NotEquals, (x, y) => {return x != y ? 1 : 0});\r\n\t\t\t\tthis.AddIntUnaryOp(this.Not,       x => {return (x == 0) ? 1 : 0}); \r\n\r\n\t\t\t\tthis.AddIntBinaryOp(this.And,      (x, y) => {return x != 0 && y != 0 ? 1 : 0});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Or,       (x, y) => {return x != 0 || y != 0 ? 1 : 0});\r\n\r\n\t\t\t\tthis.AddIntBinaryOp(this.Max,      (x, y) => {return Math.max(x, y)});\r\n\t\t\t\tthis.AddIntBinaryOp(this.Min,      (x, y) => {return Math.min(x, y)});\r\n\r\n\t\t\t\t// Float operations\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Add,      (x, y) => {return x + y});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Subtract, (x, y) => {return x - y});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Multiply, (x, y) => {return x * y});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Divide,   (x, y) => {return x / y});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Mod,      (x, y) => {return x % y}); // TODO: Is this the operation we want for floats?\r\n\t\t\t\tthis.AddFloatUnaryOp(this.Negate,   x => {return -x}); \r\n\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Equal,    (x, y) => {return x == y ? 1 : 0});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Greater,  (x, y) => {return x > y  ? 1 : 0});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Less,     (x, y) => {return x < y  ? 1 : 0});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.GreaterThanOrEquals, (x, y) => {return x >= y ? 1 : 0});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.LessThanOrEquals, (x, y) => {return x <= y ? 1 : 0});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.NotEquals, (x, y) => {return x != y ? 1 : 0});\r\n\t\t\t\tthis.AddFloatUnaryOp(this.Not,       x => {return (x == 0.0) ? 1 : 0}); \r\n\r\n\t\t\t\tthis.AddFloatBinaryOp(this.And,      (x, y) => {return x != 0.0 && y != 0.0 ? 1 : 0});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Or,       (x, y) => {return x != 0.0 || y != 0.0 ? 1 : 0});\r\n\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Max,      (x, y) => {return Math.max(x, y)});\r\n\t\t\t\tthis.AddFloatBinaryOp(this.Min,      (x, y) => {return Math.min(x, y)});\r\n\r\n\t\t\t\t// String operations\r\n\t\t\t\tthis.AddStringBinaryOp(this.Add,     \t(x, y) => {return x + y}); // concat\r\n\t\t\t\tthis.AddStringBinaryOp(this.Equal,   \t(x, y) => {return x === y ? 1 : 0});\r\n\t\t\t\tthis.AddStringBinaryOp(this.NotEquals,(x, y) => {return !(x === y) ? 1 : 0});\r\n\t\t\t\t\r\n\t\t\t\tthis.AddListBinaryOp(this.Add, \t\t (x, y) => {return x.Union(y)});\r\n\t\t\t\tthis.AddListBinaryOp(this.Subtract,  (x, y) => {return x.Without(y)});\r\n\t\t\t\tthis.AddListBinaryOp(this.Has, \t\t (x, y) => {return x.Contains(y) ? 1 : 0});\r\n\t\t\t\tthis.AddListBinaryOp(this.Hasnt, \t (x, y) => {return x.Contains(y) ? 0 : 1});\r\n\t\t\t\tthis.AddListBinaryOp(this.Intersect, (x, y) => {return x.Intersect(y)});\r\n\t\t\t\t\r\n\t\t\t\tthis.AddListBinaryOp(this.Equal, \t\t\t\t(x, y) => {return x.Equals(y) ? 1 : 0});\r\n\t\t\t\tthis.AddListBinaryOp(this.Greater, \t\t\t\t(x, y) => {return x.GreaterThan(y) ? 1 : 0});\r\n\t\t\t\tthis.AddListBinaryOp(this.Less, \t\t\t\t(x, y) => {return x.LessThan(y) ? 1 : 0});\r\n\t\t\t\tthis.AddListBinaryOp(this.GreaterThanOrEquals, \t(x, y) => {return x.GreaterThanOrEquals(y) ? 1 : 0});\r\n\t\t\t\tthis.AddListBinaryOp(this.LessThanOrEquals, \t(x, y) => {return x.LessThanOrEquals(y) ? 1 : 0});\r\n\t\t\t\tthis.AddListBinaryOp(this.NotEquals, \t\t\t(x, y) => {return !x.Equals(y) ? 1 : 0});\r\n\r\n\t\t\t\tthis.AddListBinaryOp (this.And, \t\t\t\t(x, y) => {return x.Count > 0 && y.Count > 0 ? 1 : 0});\r\n\t      this.AddListBinaryOp (this.Or,  \t\t\t\t(x, y) => {return x.Count > 0 || y.Count > 0 ? 1 : 0});\r\n\t\t\t\t\r\n\t\t\t\tthis.AddListUnaryOp(this.Not, (x) => {return x.Count == 0 ? 1 : 0});\r\n\r\n\t\t\t\tthis.AddListUnaryOp(this.Invert, (x) => {return x.inverse});\r\n\t\t\t\tthis.AddListUnaryOp(this.All, (x) => {return x.all});\r\n\t\t\t\tthis.AddListUnaryOp(this.ListMin, (x) => {return x.MinAsList()});\r\n\t\t\t\tthis.AddListUnaryOp(this.ListMax, (x) => {return x.MaxAsList()});\r\n\t\t\t\tthis.AddListUnaryOp(this.Count,  (x) => {return x.Count});\r\n\t\t\t\tthis.AddListUnaryOp(this.ValueOfList,  (x) => {return x.maxItem.Value});\r\n\r\n\t\t\t\t// Special case: The only operation you can do on divert target values\r\n\t\t\t\tvar divertTargetsEqual = (d1, d2) => {\r\n\t\t\t\t\treturn d1.Equals(d2) ? 1 : 0;\r\n\t\t\t\t};\r\n\t\t\t\tthis.AddOpToNativeFunc(this.Equal, 2, ValueType.DivertTarget, divertTargetsEqual);\r\n\t\t\t}\r\n\t\t}\r\n\t\tAddOpFuncForType(valType, op){\r\n\t\t\tif (this._operationFuncs == null) {\r\n\t\t\t\tthis._operationFuncs = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis._operationFuncs[valType] = op;\r\n\t\t}\r\n\t\tstatic AddOpToNativeFunc(name, args, valType, op){\r\n\t\t\tvar nativeFunc = this._nativeFunctions[name];\r\n\t\t\tif (!nativeFunc) {\r\n\t\t\t\tnativeFunc = NativeFunctionCall.internalConstructor(name, args);\r\n\t\t\t\tthis._nativeFunctions[name] = nativeFunc;\r\n\t\t\t}\r\n\r\n\t\t\tnativeFunc.AddOpFuncForType(valType, op);\r\n\t\t}\r\n\t\t\r\n\t\tstatic AddIntBinaryOp(name, op){\r\n\t\t\tthis.AddOpToNativeFunc(name, 2, ValueType.Int, op);\r\n\t\t}\r\n\t\tstatic AddIntUnaryOp(name, op){\r\n\t\t\tthis.AddOpToNativeFunc(name, 1, ValueType.Int, op);\r\n\t\t}\r\n\t\t\r\n\t\tstatic AddFloatBinaryOp(name, op){\r\n\t\t\tthis.AddOpToNativeFunc(name, 2, ValueType.Float, op);\r\n\t\t}\r\n\t\tstatic AddFloatUnaryOp(name, op){\r\n\t\t\tthis.AddOpToNativeFunc(name, 1, ValueType.Float, op);\r\n\t\t}\r\n\t\t\r\n\t\tstatic AddStringBinaryOp(name, op){\r\n\t\t\tthis.AddOpToNativeFunc(name, 2, ValueType.String, op);\r\n\t\t}\r\n\t\t\r\n\t\tstatic AddListBinaryOp(name, op){\r\n\t\t\tthis.AddOpToNativeFunc(name, 2, ValueType.List, op);\r\n\t\t}\r\n\t\tstatic AddListUnaryOp(name, op){\r\n\t\t\tthis.AddOpToNativeFunc(name, 1, ValueType.List, op);\r\n\t\t}\r\n\t\t\r\n\t\ttoString(){\r\n\t\t\treturn \"Native '\" + this.name + \"'\";\r\n\t\t}\r\n\t}\r\n\r\n\tNativeFunctionCall.Add \t\t= \"+\";\r\n\tNativeFunctionCall.Subtract = \"-\";\r\n\tNativeFunctionCall.Divide   = \"/\";\r\n\tNativeFunctionCall.Multiply = \"*\";\r\n\tNativeFunctionCall.Mod      = \"%\";\r\n\tNativeFunctionCall.Negate   = \"_\";\r\n\r\n\tNativeFunctionCall.Equal    = \"==\";\r\n\tNativeFunctionCall.Greater  = \">\";\r\n\tNativeFunctionCall.Less     = \"<\";\r\n\tNativeFunctionCall.GreaterThanOrEquals = \">=\";\r\n\tNativeFunctionCall.LessThanOrEquals = \"<=\";\r\n\tNativeFunctionCall.NotEquals   = \"!=\";\r\n\tNativeFunctionCall.Not      = \"!\";\r\n\r\n\tNativeFunctionCall.And      = \"&&\";\r\n\tNativeFunctionCall.Or       = \"||\";\r\n\r\n\tNativeFunctionCall.Min      = \"MIN\";\r\n\tNativeFunctionCall.Max      = \"MAX\";\r\n\r\n\tNativeFunctionCall.Has      = \"?\";\r\n\tNativeFunctionCall.Hasnt    = \"!?\";\r\n\tNativeFunctionCall.Intersect = \"^\";\r\n\r\n\tNativeFunctionCall.ListMin   = \"LIST_MIN\";\r\n\tNativeFunctionCall.ListMax   = \"LIST_MAX\";\r\n\tNativeFunctionCall.All       = \"LIST_ALL\";\r\n\tNativeFunctionCall.Count     = \"LIST_COUNT\";\r\n\tNativeFunctionCall.ValueOfList = \"LIST_VALUE\";\r\n\tNativeFunctionCall.Invert    = \"LIST_INVERT\";\r\n\r\n\tNativeFunctionCall._nativeFunctions = null;\n\n\tclass Tag extends Object$1{\r\n\t\tconstructor(tagText){\r\n\t\t\tsuper();\r\n\t\t\tthis._text = tagText.toString() || '';\r\n\t\t}\r\n\t\tget text(){\r\n\t\t\treturn this._text;\r\n\t\t}\r\n\t\ttoString(){\r\n\t\t\treturn \"# \" + this._text;\r\n\t\t}\r\n\t}\n\n\tclass Choice{\r\n\t\tconstructor(choice){\r\n\t\t\tthis.text;\r\n\t\t\tthis.index;\r\n\t\t\tthis.choicePoint;\r\n\t\t\tthis.threadAtGeneration;\r\n\t\t\t\r\n\t\t\tthis._originalThreadIndex;\r\n\t\t\tthis._originalChoicePath;\r\n\t\t\t\r\n\t\t\tif (choice) this.choicePoint = choice;\r\n\t\t}\r\n\t\tget pathStringOnChoice(){\r\n\t\t\treturn this.choicePoint.pathStringOnChoice;\r\n\t\t}\r\n\t\tget sourcePath(){\r\n\t\t\treturn this.choicePoint.path.componentsString;\r\n\t\t}\r\n\t}\n\n\tclass ListDefinition{\r\n\t\tconstructor(name, items){\r\n\t\t\tthis._name = name || '';\r\n\t\t\tthis._items = null;\r\n\t\t\tthis._rawListItemsKeys = null;\r\n\t\t\tthis._itemNameToValues = items || {};\r\n\t\t}\r\n\t\tget name(){\r\n\t\t\treturn this._name;\r\n\t\t}\r\n\t\tget items(){\r\n\t\t\tif (this._items == null){\r\n\t\t\t\tthis._items = {};\r\n\t\t\t\tthis._rawListItemsKeys = {};\r\n\t\t\t\tfor (var key in this._itemNameToValues){\r\n\t\t\t\t\tvar item = new InkListItem(this.name, key);\r\n\t\t\t\t\tthis._rawListItemsKeys[item] = item;\r\n\t\t\t\t\tthis._items[item] = this._itemNameToValues[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._items.forEach = this.forEachItems.bind(this);\r\n\t\t\t\r\n\t\t\treturn this._items;\r\n\t\t}\r\n\t\tforEachItems(fn){\r\n\t\t\tfor (var key in this._rawListItemsKeys){\r\n\t\t\t\tfn({\r\n\t\t\t\t\tKey: this._rawListItemsKeys[key],\r\n\t\t\t\t\tValue: this._items[key]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tValueForItem(item){\r\n\t\t\tvar intVal = this._itemNameToValues[item.itemName];\r\n\t\t\tif (intVal !== undefined)\r\n\t\t\t\treturn intVal;\r\n\t\t\telse\r\n\t\t\t\treturn 0;\r\n\t\t}\r\n\t\tContainsItem(item){\r\n\t\t\tif (item.originName != this.name) return false;\r\n\r\n\t\t\treturn (item.itemName in this._itemNameToValues);\r\n\t\t}\r\n\t\tContainsItemWithName(itemName){\r\n\t\t\treturn this._itemNameToValues[itemName] !== undefined;\r\n\t\t}\r\n\t\tTryGetItemWithValue(val, item){//item was an out\r\n\t\t\t//the original function returns a boolean and has a second parameter called item that is an `out`. Both are needed and we can't just return the item because it'll always be truthy. Instead, we return an object containing the bool and the item\r\n\t\t\tfor (var key in this._itemNameToValues){\r\n\t\t\t\tif (this._itemNameToValues[key] == val) {\r\n\t\t\t\t\titem = new InkListItem(this.name, key);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\titem :item,\r\n\t\t\t\t\t\texists: true\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\titem = InkListItem.Null;\r\n\t\t\treturn {\r\n\t\t\t\titem :item,\r\n\t\t\t\texists: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tTryGetValueForItem(item, intval){//intval is an out\r\n\t\t\tintVal = this._itemNameToValues[item.itemName];\r\n\t\t\treturn intVal;\r\n\t\t}\r\n\t\tListRange(min, max){\r\n\t\t\tvar rawList = new InkList();\r\n\t\t\tfor (var key in this._itemNameToValues){\r\n\t\t\t\tif (this._itemNameToValues[key] >= min && this._itemNameToValues[key] <= max) {\r\n\t\t\t\t\tvar item = new InkListItem(this.name, key);\r\n\t\t\t\t\trawList.Add(item, this._itemNameToValues[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn new ListValue(rawList);\r\n\t\t}\r\n\t}\n\n\tclass ListDefinitionsOrigin{\r\n\t\tconstructor(lists){\r\n\t\t\tthis._lists = {};\r\n\t\t\t\r\n\t\t\tlists.forEach((list)=>{\r\n\t\t\t\tthis._lists[list.name] = list;\r\n\t\t\t});\r\n\t\t}\r\n\t\tget lists(){\r\n\t\t\tvar listOfLists = [];\r\n\t\t\t\r\n\t\t\tfor (var key in this._lists){\r\n\t\t\t\tlistOfLists.push(this._lists[key]);\r\n\t\t\t}\r\n\t\t\treturn listOfLists;\r\n\t\t}\r\n\t\tTryGetDefinition(name, def){\r\n\t\t\t//initially, this function returns a boolean and the second parameter is an out.\r\n\t\t\treturn (name in this._lists) ? this._lists[name] : def;\r\n\t\t}\r\n\t\tFindSingleItemListWithName(name){\r\n\t\t\tvar item = InkListItem.Null;\r\n\t\t\tvar list = null;\r\n\r\n\t\t\tvar nameParts = name.split('.');\r\n\t\t\tif (nameParts.length == 2) {\r\n\t\t\t\titem = new InkListItem(nameParts[0], nameParts[1]);\r\n\t\t\t\tlist = this.TryGetDefinition(item.originName, list);\r\n\t\t\t} else {\r\n\t\t\t\tfor (var key in this._lists){\r\n\t\t\t\t\tvar listWithItem = this._lists[key];\r\n\t\t\t\t\titem = new InkListItem(key, name);\r\n\t\t\t\t\tif (listWithItem.ContainsItem(item)) {\r\n\t\t\t\t\t\tlist = listWithItem;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (list != null) {\r\n\t\t\t\tvar itemValue = list.ValueForItem(item);\r\n\t\t\t\treturn new ListValue(item, itemValue);\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\n\n\tclass JsonSerialisation{\r\n\t\tstatic ListToJArray(serialisables){\r\n\t\t\tvar jArray = [];\r\n\t\t\tserialisables.forEach(s => {\r\n\t\t\t\tjArray.push(this.RuntimeObjectToJToken(s));\r\n\t\t\t});\r\n\t\t\treturn jArray;\r\n\t\t}\r\n\t\tstatic JArrayToRuntimeObjList(jArray, skipLast){\r\n\t\t\tvar count = jArray.length;\r\n\t\t\tif (skipLast) count--;\r\n\t\t\t\r\n\t\t\tvar list = [];\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < count; i++){\r\n\t\t\t\tvar jTok = jArray[i];\r\n\t\t\t\tvar runtimeObj = this.JTokenToRuntimeObject(jTok);\r\n\t\t\t\tlist.push(runtimeObj);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn list;\r\n\t\t}\r\n\t\tstatic JObjectToDictionaryRuntimeObjs(jObject){\r\n\t\t\tvar dict = {};\r\n\r\n\t\t\tfor (var key in jObject){\r\n\t\t\t\tdict[key] = this.JTokenToRuntimeObject(jObject[key]);\r\n\t\t\t}\r\n\r\n\t\t\treturn dict;\r\n\t\t}\r\n\t\tstatic DictionaryRuntimeObjsToJObject(dictionary){\r\n\t\t\tvar jsonObj = {};\r\n\r\n\t\t\tfor (var key in dictionary){\r\n\t//\t\t\tvar runtimeObj = keyVal.Value as Runtime.Object;\r\n\t\t\t\tvar runtimeObj = dictionary[key];\r\n\t\t\t\tif (runtimeObj instanceof Object$1)\r\n\t\t\t\t\tjsonObj[key] = this.RuntimeObjectToJToken(runtimeObj);\r\n\t\t\t}\r\n\r\n\t\t\treturn jsonObj;\r\n\t\t}\r\n\t\tstatic JObjectToIntDictionary(jObject){\r\n\t\t\tvar dict = {};\r\n\t\t\tfor (var key in jObject){\r\n\t\t\t\tdict[key] = parseInt(jObject[key]);\r\n\t\t\t}\r\n\t\t\treturn dict;\r\n\t\t}\r\n\t\tstatic IntDictionaryToJObject(dict){\r\n\t\t\tvar jObj = {};\r\n\t\t\tfor (var key in dict){\r\n\t\t\t\tjObj[key] = dict[key];\r\n\t\t\t}\r\n\t\t\treturn jObj;\r\n\t\t}\r\n\t\tstatic JTokenToRuntimeObject(token){\r\n\t\t\t//@TODO probably find a more robust way to detect numbers, isNaN seems happy to accept things that really aren't numberish.\r\n\t\t\tif (!isNaN(token) && token !== \"\\n\"){//JS thinks \"\\n\" is a number\r\n\t\t\t\treturn Value.Create(token);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof token === 'string'){\r\n\t\t\t\tvar str = token.toString();\r\n\r\n\t\t\t\t// String value\r\n\t\t\t\tvar firstChar = str[0];\r\n\t\t\t\tif (firstChar == '^')\r\n\t\t\t\t\treturn new StringValue(str.substring(1));\r\n\t\t\t\telse if(firstChar == \"\\n\" && str.length == 1)\r\n\t\t\t\t\treturn new StringValue(\"\\n\");\r\n\r\n\t\t\t\t// Glue\r\n\t\t\t\tif (str == \"<>\")\r\n\t\t\t\t\treturn new Glue(GlueType.Bidirectional);\r\n\t\t\t\telse if(str == \"G<\")\r\n\t\t\t\t\treturn new Glue(GlueType.Left);\r\n\t\t\t\telse if(str == \"G>\")\r\n\t\t\t\t\treturn new Glue(GlueType.Right);\r\n\r\n\t\t\t\t// Control commands (would looking up in a hash set be faster?)\r\n\t\t\t\tfor (var i = 0; i < _controlCommandNames.length; ++i) {\r\n\t\t\t\t\tvar cmdName = _controlCommandNames[i];\r\n\t\t\t\t\tif (str == cmdName) {\r\n\t\t\t\t\t\treturn new ControlCommand(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Native functions\r\n\t\t\t\tif (str == \"L^\") str = \"^\";\r\n\t\t\t\tif( NativeFunctionCall.CallExistsWithName(str) )\r\n\t\t\t\t\treturn NativeFunctionCall.CallWithName(str);\r\n\r\n\t\t\t\t// Pop\r\n\t\t\t\tif (str == \"->->\")\r\n\t\t\t\t\treturn ControlCommand.PopTunnel();\r\n\t\t\t\telse if (str == \"~ret\")\r\n\t\t\t\t\treturn ControlCommand.PopFunction();\r\n\r\n\t\t\t\t// Void\r\n\t\t\t\tif (str == \"void\")\r\n\t\t\t\t\treturn new Void ();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (typeof token === 'object' && token instanceof Array === false){\r\n\t\t\t\tvar obj = token;\r\n\t\t\t\tvar propValue;\r\n\r\n\t\t\t\t// Divert target value to path\r\n\t\t\t\tif (obj[\"^->\"]){\r\n\t\t\t\t\tpropValue = obj[\"^->\"];\r\n\t\t\t\t\treturn new DivertTargetValue(new Path$1(propValue.toString()));\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t// VariablePointerValue\r\n\t\t\t\tif (obj[\"^var\"]) {\r\n\t\t\t\t\tpropValue = obj[\"^var\"];\r\n\t\t\t\t\tvar varPtr = new VariablePointerValue(propValue.toString());\r\n\t\t\t\t\tif (obj[\"ci\"]){\r\n\t\t\t\t\t\tpropValue = obj[\"ci\"];\r\n\t\t\t\t\t\tvarPtr.contextIndex = parseInt(propValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn varPtr;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Divert\r\n\t\t\t\tvar isDivert = false;\r\n\t\t\t\tvar pushesToStack = false;\r\n\t\t\t\tvar divPushType = PushPopType.Function;\r\n\t\t\t\tvar external = false;\r\n\t\t\t\tif (propValue = obj[\"->\"]) {\r\n\t\t\t\t\tisDivert = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (propValue = obj[\"f()\"]) {\r\n\t\t\t\t\tisDivert = true;\r\n\t\t\t\t\tpushesToStack = true;\r\n\t\t\t\t\tdivPushType = PushPopType.Function;\r\n\t\t\t\t}\r\n\t\t\t\telse if (propValue = obj[\"->t->\"]) {\r\n\t\t\t\t\tisDivert = true;\r\n\t\t\t\t\tpushesToStack = true;\r\n\t\t\t\t\tdivPushType = PushPopType.Tunnel;\r\n\t\t\t\t}\r\n\t\t\t\telse if (propValue = obj[\"x()\"]) {\r\n\t\t\t\t\tisDivert = true;\r\n\t\t\t\t\texternal = true;\r\n\t\t\t\t\tpushesToStack = false;\r\n\t\t\t\t\tdivPushType = PushPopType.Function;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (isDivert) {\r\n\t\t\t\t\tvar divert = new Divert();\r\n\t\t\t\t\tdivert.pushesToStack = pushesToStack;\r\n\t\t\t\t\tdivert.stackPushType = divPushType;\r\n\t\t\t\t\tdivert.isExternal = external;\r\n\r\n\t\t\t\t\tvar target = propValue.toString();\r\n\r\n\t\t\t\t\tif (propValue = obj[\"var\"])\r\n\t\t\t\t\t\tdivert.variableDivertName = target;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdivert.targetPathString = target;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdivert.isConditional = !!obj[\"c\"];\r\n\r\n\t\t\t\t\tif (external) {\r\n\t\t\t\t\t\tif (propValue = obj[\"exArgs\"])\r\n\t\t\t\t\t\t\tdivert.externalArgs = parseInt(propValue);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn divert;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Choice\r\n\t\t\t\tif (propValue = obj[\"*\"]) {\r\n\t\t\t\t\tvar choice = new ChoicePoint();\r\n\t\t\t\t\tchoice.pathStringOnChoice = propValue.toString();\r\n\r\n\t\t\t\t\tif (propValue = obj[\"flg\"])\r\n\t\t\t\t\t\tchoice.flags = parseInt(propValue);\r\n\r\n\t\t\t\t\treturn choice;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Variable reference\r\n\t\t\t\tif (propValue = obj[\"VAR?\"]) {\r\n\t\t\t\t\treturn new VariableReference(propValue.toString());\r\n\t\t\t\t} else if (propValue = obj[\"CNT?\"]) {\r\n\t\t\t\t\tvar readCountVarRef = new VariableReference();\r\n\t\t\t\t\treadCountVarRef.pathStringForCount = propValue.toString();\r\n\t\t\t\t\treturn readCountVarRef;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Variable assignment\r\n\t\t\t\tvar isVarAss = false;\r\n\t\t\t\tvar isGlobalVar = false;\r\n\t\t\t\tif (propValue = obj[\"VAR=\"]) {\r\n\t\t\t\t\tisVarAss = true;\r\n\t\t\t\t\tisGlobalVar = true;\r\n\t\t\t\t} else if (propValue = obj[\"temp=\"]) {\r\n\t\t\t\t\tisVarAss = true;\r\n\t\t\t\t\tisGlobalVar = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (isVarAss) {\r\n\t\t\t\t\tvar varName = propValue.toString();\r\n\t\t\t\t\tvar isNewDecl = !obj[\"re\"];\r\n\t\t\t\t\tvar varAss = new VariableAssignment(varName, isNewDecl);\r\n\t\t\t\t\tvarAss.isGlobal = isGlobalVar;\r\n\t\t\t\t\treturn varAss;\r\n\t\t\t\t}\r\n\t\t\t\tif (obj[\"#\"] !== undefined){\r\n\t\t\t\t\tpropValue = obj[\"#\"];\r\n\t\t\t\t\treturn new Tag(propValue.toString());\r\n\t\t\t\t}\r\n\t\t\t\t//list value\r\n\t\t\t\tif (propValue = obj[\"list\"]) {\r\n\t//\t\t\t\tvar listContent = (Dictionary<string, object>)propValue;\r\n\t\t\t\t\tvar listContent = propValue;\r\n\t\t\t\t\tvar rawList = new InkList();\r\n\t\t\t\t\tif (propValue = obj[\"origins\"]) {\r\n\t//\t\t\t\t\tvar namesAsObjs = (List<object>)propValue;\r\n\t\t\t\t\t\tvar namesAsObjs = propValue;\r\n\t//\t\t\t\t\trawList.SetInitialOriginNames(namesAsObjs.Cast<string>().ToList());\r\n\t\t\t\t\t\trawList.SetInitialOriginNames(namesAsObjs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var key in listContent){\r\n\t\t\t\t\t\tvar nameToVal = listContent[key];\r\n\t\t\t\t\t\tvar item = new InkListItem(key);\r\n\t\t\t\t\t\tvar val = parseInt(nameToVal);\r\n\t\t\t\t\t\trawList.Add(item, val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn new ListValue(rawList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (obj[\"originalChoicePath\"] != null)\r\n\t\t\t\t\treturn this.JObjectToChoice(obj);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Array is always a Runtime.Container\r\n\t\t\tif (token instanceof Array){\r\n\t\t\t\treturn this.JArrayToContainer(token);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (token == null)\r\n\t                return null;\r\n\t\t\t\r\n\t\t\tthrow \"Failed to convert token to runtime object: \" + JSON.stringify(token);\r\n\t\t}\r\n\t\tstatic RuntimeObjectToJToken(obj){\r\n\t//\t\tvar container = obj as Container;\r\n\t\t\tvar container = obj;\r\n\t\t\tif (container instanceof Container) {\r\n\t\t\t\treturn this.ContainerToJArray(container);\r\n\t\t\t}\r\n\r\n\t//\t\tvar divert = obj as Divert;\r\n\t\t\tvar divert = obj;\r\n\t\t\tif (divert instanceof Divert) {\r\n\t\t\t\tvar divTypeKey = \"->\";\r\n\t\t\t\tif (divert.isExternal)\r\n\t\t\t\t\tdivTypeKey = \"x()\";\r\n\t\t\t\telse if (divert.pushesToStack) {\r\n\t\t\t\t\tif (divert.stackPushType == PushPopType.Function)\r\n\t\t\t\t\t\tdivTypeKey = \"f()\";\r\n\t\t\t\t\telse if (divert.stackPushType == PushPopType.Tunnel)\r\n\t\t\t\t\t\tdivTypeKey = \"->t->\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar targetStr;\r\n\t\t\t\tif (divert.hasVariableTarget)\r\n\t\t\t\t\ttargetStr = divert.variableDivertName;\r\n\t\t\t\telse\r\n\t\t\t\t\ttargetStr = divert.targetPathString;\r\n\r\n\t\t\t\tvar jObj = {};\r\n\t\t\t\tjObj[divTypeKey] = targetStr;\r\n\r\n\t\t\t\tif (divert.hasVariableTarget)\r\n\t\t\t\t\tjObj[\"var\"] = true;\r\n\t\t\t\t\r\n\t\t\t\tif (divert.isConditional)\r\n\t\t\t\t\tjObj[\"c\"] = true;\r\n\r\n\t\t\t\tif (divert.externalArgs > 0)\r\n\t\t\t\t\tjObj[\"exArgs\"] = divert.externalArgs;\r\n\r\n\t\t\t\treturn jObj;\r\n\t\t\t}\r\n\r\n\t//\t\tvar choicePoint = obj as ChoicePoint;\r\n\t\t\tvar choicePoint = obj;\r\n\t\t\tif (choicePoint instanceof ChoicePoint) {\r\n\t\t\t\tvar jObj = {};\r\n\t\t\t\tjObj[\"*\"] = choicePoint.pathStringOnChoice;\r\n\t\t\t\tjObj[\"flg\"] = choicePoint.flags;\r\n\t\t\t\treturn jObj;\r\n\t\t\t}\r\n\r\n\t//\t\tvar intVal = obj as IntValue;\r\n\t\t\tvar intVal = obj;\r\n\t\t\tif (intVal instanceof IntValue)\r\n\t\t\t\treturn intVal.value;\r\n\r\n\t//\t\tvar floatVal = obj as FloatValue;\r\n\t\t\tvar floatVal = obj;\r\n\t\t\tif (floatVal instanceof FloatValue)\r\n\t\t\t\treturn floatVal.value;\r\n\r\n\t//\t\tvar strVal = obj as StringValue;\r\n\t\t\tvar strVal = obj;\r\n\t\t\tif (strVal instanceof StringValue) {\r\n\t\t\t\tif (strVal.isNewline)\r\n\t\t\t\t\treturn \"\\n\";\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"^\" + strVal.value;\r\n\t\t\t}\r\n\t\t\t\r\n\t//\t\tvar listVal = obj as ListValue;\r\n\t\t\tvar listVal = obj;\r\n\t\t\tif (listVal instanceof ListValue) {\r\n\t\t\t\treturn this.InkListToJObject(listVal);\r\n\t\t\t}\r\n\r\n\t//\t\tvar divTargetVal = obj as DivertTargetValue;\r\n\t\t\tvar divTargetVal = obj;\r\n\t\t\tif (divTargetVal instanceof DivertTargetValue)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"^->\": divTargetVal.value.componentsString\r\n\t\t\t\t};\r\n\r\n\t//\t\tvar varPtrVal = obj as VariablePointerValue;\r\n\t\t\tvar varPtrVal = obj;\r\n\t\t\tif (varPtrVal instanceof VariablePointerValue)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"^var\": varPtrVal.value,\r\n\t\t\t\t\t\"ci\": varPtrVal.contextIndex\r\n\t\t\t\t};\r\n\r\n\t//\t\tvar glue = obj as Runtime.Glue;\r\n\t\t\tvar glue = obj;\r\n\t\t\tif (glue instanceof Glue) {\r\n\t\t\t\tif (glue.isBi)\r\n\t\t\t\t\treturn \"<>\";\r\n\t\t\t\telse if (glue.isLeft)\r\n\t\t\t\t\treturn \"G<\";\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"G>\";\r\n\t\t\t}\r\n\r\n\t//\t\tvar controlCmd = obj as ControlCommand;\r\n\t\t\tvar controlCmd = obj;\r\n\t\t\tif (controlCmd instanceof ControlCommand) {\r\n\t\t\t\treturn _controlCommandNames[parseInt(controlCmd.commandType)];\r\n\t\t\t}\r\n\r\n\t//\t\tvar nativeFunc = obj as Runtime.NativeFunctionCall;\r\n\t\t\tvar nativeFunc = obj;\r\n\t\t\tif (nativeFunc instanceof NativeFunctionCall) {\r\n\t\t\t\tvar name = nativeFunc.name;\r\n\r\n\t\t\t\t// Avoid collision with ^ used to indicate a string\r\n\t\t\t\tif (name == \"^\") name = \"L^\";\r\n\t\t\t\treturn name;\r\n\t\t\t}\r\n\r\n\t\t\t// Variable reference\r\n\t//\t\tvar varRef = obj as VariableReference;\r\n\t\t\tvar varRef = obj;\r\n\t\t\tif (varRef instanceof VariableReference) {\r\n\t\t\t\tvar jObj = {};\r\n\t\t\t\tvar readCountPath = varRef.pathStringForCount;\r\n\t\t\t\tif (readCountPath != null) {\r\n\t\t\t\t\tjObj[\"CNT?\"] = readCountPath;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tjObj[\"VAR?\"] = varRef.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn jObj;\r\n\t\t\t}\r\n\r\n\t\t\t// Variable assignment\r\n\t//\t\tvar varAss = obj as VariableAssignment;\r\n\t\t\tvar varAss = obj;\r\n\t\t\tif (varAss instanceof VariableAssignment) {\r\n\t\t\t\tvar key = varAss.isGlobal ? \"VAR=\" : \"temp=\";\r\n\t\t\t\tvar jObj = {};\r\n\t\t\t\tjObj[key] = varAss.variableName;\r\n\r\n\t\t\t\t// Reassignment?\r\n\t\t\t\tif (!varAss.isNewDeclaration)\r\n\t\t\t\t\tjObj[\"re\"] = true;\r\n\r\n\t\t\t\treturn jObj;\r\n\t\t\t}\r\n\r\n\t//\t\tvar voidObj = obj as Void;\r\n\t\t\tvar voidObj = obj;\r\n\t\t\tif (voidObj instanceof Void)\r\n\t\t\t\treturn \"void\";\r\n\t\t\r\n\t//\t\tvar tag = obj as Tag;\r\n\t\t\tvar tag = obj;\r\n\t\t\tif (tag instanceof Tag) {\r\n\t\t\t\tvar jObj = {};\r\n\t\t\t\tjObj[\"#\"] = tag.text;\r\n\t\t\t\treturn jObj;\r\n\t\t\t}\r\n\r\n\t\t\t// Used when serialising save state only\r\n\t//\t\tvar choice = obj as Choice;\r\n\t\t\tvar choice = obj;\r\n\t\t\tif (choice instanceof Choice)\r\n\t\t\t\treturn this.ChoiceToJObject(choice);\r\n\r\n\t\t\tthrow \"Failed to convert runtime object to Json token: \" + obj;\r\n\t\t}\r\n\t\tstatic ContainerToJArray(container){\r\n\t\t\tvar jArray = this.ListToJArray(container.content);\r\n\r\n\t\t\t// Container is always an array [...]\r\n\t\t\t// But the final element is always either:\r\n\t\t\t//  - a dictionary containing the named content, as well as possibly\r\n\t\t\t//    the key \"#\" with the count flags\r\n\t\t\t//  - null, if neither of the above\r\n\t\t\tvar namedOnlyContent = container.namedOnlyContent;\r\n\t\t\tvar countFlags = container.countFlags;\r\n\t\t\tif (namedOnlyContent != null && namedOnlyContent.length > 0 || countFlags > 0 || container.name != null) {\r\n\r\n\t\t\t\tvar terminatingObj;\r\n\t\t\t\tif (namedOnlyContent != null) {\r\n\t\t\t\t\tterminatingObj = this.DictionaryRuntimeObjsToJObject(namedOnlyContent);\r\n\r\n\t\t\t\t\t// Strip redundant names from containers if necessary\r\n\t\t\t\t\tfor (var key in terminatingObj){\r\n\t//\t\t\t\t\tvar subContainerJArray = namedContentObj.Value as JArray;\r\n\t\t\t\t\t\tvar subContainerJArray = terminatingObj[key];\r\n\t\t\t\t\t\tif (subContainerJArray != null) {\r\n\t//\t\t\t\t\t\tvar attrJObj = subContainerJArray [subContainerJArray.Count - 1] as JObject;\r\n\t\t\t\t\t\t\tvar attrJObj = subContainerJArray[subContainerJArray.length - 1];\r\n\t\t\t\t\t\t\tif (attrJObj != null) {\r\n\t\t\t\t\t\t\t\tdelete attrJObj[\"#n\"];\r\n\t\t\t\t\t\t\t\tif (Object.keys(attrJObj).length == 0)\r\n\t\t\t\t\t\t\t\t\tsubContainerJArray[subContainerJArray.length - 1] = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else\r\n\t\t\t\t\tterminatingObj = {};\r\n\r\n\t\t\t\tif( countFlags > 0 )\r\n\t\t\t\t\tterminatingObj[\"#f\"] = countFlags;\r\n\r\n\t\t\t\tif( container.name != null )\r\n\t\t\t\t\tterminatingObj[\"#n\"] = container.name;\r\n\r\n\t\t\t\tjArray.push(terminatingObj);\r\n\t\t\t} \r\n\r\n\t\t\t// Add null terminator to indicate that there's no dictionary\r\n\t\t\telse {\r\n\t\t\t\tjArray.push(null);\r\n\t\t\t}\r\n\r\n\t\t\treturn jArray;\r\n\t\t}\r\n\t\tstatic JArrayToContainer(jArray){\r\n\t\t\tvar container = new Container();\r\n\t\t\tcontainer.content = this.JArrayToRuntimeObjList(jArray, true);\r\n\r\n\t\t\t// Final object in the array is always a combination of\r\n\t\t\t//  - named content\r\n\t\t\t//  - a \"#\" key with the countFlags\r\n\t\t\t// (if either exists at all, otherwise null)\r\n\t//\t\tvar terminatingObj = jArray [jArray.Count - 1] as JObject;\r\n\t\t\tvar terminatingObj = jArray[jArray.length - 1];\r\n\t\t\tif (terminatingObj != null) {\r\n\r\n\t\t\t\tvar namedOnlyContent = {};\r\n\t\t\t\t\r\n\t\t\t\tfor (var key in terminatingObj){\r\n\t\t\t\t\tif (key == \"#f\") {\r\n\t\t\t\t\t\tcontainer.countFlags = parseInt(terminatingObj[key]);\r\n\t\t\t\t\t} else if (key == \"#n\") {\r\n\t\t\t\t\t\tcontainer.name = terminatingObj[key].toString();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar namedContentItem = this.JTokenToRuntimeObject(terminatingObj[key]);\r\n\t//\t\t\t\t\tvar namedSubContainer = namedContentItem as Container;\r\n\t\t\t\t\t\tvar namedSubContainer = namedContentItem;\r\n\t\t\t\t\t\tif (namedSubContainer instanceof Container)\r\n\t\t\t\t\t\t\tnamedSubContainer.name = key;\r\n\t\t\t\t\t\tnamedOnlyContent[key] = namedContentItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainer.namedOnlyContent = namedOnlyContent;\r\n\t\t\t}\r\n\r\n\t\t\treturn container;\r\n\t\t}\r\n\t\tstatic JObjectToChoice(jObj){\r\n\t\t\tvar choice = new Choice();\r\n\t\t\tchoice.text = jObj[\"text\"].toString();\r\n\t\t\tchoice.index = parseInt(jObj[\"index\"]);\r\n\t\t\tchoice.originalChoicePath = jObj[\"originalChoicePath\"].toString();\r\n\t\t\tchoice.originalThreadIndex = parseInt(jObj[\"originalThreadIndex\"]);\r\n\t\t\treturn choice;\r\n\t\t}\r\n\t\tstatic ChoiceToJObject(choice){\r\n\t\t\tvar jObj = {};\r\n\t\t\tjObj[\"text\"] = choice.text;\r\n\t\t\tjObj[\"index\"] = choice.index;\r\n\t\t\tjObj[\"originalChoicePath\"] = choice.originalChoicePath;\r\n\t\t\tjObj[\"originalThreadIndex\"] = choice.originalThreadIndex;\r\n\t\t\treturn jObj;\r\n\t\t}\r\n\t\tstatic InkListToJObject (listVal){\r\n\t\t\tvar rawList = listVal.value;\r\n\r\n\t\t\tvar dict = {};\r\n\r\n\t\t\tvar content = {};\r\n\t\t\t\r\n\t\t\trawList.forEach(function(itemAndValue){\r\n\t\t\t\tvar item = itemAndValue.Key;\r\n\t\t\t\tvar val = itemAndValue.Value;\r\n\t\t\t\tcontent[item.toString()] = val;\r\n\t\t\t});\r\n\r\n\t\t\tdict[\"list\"] = content;\r\n\r\n\t\t\tif (rawList.Count == 0 && rawList.originNames != null && rawList.originNames.length > 0) {\r\n\t//\t\t\tdict[\"origins\"] = rawList.originNames.Cast<object> ().ToList ();\r\n\t\t\t\tdict[\"origins\"] = rawList.originNames;\r\n\t\t\t}\r\n\r\n\t\t\treturn dict;\r\n\t\t}\r\n\t\tstatic ListDefinitionsToJToken(origin){\r\n\t\t\tvar result = {};\r\n\t\t\t\r\n\t\t\torigin.lists.forEach(function(def){\r\n\t\t\t\tvar listDefJson = {};\r\n\t\t\t\tdef.items.forEach(function(itemToVal){\r\n\t\t\t\t\tvar item = itemToVal.Key;\r\n\t\t\t\t\tvar val = itemToVal.Value;\r\n\t\t\t\t\tlistDefJson[item.itemName] = val;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tresult[def.name] = listDefJson;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tstatic JTokenToListDefinitions(obj){\r\n\t//\t\tvar defsObj = (Dictionary<string, object>)obj;\r\n\t\t\tvar defsObj = obj;\r\n\r\n\t\t\tvar allDefs = [];\r\n\t\t\t\r\n\t\t\tfor (var key in defsObj){\r\n\t\t\t\tvar name = key.toString();\r\n\t//\t\t\tvar listDefJson = (Dictionary<string, object>)kv.Value;\r\n\t\t\t\tvar listDefJson = defsObj[key];\r\n\r\n\t\t\t\t// Cast (string, object) to (string, int) for items\r\n\t\t\t\tvar items = {};\r\n\t\t\t\t\r\n\t\t\t\tfor (var nameValueKey in listDefJson){\r\n\t\t\t\t\tvar nameValue = listDefJson[nameValueKey];\r\n\t\t\t\t\titems[nameValueKey] = parseInt(nameValue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar def = new ListDefinition(name, items);\r\n\t\t\t\tallDefs.push(def);\r\n\t\t\t}\r\n\r\n\t\t\treturn new ListDefinitionsOrigin(allDefs);\r\n\t\t}\r\n\t}\r\n\r\n\tvar _controlCommandNames = [];\r\n\r\n\t_controlCommandNames[ControlCommand.CommandType.EvalStart] = \"ev\";\r\n\t_controlCommandNames[ControlCommand.CommandType.EvalOutput] = \"out\";\r\n\t_controlCommandNames[ControlCommand.CommandType.EvalEnd] = \"/ev\";\r\n\t_controlCommandNames[ControlCommand.CommandType.Duplicate] = \"du\";\r\n\t_controlCommandNames[ControlCommand.CommandType.PopEvaluatedValue] = \"pop\";\r\n\t_controlCommandNames[ControlCommand.CommandType.PopFunction] = \"~ret\";\r\n\t_controlCommandNames[ControlCommand.CommandType.PopTunnel] = \"->->\";\r\n\t_controlCommandNames[ControlCommand.CommandType.BeginString] = \"str\";\r\n\t_controlCommandNames[ControlCommand.CommandType.EndString] = \"/str\";\r\n\t_controlCommandNames[ControlCommand.CommandType.NoOp] = \"nop\";\r\n\t_controlCommandNames[ControlCommand.CommandType.ChoiceCount] = \"choiceCnt\";\r\n\t_controlCommandNames[ControlCommand.CommandType.TurnsSince] = \"turns\";\r\n\t_controlCommandNames[ControlCommand.CommandType.ReadCount] = \"readc\";\r\n\t_controlCommandNames[ControlCommand.CommandType.Random] = \"rnd\";\r\n\t_controlCommandNames[ControlCommand.CommandType.SeedRandom] = \"srnd\";\r\n\t_controlCommandNames[ControlCommand.CommandType.VisitIndex] = \"visit\";\r\n\t_controlCommandNames[ControlCommand.CommandType.SequenceShuffleIndex] = \"seq\";\r\n\t_controlCommandNames[ControlCommand.CommandType.StartThread] = \"thread\";\r\n\t_controlCommandNames[ControlCommand.CommandType.Done] = \"done\";\r\n\t_controlCommandNames[ControlCommand.CommandType.End] = \"end\";\r\n\t_controlCommandNames[ControlCommand.CommandType.ListFromInt] = \"listInt\";\r\n\t_controlCommandNames[ControlCommand.CommandType.ListRange] = \"range\";\r\n\r\n\tfor (var i$1 = 0; i$1 < ControlCommand.CommandType.TOTAL_VALUES; ++i$1) {\r\n\t\tif (_controlCommandNames[i$1] == null)\r\n\t\t\tthrow \"Control command not accounted for in serialisation\";\r\n\t}\n\n\tclass Element{\r\n\t\tconstructor(type, container, contentIndex, inExpressionEvaluation){\r\n\t\t\tthis.currentContainer = container;\r\n\t\t\tthis.currentContentIndex = contentIndex;\r\n\t\t\tthis.inExpressionEvaluation = inExpressionEvaluation || false;\r\n\t\t\tthis.temporaryVariables = {};\r\n\t\t\tthis.type = type;\r\n\t\t}\r\n\t\tget currentObject(){\r\n\t\t\tif (this.currentContainer && this.currentContentIndex < this.currentContainer.content.length) {\r\n\t\t\t\treturn this.currentContainer.content[this.currentContentIndex];\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tset currentObject(value){\r\n\t\t\tvar currentObj = value;\r\n\t\t\tif (currentObj == null) {\r\n\t\t\t\tthis.currentContainer = null;\r\n\t\t\t\tthis.currentContentIndex = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t//\t\tcurrentContainer = currentObj.parent as Container;\r\n\t\t\tthis.currentContainer = currentObj.parent;\r\n\t\t\tif (this.currentContainer instanceof Container)\r\n\t\t\t\tthis.currentContentIndex = this.currentContainer.content.indexOf(currentObj);\r\n\r\n\t\t\t// Two reasons why the above operation might not work:\r\n\t\t\t//  - currentObj is already the root container\r\n\t\t\t//  - currentObj is a named container rather than being an object at an index\r\n\t\t\tif (this.currentContainer instanceof Container === false || this.currentContentIndex == -1) {\r\n\t//\t\t\tcurrentContainer = currentObj as Container;\r\n\t\t\t\tthis.currentContainer = currentObj;\r\n\t\t\t\tthis.currentContentIndex = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tCopy(){\r\n\t\t\tvar copy = new Element(this.type, this.currentContainer, this.currentContentIndex, this.inExpressionEvaluation);\r\n\t\t\tObject.assign(copy.temporaryVariables, this.temporaryVariables);\r\n\t\t\treturn copy;\r\n\t\t}\r\n\t}\r\n\r\n\tclass Thread{\r\n\t\tconstructor(jsonToken, storyContext){\r\n\t\t\tthis.callstack = [];\r\n\t\t\tthis.threadIndex = 0;\r\n\t\t\tthis.previousContentObject = null;\r\n\t\t\t\r\n\t\t\tif (jsonToken && storyContext){\r\n\t\t\t\tvar jThreadObj = jsonToken;\r\n\t\t\t\tthis.threadIndex = parseInt(jThreadObj[\"threadIndex\"]);\r\n\r\n\t\t\t\tvar jThreadCallstack = jThreadObj[\"callstack\"];\r\n\t\t\t\t\r\n\t\t\t\tjThreadCallstack.forEach(jElTok => {\r\n\t\t\t\t\tvar jElementObj = jElTok;\r\n\r\n\t\t\t\t\tvar pushPopType = parseInt(jElementObj[\"type\"]);\r\n\r\n\t\t\t\t\tvar currentContainer = null;\r\n\t\t\t\t\tvar contentIndex = 0;\r\n\r\n\t\t\t\t\tvar currentContainerPathStr = null;\r\n\t\t\t\t\tvar currentContainerPathStrToken = jElementObj[\"cPath\"];\r\n\t\t\t\t\tif (typeof currentContainerPathStrToken !== 'undefined') {\r\n\t\t\t\t\t\tcurrentContainerPathStr = currentContainerPathStrToken.toString();\r\n\t//\t\t\t\t\tcurrentContainer = storyContext.ContentAtPath (new Path(currentContainerPathStr)) as Container;\r\n\t\t\t\t\t\tcurrentContainer = storyContext.ContentAtPath(new Path$1(currentContainerPathStr));\r\n\t\t\t\t\t\tcontentIndex = parseInt(jElementObj[\"idx\"]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar inExpressionEvaluation = !!jElementObj[\"exp\"];\r\n\r\n\t\t\t\t\tvar el = new Element(pushPopType, currentContainer, contentIndex, inExpressionEvaluation);\r\n\r\n\t\t\t\t\tvar jObjTemps = jElementObj[\"temp\"];\r\n\t\t\t\t\tel.temporaryVariables = JsonSerialisation.JObjectToDictionaryRuntimeObjs(jObjTemps);\r\n\r\n\t\t\t\t\tthis.callstack.push(el);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tvar prevContentObjPath = jThreadObj[\"previousContentObject\"];\r\n\t\t\t\tif(typeof prevContentObjPath  !== 'undefined') {\r\n\t\t\t\t\tvar prevPath = new Path$1(prevContentObjPath.toString());\r\n\t\t\t\t\tthis.previousContentObject = storyContext.ContentAtPath(prevPath);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tget jsonToken(){\r\n\t\t\tvar threadJObj = {};\r\n\r\n\t\t\tvar jThreadCallstack = [];\r\n\t\t\tthis.callstack.forEach(el => {\r\n\t\t\t\tvar jObj = {};\r\n\t\t\t\tif (el.currentContainer) {\r\n\t\t\t\t\tjObj[\"cPath\"] = el.currentContainer.path.componentsString;\r\n\t\t\t\t\tjObj[\"idx\"] = el.currentContentIndex;\r\n\t\t\t\t}\r\n\t\t\t\tjObj[\"exp\"] = el.inExpressionEvaluation;\r\n\t\t\t\tjObj[\"type\"] = parseInt(el.type);\r\n\t\t\t\tjObj[\"temp\"] = JsonSerialisation.DictionaryRuntimeObjsToJObject(el.temporaryVariables);\r\n\t\t\t\tjThreadCallstack.push(jObj);\r\n\t\t\t});\r\n\r\n\t\t\tthreadJObj[\"callstack\"] = jThreadCallstack;\r\n\t\t\tthreadJObj[\"threadIndex\"] = this.threadIndex;\r\n\t\t\t\r\n\t\t\tif (this.previousContentObject != null)\r\n\t\t\t\tthreadJObj[\"previousContentObject\"] = this.previousContentObject.path.toString();\r\n\r\n\t\t\treturn threadJObj;\r\n\t\t}\r\n\t\tCopy(){\r\n\t\t\tvar copy = new Thread();\r\n\t\t\tcopy.threadIndex = this.threadIndex;\r\n\t\t\tthis.callstack.forEach(e => {\r\n\t\t\t\tcopy.callstack.push(e.Copy());\r\n\t\t\t});\r\n\t\t\tcopy.previousContentObject = this.previousContentObject;\r\n\t\t\treturn copy;\r\n\t\t}\r\n\t}\r\n\r\n\tclass CallStack{\r\n\t\tconstructor(copyOrrootContentContainer){\r\n\t\t\tthis._threads = [];\r\n\t\t\tthis._threadCounter = 0;\r\n\t\t\tthis._threads.push(new Thread());\r\n\t\t\t\r\n\t\t\tif (copyOrrootContentContainer instanceof CallStack){\r\n\t\t\t\tthis._threads = [];\r\n\t\t\t\t\r\n\t\t\t\tcopyOrrootContentContainer._threads.forEach(otherThread => {\r\n\t\t\t\t\tthis._threads.push(otherThread.Copy());\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t        \tthis._threads[0].callstack.push(new Element(PushPopType.Tunnel, copyOrrootContentContainer, 0));\r\n\t\t\t}\r\n\t\t}\r\n\t\tget currentThread(){\r\n\t\t\treturn this._threads[this._threads.length - 1];\r\n\t\t}\r\n\t\tset currentThread(value){\r\n\t\t\tif (this._threads.length != 1) console.warn(\"Shouldn't be directly setting the current thread when we have a stack of them\");\r\n\t\t\t\r\n\t\t\tthis._threads.length = 0;\r\n\t\t\tthis._threads.push(value);\r\n\t\t}\r\n\t\tget callStack(){\r\n\t\t\treturn this.currentThread.callstack;\r\n\t\t}\r\n\t\tget elements(){\r\n\t\t\treturn this.callStack;\r\n\t\t}\r\n\t\tget depth(){\r\n\t\t\treturn this.elements.length;\r\n\t\t}\r\n\t\tget currentElement(){\r\n\t\t\treturn this.callStack[this.callStack.length - 1];\r\n\t\t}\r\n\t\tget currentElementIndex(){\r\n\t\t\treturn this.callStack.length - 1;\r\n\t\t}\r\n\t\tget canPop(){\r\n\t\t\treturn this.callStack.length > 1;\r\n\t\t}\r\n\t\tget canPopThread(){\r\n\t\t\treturn this._threads.length > 1;\r\n\t\t}\r\n\t\t\r\n\t\tCanPop(type){\r\n\t\t\tif (!this.canPop)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (type == null)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\treturn this.currentElement.type == type;\r\n\t\t}\r\n\t\tPop(type){\r\n\t\t\tif (this.CanPop(type)) {\r\n\t\t\t\tthis.callStack.pop();\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthrow \"Mismatched push/pop in Callstack\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tPush(type){\r\n\t\t\t// When pushing to callstack, maintain the current content path, but jump out of expressions by default\r\n\t\t\tthis.callStack.push(new Element(type, this.currentElement.currentContainer, this.currentElement.currentContentIndex, false));\r\n\t\t}\r\n\t\tPushThread(){\r\n\t\t\tvar newThread = this.currentThread.Copy();\r\n\t\t\tthis._threadCounter++;\r\n\t\t\tnewThread.threadIndex = this._threadCounter;\r\n\t\t\tthis._threads.push(newThread);\r\n\t\t}\r\n\t\tPopThread(){\r\n\t\t\tif (this.canPopThread) {\r\n\t\t\t\tthis._threads.splice(this._threads.indexOf(this.currentThread), 1);//should be equivalent to a pop()\r\n\t\t\t} else {\r\n\t\t\t\tthrow \"Can't pop thread\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tSetJsonToken(token, storyContext){\r\n\t\t\tthis._threads.length = 0;\r\n\r\n\t\t\tvar jObject = token;\r\n\r\n\t\t\tvar jThreads = jObject[\"threads\"];\r\n\t\t\t\r\n\t\t\tjThreads.forEach(jThreadTok => {\r\n\t\t\t\tvar thread = new Thread(jThreadTok, storyContext);\r\n\t\t\t\tthis._threads.push(thread);\r\n\t\t\t});\r\n\r\n\t\t\tthis._threadCounter = parseInt(jObject[\"threadCounter\"]);\r\n\t\t}\r\n\t\tGetJsonToken(){\r\n\t\t\tvar jObject = {};\r\n\r\n\t\t\tvar jThreads = [];\r\n\t\t\tthis._threads.forEach(thread => {\r\n\t\t\t\tjThreads.push(thread.jsonToken);\r\n\t\t\t});\r\n\r\n\t\t\tjObject[\"threads\"] = jThreads;\r\n\t\t\tjObject[\"threadCounter\"] = this._threadCounter;\r\n\r\n\t\t\treturn jObject;\r\n\t\t}\r\n\t\tGetTemporaryVariableWithName(name, contextIndex){\r\n\t\t\tcontextIndex = (typeof contextIndex === 'undefined') ? -1 : contextIndex;\r\n\t\t\t\r\n\t\t\tif (contextIndex == -1) \r\n\t\t\t\tcontextIndex = this.currentElementIndex + 1;\r\n\t\t\t\r\n\t\t\tvar varValue = null;\r\n\r\n\t\t\tvar contextElement = this.callStack[contextIndex - 1];\r\n\r\n\t\t\tif (varValue = contextElement.temporaryVariables[name]) {\r\n\t\t\t\treturn varValue;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tSetTemporaryVariable(name, value, declareNew, contextIndex){\r\n\t\t\tcontextIndex = (typeof contextIndex === 'undefined') ? -1 : contextIndex;\r\n\t\t\t\r\n\t\t\tif (contextIndex == -1) \r\n\t\t\t\tcontextIndex = this.currentElementIndex + 1;\r\n\r\n\t\t\tvar contextElement = this.callStack[contextIndex - 1];\r\n\r\n\t\t\tif (!declareNew && !contextElement.temporaryVariables[name]) {\r\n\t\t\t\tthrow new StoryException(\"Could not find temporary variable to set: \" + name);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar oldValue;\r\n\t\t\tif( oldValue = contextElement.temporaryVariables[name] )\r\n\t\t\t\tListValue.RetainListOriginsForAssignment(oldValue, value);\r\n\r\n\t\t\tcontextElement.temporaryVariables[name] = value;\r\n\t\t}\r\n\t\tContextForVariableNamed(name){\r\n\t\t\t// Current temporary context?\r\n\t\t\t// (Shouldn't attempt to access contexts higher in the callstack.)\r\n\t\t\tif (this.currentElement.temporaryVariables[name]) {\r\n\t\t\t\treturn this.currentElementIndex + 1;\r\n\t\t\t} \r\n\r\n\t\t\t// Global\r\n\t\t\telse {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tThreadWithIndex(index){\r\n\t\t\tvar filtered = this._threads.filter(t => {\r\n\t\t\t\tif (t.threadIndex == index) return t;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn filtered[0];\r\n\t\t}\r\n\t}\n\n\t//still needs: \r\n\t// - varchanged events\r\n\t// - see if the internal getenumarators are needed\r\n\tclass VariablesState{\r\n\t\tconstructor(callStack, listDefsOrigin){\r\n\t\t\tthis._globalVariables = {};\r\n\t\t\tthis._callStack = callStack;\r\n\t\t\tthis._listDefsOrigin = listDefsOrigin;\r\n\t\t\t\r\n\t\t\tthis._batchObservingVariableChanges = null;\r\n\t\t\tthis._changedVariables = null;\r\n\t\t\t\r\n\t\t\t//the way variableChangedEvent is a bit different than the reference implementation. Originally it uses the C# += operator to add delegates, but in js we need to maintain an actual collection of delegates (ie. callbacks)\r\n\t\t\t//to register a new one, there is a special ObserveVariableChange method below.\r\n\t\t\tthis.variableChangedEvent = null;\r\n\t\t\tthis.variableChangedEventCallbacks = [];\r\n\t\t\t\r\n\t\t\t//if es6 proxies are available, use them.\r\n\t\t\ttry{\r\n\t\t\t\t//the proxy is used to allow direct manipulation of global variables. It first tries to access the objetcs own property, and if none is found it delegates the call to the $ method, defined below\r\n\t\t\t\tvar p = new Proxy(this, {\r\n\t\t\t\t\tget: function(target, name){\r\n\t\t\t\t\t\treturn (name in target) ? target[name] : target.$(name);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tset: function(target, name, value){\r\n\t\t\t\t\t\tif (name in target) target[name] = value;\r\n\t\t\t\t\t\telse target.$(name, value);\r\n\t\t\t\t\t\treturn true;//returning a fasly value make sthe trap fail\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\treturn p;\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\t//thr proxy object is not available in this context. we should warn the dev but writting to the console feels a bit intrusive.\r\n\t//\t\t\tconsole.log(\"ES6 Proxy not available - direct manipulation of global variables can't work, use $() instead.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tget callStack(){\r\n\t\t\treturn this._callStack;\r\n\t\t}\r\n\t\tset callStack(callStack){\r\n\t\t\tthis._callStack = callStack;\r\n\t\t}\r\n\t\tget batchObservingVariableChanges(){\r\n\t\t\treturn this._batchObservingVariableChanges;\r\n\t\t}\r\n\t\tset batchObservingVariableChanges(value){\r\n\t\t\tvalue = !!value;\r\n\t\t\tthis._batchObservingVariableChanges = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis._changedVariables = [];\r\n\t\t\t} \r\n\r\n\t\t\t// Finished observing variables in a batch - now send \r\n\t\t\t// notifications for changed variables all in one go.\r\n\t\t\telse {\r\n\t\t\t\tif (this._changedVariables != null) {\r\n\t\t\t\t\tthis._changedVariables.forEach(variableName => {\r\n\t\t\t\t\t\tvar currentValue = this._globalVariables[variableName];\r\n\t\t\t\t\t\tthis.variableChangedEvent(variableName, currentValue);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._changedVariables = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget jsonToken(){\r\n\t\t\treturn JsonSerialisation.DictionaryRuntimeObjsToJObject(this._globalVariables);\r\n\t\t}\r\n\t\tset jsonToken(value){\r\n\t\t\tthis._globalVariables = JsonSerialisation.JObjectToDictionaryRuntimeObjs(value);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * This function is specific to the js version of ink. It allows to register a callback that will be called when a variable changes. The original code uses `state.variableChangedEvent += callback` instead.\r\n\t\t * @param {function} callback \r\n\t\t */\r\n\t\tObserveVariableChange(callback){\r\n\t\t\tif (this.variableChangedEvent == null){\r\n\t\t\t\tthis.variableChangedEvent = (variableName, newValue) => {\r\n\t\t\t\t\tthis.variableChangedEventCallbacks.forEach(cb => {\r\n\t\t\t\t\t\tcb(variableName, newValue);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.variableChangedEventCallbacks.push(callback);\r\n\t\t}\r\n\t\tCopyFrom(toCopy){\r\n\t\t\tthis._globalVariables = Object.assign({}, toCopy._globalVariables);\r\n\t\t\t\r\n\t\t\tthis.variableChangedEvent = toCopy.variableChangedEvent;\r\n\r\n\t\t\tif (toCopy.batchObservingVariableChanges != this.batchObservingVariableChanges) {\r\n\r\n\t\t\t\tif (toCopy.batchObservingVariableChanges) {\r\n\t\t\t\t\tthis._batchObservingVariableChanges = true;\r\n\t\t\t\t\tthis._changedVariables = toCopy._changedVariables;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._batchObservingVariableChanges = false;\r\n\t\t\t\t\tthis._changedVariables = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tGetVariableWithName(name,contextIndex){\r\n\t\t\tif (typeof contextIndex === 'undefined') contextIndex = -1;\r\n\t\t\t\r\n\t\t\tvar varValue = this.GetRawVariableWithName(name, contextIndex);\r\n\r\n\t\t\t// Get value from pointer?\r\n\t//\t\tvar varPointer = varValue as VariablePointerValue;\r\n\t\t\tvar varPointer = varValue;\r\n\t\t\tif (varPointer instanceof VariablePointerValue) {\r\n\t\t\t\tvarValue = this.ValueAtVariablePointer(varPointer);\r\n\t\t\t}\r\n\r\n\t\t\treturn varValue;\r\n\t\t}\r\n\t\tGetRawVariableWithName(name, contextIndex){\r\n\t\t\tvar varValue = null;\r\n\r\n\t\t\t// 0 context = global\r\n\t\t\tif (contextIndex == 0 || contextIndex == -1) {\r\n\t\t\t\tif ( varValue = this._globalVariables[name] )\r\n\t\t\t\t\treturn varValue;\r\n\t\t\t\t\r\n\t\t\t\tvar listItemValue = this._listDefsOrigin.FindSingleItemListWithName(name);\r\n\t\t\t\tif (listItemValue)\r\n\t\t\t\t\treturn listItemValue;\r\n\t\t\t}\r\n\r\n\t\t\t// Temporary\r\n\t\t\tvarValue = this._callStack.GetTemporaryVariableWithName(name, contextIndex);\r\n\r\n\t\t\tif (varValue == null)\r\n\t\t\t\tthrow \"RUNTIME ERROR: Variable '\"+name+\"' could not be found in context '\"+contextIndex+\"'. This shouldn't be possible so is a bug in the ink engine. Please try to construct a minimal story that reproduces the problem and report to inkle, thank you!\";\r\n\r\n\t\t\treturn varValue;\r\n\t\t}\r\n\t\tValueAtVariablePointer(pointer){\r\n\t\t\t return this.GetVariableWithName(pointer.variableName, pointer.contextIndex);\r\n\t\t}\r\n\t\tAssign(varAss, value){\r\n\t\t\tvar name = varAss.variableName;\r\n\t\t\tvar contextIndex = -1;\r\n\r\n\t\t\t// Are we assigning to a global variable?\r\n\t\t\tvar setGlobal = false;\r\n\t\t\tif (varAss.isNewDeclaration) {\r\n\t\t\t\tsetGlobal = varAss.isGlobal;\r\n\t\t\t} else {\r\n\t\t\t\tsetGlobal = !!this._globalVariables[name];\r\n\t\t\t}\r\n\r\n\t\t\t// Constructing new variable pointer reference\r\n\t\t\tif (varAss.isNewDeclaration) {\r\n\t//\t\t\tvar varPointer = value as VariablePointerValue;\r\n\t\t\t\tvar varPointer = value;\r\n\t\t\t\tif (varPointer instanceof VariablePointerValue) {\r\n\t\t\t\t\tvar fullyResolvedVariablePointer = this.ResolveVariablePointer(varPointer);\r\n\t\t\t\t\tvalue = fullyResolvedVariablePointer;\r\n\t\t\t\t}\r\n\r\n\t\t\t} \r\n\r\n\t\t\t// Assign to existing variable pointer?\r\n\t\t\t// Then assign to the variable that the pointer is pointing to by name.\r\n\t\t\telse {\r\n\r\n\t\t\t\t// De-reference variable reference to point to\r\n\t\t\t\tvar existingPointer = null;\r\n\t\t\t\tdo {\r\n\t//\t\t\t\texistingPointer = GetRawVariableWithName (name, contextIndex) as VariablePointerValue;\r\n\t\t\t\t\texistingPointer = this.GetRawVariableWithName(name, contextIndex);\r\n\t\t\t\t\tif (existingPointer instanceof VariablePointerValue) {\r\n\t\t\t\t\t\tname = existingPointer.variableName;\r\n\t\t\t\t\t\tcontextIndex = existingPointer.contextIndex;\r\n\t\t\t\t\t\tsetGlobal = (contextIndex == 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} while(existingPointer instanceof VariablePointerValue);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (setGlobal) {\r\n\t\t\t\tthis.SetGlobal(name, value);\r\n\t\t\t} else {\r\n\t\t\t\tthis._callStack.SetTemporaryVariable(name, value, varAss.isNewDeclaration, contextIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\tRetainListOriginsForAssignment(oldValue, newValue){\r\n\t//\t\tvar oldList = oldValue as ListValue;\r\n\t\t\tvar oldList = oldValue;\r\n\t//\t\tvar newList = newValue as ListValue;\r\n\t\t\tvar newList = newValue;\r\n\t\t\t\r\n\t\t\tif (oldList instanceof ListValue && newList instanceof ListValue && newList.value.Count == 0)\r\n\t\t\t\tnewList.value.SetInitialOriginNames(oldList.value.originNames);\r\n\t\t}\r\n\t\tSetGlobal(variableName, value){\r\n\t\t\tvar oldValue = null;\r\n\t\t\toldValue = this._globalVariables[variableName];\r\n\t\t\t\r\n\t\t\tListValue.RetainListOriginsForAssignment(oldValue, value);\r\n\r\n\t\t\tthis._globalVariables[variableName] = value;\r\n\r\n\t\t\tif (this.variableChangedEvent != null && value !== oldValue) {\r\n\r\n\t\t\t\tif (this.batchObservingVariableChanges) {\r\n\t\t\t\t\tthis._changedVariables.push(variableName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.variableChangedEvent(variableName, value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tResolveVariablePointer(varPointer){\r\n\t\t\tvar contextIndex = varPointer.contextIndex;\r\n\r\n\t\t\tif( contextIndex == -1 )\r\n\t\t\t\tcontextIndex = this.GetContextIndexOfVariableNamed(varPointer.variableName);\r\n\r\n\t\t\tvar valueOfVariablePointedTo = this.GetRawVariableWithName(varPointer.variableName, contextIndex);\r\n\r\n\t\t\t// Extra layer of indirection:\r\n\t\t\t// When accessing a pointer to a pointer (e.g. when calling nested or \r\n\t\t\t// recursive functions that take a variable references, ensure we don't create\r\n\t\t\t// a chain of indirection by just returning the final target.\r\n\t//\t\tvar doubleRedirectionPointer = valueOfVariablePointedTo as VariablePointerValue;\r\n\t\t\tvar doubleRedirectionPointer = valueOfVariablePointedTo;\r\n\t\t\tif (doubleRedirectionPointer instanceof VariablePointerValue) {\r\n\t\t\t\treturn doubleRedirectionPointer;\r\n\t\t\t} \r\n\r\n\t\t\t// Make copy of the variable pointer so we're not using the value direct from\r\n\t\t\t// the runtime. Temporary must be local to the current scope.\r\n\t\t\telse {\r\n\t\t\t\treturn new VariablePointerValue(varPointer.variableName, contextIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t\tGetContextIndexOfVariableNamed(varName){\r\n\t\t\tif (this._globalVariables[varName])\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\treturn this._callStack.currentElementIndex;\r\n\t\t}\r\n\t\t//the original code uses a magic getter and setter for global variables, allowing things like variableState['varname]. This is not quite possible in js without a Proxy, so it is replaced with this $ function.\r\n\t\t$(variableName, value){\r\n\t\t\tif (typeof value === 'undefined'){\r\n\t\t\t\tvar varContents = this._globalVariables[variableName];\r\n\t\t\t\tif ( typeof varContents !== 'undefined' )\r\n\t\t//\t\t\treturn (varContents as Runtime.Value).valueObject;\r\n\t\t\t\t\treturn varContents.valueObject;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif (typeof this._globalVariables[variableName] === 'undefined'){\r\n\t\t\t\t\tthrow new StoryException(\"Variable '\" + variableName + \"' doesn't exist, so can't be set.\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar val = Value.Create(value);\r\n\t\t\t\tif (val == null) {\r\n\t\t\t\t\tif (value == null) {\r\n\t\t\t\t\t\tthrow new StoryException(\"Cannot pass null to VariableState\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new StoryException(\"Invalid value passed to VariableState: \"+value.toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.SetGlobal(variableName, val);\r\n\t\t\t}\r\n\t\t}\r\n\t}\n\n\t//Taken from https://gist.github.com/blixt/f17b47c62508be59987b\r\n\t//Ink uses a seedable PRNG of which there is none in native javascript.\r\n\tclass PRNG{\r\n\t\tconstructor(seed){\r\n\t\t\tthis._seed = seed % 2147483647;\r\n\t  \t\tif (this._seed <= 0) this._seed += 2147483646;\r\n\t\t}\r\n\t\tnext(){\r\n\t\t\treturn this._seed = this._seed * 16807 % 2147483647;\r\n\t\t}\r\n\t\tnextFloat(){\r\n\t\t\treturn (this.next() - 1) / 2147483646;\r\n\t\t}\r\n\t}\n\n\tclass StoryState{\r\n\t\tconstructor(story){\t\t\r\n\t\t\t//actual constructor\r\n\t\t\tthis.story = story;\r\n\t\t\t\r\n\t\t\tthis._outputStream = [];\r\n\t\t\tthis._outputStreamTextDirty = true;\r\n\t\t\tthis._outputStreamTagsDirty = true;\r\n\t\t\tthis.OutputStreamDirty();\r\n\r\n\t\t\tthis._evaluationStack = [];\r\n\r\n\t\t\tthis.callStack = new CallStack(story.rootContentContainer);\r\n\t\t\tthis._variablesState = new VariablesState(this.callStack, story.listDefinitions);\r\n\r\n\t\t\tthis._visitCounts = {};\r\n\t\t\tthis._turnIndices = {};\r\n\t\t\tthis._currentTurnIndex = -1;\r\n\t\t\t\r\n\t\t\tthis.divertedTargetObject = null;\r\n\r\n\t\t\tvar timeSeed = (new Date()).getTime();\r\n\t\t\tthis.storySeed = (new PRNG(timeSeed)).next() % 100;\r\n\t\t\tthis.previousRandom = 0;\r\n\r\n\t\t\tthis._currentChoices = [];\r\n\t\t\tthis._currentText = null;\r\n\t\t\tthis._currentTags = null;\r\n\t\t\tthis._currentErrors = null;\r\n\t\t\t\r\n\t\t\tthis.didSafeExit = false;\r\n\t\t\t\r\n\t\t\tthis._isExternalFunctionEvaluation = false;\r\n\t\t\tthis._originalCallstack = null;\r\n\t\t\tthis._originalEvaluationStackHeight = 0;\r\n\r\n\t\t\tthis.GoToStart();\r\n\t\t}\r\n\t\tget currentChoices(){\r\n\t\t\t// If we can continue generating text content rather than choices,\r\n\t\t\t// then we reflect the choice list as being empty, since choices\r\n\t\t\t// should always come at the end.\r\n\t\t\tif ( this.canContinue ) return [];\r\n\t\t\treturn this._currentChoices;\r\n\t\t}\r\n\t\tget generatedChoices(){\r\n\t\t\treturn this._currentChoices;\r\n\t\t}\r\n\t\tget currentErrors(){\r\n\t\t\treturn this._currentErrors;\r\n\t\t}\r\n\t\tget visitCounts(){\r\n\t\t\treturn this._visitCounts;\r\n\t\t}\r\n\t\tget turnIndices(){\r\n\t\t\treturn this._turnIndices;\r\n\t\t}\r\n\t\tget currentTurnIndex(){\r\n\t\t\treturn this._currentTurnIndex;\r\n\t\t}\r\n\t\tget variablesState(){\r\n\t\t\treturn this._variablesState;\r\n\t\t}\r\n\t\tget currentContentObject(){\r\n\t\t\treturn this.callStack.currentElement.currentObject;\r\n\t\t}\r\n\t\tset currentContentObject(value){\r\n\t\t\tthis.callStack.currentElement.currentObject = value;\r\n\t\t}\r\n\t\tget canContinue(){\r\n\t\t\treturn this.currentContentObject != null && !this.hasError;\r\n\t\t}\r\n\t\tget hasError(){\r\n\t\t\treturn this.currentErrors != null && this.currentErrors.length > 0;\r\n\t\t}\r\n\t\tget inExpressionEvaluation(){\r\n\t\t\treturn this.callStack.currentElement.inExpressionEvaluation;\r\n\t\t}\r\n\t\tset inExpressionEvaluation(value){\r\n\t\t\tthis.callStack.currentElement.inExpressionEvaluation = value;\r\n\t\t}\r\n\t\tget evaluationStack(){\r\n\t\t\treturn this._evaluationStack;\r\n\t\t}\r\n\t\tget outputStreamEndsInNewline(){\r\n\t\t\tif (this._outputStream.length > 0) {\r\n\r\n\t\t\t\tfor (var i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tvar obj = this._outputStream[i];\r\n\t\t\t\t\tif (obj instanceof ControlCommand) // e.g. BeginString\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tvar text = this._outputStream[i];\r\n\t\t\t\t\tif (text instanceof StringValue) {\r\n\t\t\t\t\t\tif (text.isNewline)\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\telse if (text.isNonWhitespace)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tget outputStreamContainsContent(){\r\n\t\t\tfor (var i = 0; i < this._outputStream.length; i++){\r\n\t\t\t\tif (this._outputStream[i] instanceof StringValue)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tget currentGlueIndex(){\r\n\t\t\tfor (var i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t\tvar c = this._outputStream[i];\r\n\t//\t\t\tvar glue = c as Glue;\r\n\t\t\t\tvar glue = c;\r\n\t\t\t\tif (glue instanceof Glue)\r\n\t\t\t\t\treturn i;\r\n\t\t\t\telse if (c instanceof ControlCommand) // e.g. BeginString\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tget currentRightGlue(){\r\n\t\t\tfor (var i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t\tvar c = this._outputStream[i];\r\n\t//\t\t\tvar glue = c as Glue;\r\n\t\t\t\tvar glue = c;\r\n\t\t\t\tif (glue instanceof Glue && glue.isRight)\r\n\t\t\t\t\treturn glue;\r\n\t\t\t\telse if (c instanceof ControlCommand) // e.g. BeginString\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tget inStringEvaluation(){\r\n\t\t\tfor (var i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t//\t\t\tvar cmd = this._outputStream[i] as ControlCommand;\r\n\t\t\t\tvar cmd = this._outputStream[i];\r\n\t\t\t\tif (cmd instanceof ControlCommand && cmd.commandType == ControlCommand.CommandType.BeginString) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tget currentText(){\r\n\t\t\tif( this._outputStreamTextDirty ) {\r\n\t\t\t\tvar sb = new StringBuilder();\r\n\r\n\t\t\t\tthis._outputStream.forEach(outputObj => {\r\n\t\t//\t\t\tvar textContent = outputObj as StringValue;\r\n\t\t\t\t\tvar textContent = outputObj;\r\n\t\t\t\t\tif (textContent instanceof StringValue) {\r\n\t\t\t\t\t\tsb.Append(textContent.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._currentText = sb.toString();\r\n\t\t\t\tthis._outputStreamTextDirty = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._currentText;\r\n\t\t}\r\n\t\tget currentTags(){\r\n\t\t\tif( this._outputStreamTagsDirty ) {\r\n\t\t\t\tthis._currentTags = [];\r\n\r\n\t\t\t\tthis._outputStream.forEach(outputObj => {\r\n\t\t//\t\t\tvar tag = outputObj as Tag;\r\n\t\t\t\t\tvar tag = outputObj;\r\n\t\t\t\t\tif (tag instanceof Tag) {\r\n\t\t\t\t\t\tthis._currentTags.push(tag.text);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis._outputStreamTagsDirty = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this._currentTags;\r\n\t\t}\r\n\t\tget outputStream(){\r\n\t\t\treturn this._outputStream;\r\n\t\t}\r\n\t\tget currentPath(){\r\n\t\t\tif (this.currentContentObject == null)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\treturn this.currentContentObject.path;\r\n\t\t}\r\n\t\tset currentPath(value){\r\n\t\t\tif (value != null)\r\n\t\t\t\tthis.currentContentObject = this.story.ContentAtPath(value);\r\n\t\t\telse\r\n\t\t\t\tthis.currentContentObject = null;\r\n\t\t}\r\n\t\tget currentContainer(){\r\n\t\t\treturn this.callStack.currentElement.currentContainer;\r\n\t\t}\r\n\t\tget previousContentObject(){\r\n\t\t\treturn this.callStack.currentThread.previousContentObject;\r\n\t\t}\r\n\t\tset previousContentObject(value){\r\n\t\t\tthis.callStack.currentThread.previousContentObject = value;\r\n\t\t}\r\n\t\tget callstackDepth(){\r\n\t\t\treturn this.callStack.depth;\r\n\t\t}\r\n\t\tget jsonToken(){\r\n\t\t\tvar obj = {};\r\n\r\n\t\t\tvar choiceThreads = null;\r\n\t\t\tthis._currentChoices.forEach(c => {\r\n\t\t\t\tc.originalChoicePath = c.choicePoint.path.componentsString;\r\n\t\t\t\tc.originalThreadIndex = c.threadAtGeneration.threadIndex;\r\n\r\n\t\t\t\tif( this.callStack.ThreadWithIndex(c.originalThreadIndex) == null ) {\r\n\t\t\t\t\tif( choiceThreads == null )\r\n\t\t\t\t\t\tchoiceThreads = {};\r\n\r\n\t\t\t\t\tchoiceThreads[c.originalThreadIndex.toString()] = c.threadAtGeneration.jsonToken;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif( this.choiceThreads != null )\r\n\t\t\t\tobj[\"choiceThreads\"] = this.choiceThreads;\r\n\r\n\r\n\t\t\tobj[\"callstackThreads\"] = this.callStack.GetJsonToken();\r\n\t\t\tobj[\"variablesState\"] = this.variablesState.jsonToken;\r\n\r\n\t\t\tobj[\"evalStack\"] = JsonSerialisation.ListToJArray(this.evaluationStack);\r\n\r\n\t\t\tobj[\"outputStream\"] = JsonSerialisation.ListToJArray(this._outputStream);\r\n\r\n\t\t\tobj[\"currentChoices\"] = JsonSerialisation.ListToJArray(this._currentChoices);\r\n\t\t\t\r\n\t\t\tif( this.divertedTargetObject != null )\r\n\t\t\t\tobj[\"currentDivertTarget\"] = this.divertedTargetObject.path.componentsString;\r\n\r\n\t\t\tobj[\"visitCounts\"] = JsonSerialisation.IntDictionaryToJObject(this.visitCounts);\r\n\t\t\tobj[\"turnIndices\"] = JsonSerialisation.IntDictionaryToJObject(this.turnIndices);\r\n\t\t\tobj[\"turnIdx\"] = this.currentTurnIndex;\r\n\t\t\tobj[\"storySeed\"] = this.storySeed;\r\n\r\n\t\t\tobj[\"inkSaveVersion\"] = StoryState.kInkSaveStateVersion;\r\n\r\n\t\t\t// Not using this right now, but could do in future.\r\n\t\t\tobj[\"inkFormatVersion\"] = this.story.inkVersionCurrent;\r\n\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\tset jsonToken(value){\r\n\t\t\tvar jObject = value;\r\n\r\n\t\t\tvar jSaveVersion = jObject[\"inkSaveVersion\"];\r\n\t\t\tif (jSaveVersion == null) {\r\n\t\t\t\tthrow new StoryException(\"ink save format incorrect, can't load.\");\r\n\t\t\t}\r\n\t\t\telse if (parseInt(jSaveVersion) < StoryState.kMinCompatibleLoadVersion) {\r\n\t\t\t\tthrow new StoryException(\"Ink save format isn't compatible with the current version (saw '\"+jSaveVersion+\"', but minimum is \"+StoryState.kMinCompatibleLoadVersion+\"), so can't load.\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.callStack.SetJsonToken(jObject[\"callstackThreads\"], this.story);\r\n\t\t\tthis.variablesState.jsonToken = jObject[\"variablesState\"];\r\n\r\n\t\t\tthis._evaluationStack = JsonSerialisation.JArrayToRuntimeObjList(jObject[\"evalStack\"]);\r\n\r\n\t\t\tthis._outputStream = JsonSerialisation.JArrayToRuntimeObjList(jObject[\"outputStream\"]);\r\n\t\t\tthis.OutputStreamDirty();\r\n\r\n\t//\t\tcurrentChoices = Json.JArrayToRuntimeObjList<Choice>((JArray)jObject [\"currentChoices\"]);\r\n\t\t\tthis._currentChoices = JsonSerialisation.JArrayToRuntimeObjList(jObject[\"currentChoices\"]);\r\n\r\n\t\t\tvar currentDivertTargetPath = jObject[\"currentDivertTarget\"];\r\n\t\t\tif (currentDivertTargetPath != null) {\r\n\t\t\t\tvar divertPath = new Path$1(currentDivertTargetPath.toString());\r\n\t\t\t\tthis.divertedTargetObject = this.story.ContentAtPath(divertPath);\r\n\t\t\t}\r\n\r\n\t\t\tthis._visitCounts = JsonSerialisation.JObjectToIntDictionary(jObject[\"visitCounts\"]);\r\n\t\t\tthis._turnIndices = JsonSerialisation.JObjectToIntDictionary(jObject[\"turnIndices\"]);\r\n\t\t\tthis._currentTurnIndex = parseInt(jObject[\"turnIdx\"]);\r\n\t\t\tthis.storySeed = parseInt(jObject[\"storySeed\"]);\r\n\r\n\t//\t\tvar jChoiceThreads = jObject[\"choiceThreads\"] as JObject;\r\n\t\t\tvar jChoiceThreads = jObject[\"choiceThreads\"];\r\n\t\t\t\r\n\t\t\tthis._currentChoices.forEach(c => {\r\n\t\t\t\tc.choicePoint = this.story.ContentAtPath(new Path$1(c.originalChoicePath));\r\n\r\n\t\t\t\tvar foundActiveThread = this.callStack.ThreadWithIndex(c.originalThreadIndex);\r\n\t\t\t\tif( foundActiveThread != null ) {\r\n\t\t\t\t\tc.threadAtGeneration = foundActiveThread;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar jSavedChoiceThread = jChoiceThreads[c.originalThreadIndex.toString()];\r\n\t\t\t\t\tc.threadAtGeneration = new CallStack.Thread(jSavedChoiceThread, this.story);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tMatchRightGlueForLeftGlue(leftGlue){\r\n\t\t\tif (!leftGlue.isLeft) return null;\r\n\t\t\t\r\n\t\t\tfor (var i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t\tvar c = this._outputStream[i];\r\n\t//\t\t\tvar g = c as Glue;\r\n\t\t\t\tvar g = c;\r\n\t\t\t\tif (g instanceof Glue && g.isRight && g.parent == leftGlue.parent) {\r\n\t\t\t\t\treturn g;\r\n\t\t\t\t} else if (c instanceof ControlCommand) // e.g. BeginString\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tGoToStart(){\r\n\t\t\tthis.callStack.currentElement.currentContainer = this.story.mainContentContainer;\r\n\t        this.callStack.currentElement.currentContentIndex = 0;\r\n\t\t}\r\n\t\tResetErrors(){\r\n\t\t\tthis._currentErrors = null;\r\n\t\t}\r\n\t\tResetOutput(){\r\n\t\t\tthis._outputStream.length = 0;\r\n\t\t\tthis.OutputStreamDirty();\r\n\t\t}\r\n\t\tPushEvaluationStack(obj){\r\n\t//\t\tvar listValue = obj as ListValue;\r\n\t\t\tvar listValue = obj;\r\n\t\t\tif (listValue instanceof ListValue) {\r\n\r\n\t\t\t\t// Update origin when list is has something to indicate the list origin\r\n\t\t\t\tvar rawList = listValue.value;\r\n\t\t\t\tvar names = rawList.originNames;\r\n\t\t\t\tif (names != null) {\r\n\t\t\t\t\tvar origins = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tnames.forEach((n)=>{\r\n\t\t\t\t\t\tvar def = null;\r\n\t\t\t\t\t\tdef = this.story.listDefinitions.TryGetDefinition(n, def);\r\n\t\t\t\t\t\tif( origins.indexOf(def) < 0 )\r\n\t\t\t\t\t\t\torigins.push(def);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\trawList.origins = origins;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.evaluationStack.push(obj);\r\n\t\t}\r\n\t\tPopEvaluationStack(numberOfObjects){\r\n\t\t\tif (!numberOfObjects){\r\n\t\t\t\tvar obj = this.evaluationStack.pop();\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(numberOfObjects > this.evaluationStack.length) {\r\n\t                throw \"trying to pop too many objects\";\r\n\t            }\r\n\r\n\t            var popped = this.evaluationStack.splice(this.evaluationStack.length - numberOfObjects, numberOfObjects);\r\n\t            return popped;\r\n\t\t\t}\r\n\t\t}\r\n\t\tPeekEvaluationStack(){\r\n\t\t\t return this.evaluationStack[this.evaluationStack.length - 1];\r\n\t\t}\r\n\t\tPushToOutputStream(obj){\r\n\t//\t\tvar text = obj as StringValue;\r\n\t\t\tvar text = obj;\r\n\t\t\tif (text instanceof StringValue) {\r\n\t\t\t\tvar listText = this.TrySplittingHeadTailWhitespace(text);\r\n\t\t\t\tif (listText != null) {\r\n\t\t\t\t\tlistText.forEach(textObj => {\r\n\t\t\t\t\t\tthis.PushToOutputStreamIndividual(textObj);\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.PushToOutputStreamIndividual(obj);\r\n\t\t\tthis.OutputStreamDirty();\r\n\t\t}\r\n\t\tTrySplittingHeadTailWhitespace(single){\r\n\t\t\tvar str = single.value;\r\n\r\n\t\t\tvar headFirstNewlineIdx = -1;\r\n\t\t\tvar headLastNewlineIdx = -1;\r\n\t\t\tfor (var i = 0; i < str.length; ++i) {\r\n\t\t\t\tvar c = str[i];\r\n\t\t\t\tif (c == '\\n') {\r\n\t\t\t\t\tif (headFirstNewlineIdx == -1)\r\n\t\t\t\t\t\theadFirstNewlineIdx = i;\r\n\t\t\t\t\theadLastNewlineIdx = i;\r\n\t\t\t\t}\r\n\t\t\t\telse if (c == ' ' || c == '\\t')\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tvar tailLastNewlineIdx = -1;\r\n\t\t\tvar tailFirstNewlineIdx = -1;\r\n\t\t\tfor (var i = 0; i < str.length; ++i) {\r\n\t\t\t\tvar c = str[i];\r\n\t\t\t\tif (c == '\\n') {\r\n\t\t\t\t\tif (tailLastNewlineIdx == -1)\r\n\t\t\t\t\t\ttailLastNewlineIdx = i;\r\n\t\t\t\t\ttailFirstNewlineIdx = i;\r\n\t\t\t\t}\r\n\t\t\t\telse if (c == ' ' || c == '\\t')\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// No splitting to be done?\r\n\t\t\tif (headFirstNewlineIdx == -1 && tailLastNewlineIdx == -1)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvar listTexts = [];\r\n\t\t\tvar innerStrStart = 0;\r\n\t\t\tvar innerStrEnd = str.length;\r\n\r\n\t\t\tif (headFirstNewlineIdx != -1) {\r\n\t\t\t\tif (headFirstNewlineIdx > 0) {\r\n\t\t\t\t\tvar leadingSpaces = str.substring(0, headFirstNewlineIdx);\r\n\t\t\t\t\tlistTexts.push(leadingSpaces);\r\n\t\t\t\t}\r\n\t\t\t\tlistTexts.push(new StringValue(\"\\n\"));\r\n\t\t\t\tinnerStrStart = headLastNewlineIdx + 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (tailLastNewlineIdx != -1) {\r\n\t\t\t\tinnerStrEnd = tailFirstNewlineIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (innerStrEnd > innerStrStart) {\r\n\t\t\t\tvar innerStrText = str.substring(innerStrStart, innerStrEnd - innerStrStart);\r\n\t\t\t\tlistTexts.push(new StringValue(innerStrText));\r\n\t\t\t}\r\n\r\n\t\t\tif (tailLastNewlineIdx != -1 && tailFirstNewlineIdx > headLastNewlineIdx) {\r\n\t\t\t\tlistTexts.push(new StringValue(\"\\n\"));\r\n\t\t\t\tif (tailLastNewlineIdx < str.length - 1) {\r\n\t\t\t\t\tvar numSpaces = (str.Length - tailLastNewlineIdx) - 1;\r\n\t\t\t\t\tvar trailingSpaces = new StringValue(str.substring(tailLastNewlineIdx + 1, numSpaces));\r\n\t\t\t\t\tlistTexts.push(trailingSpaces);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn listTexts;\r\n\t\t}\r\n\t\tPushToOutputStreamIndividual(obj){\r\n\t\t\tvar glue = obj;\r\n\t\t\tvar text = obj;\r\n\r\n\t\t\tvar includeInOutput = true;\r\n\r\n\t\t\tif (glue instanceof Glue) {\r\n\t\t\t\t// Found matching left-glue for right-glue? Close it.\r\n\t\t\t\tvar existingRightGlue = this.currentRightGlue;\r\n\t\t\t\tvar foundMatchingLeftGlue = !!(glue.isLeft && existingRightGlue && glue.parent == existingRightGlue.parent);\r\n\t\t\t\tvar matchingRightGlue = null;\r\n\t\t\t\t\r\n\t\t\t\tif (glue.isLeft)\r\n\t\t\t\t\tmatchingRightGlue = this.MatchRightGlueForLeftGlue(glue);\r\n\r\n\t\t\t\t// Left/Right glue is auto-generated for inline expressions \r\n\t\t\t\t// where we want to absorb newlines but only in a certain direction.\r\n\t\t\t\t// \"Bi\" glue is written by the user in their ink with <>\r\n\t\t\t\tif (glue.isLeft || glue.isBi) {\r\n\t\t\t\t\tthis.TrimNewlinesFromOutputStream(matchingRightGlue);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tincludeInOutput = glue.isBi || glue.isRight;\r\n\t\t\t}\r\n\r\n\t\t\telse if( text instanceof StringValue ) {\r\n\r\n\t\t\t\tif (this.currentGlueIndex != -1) {\r\n\r\n\t\t\t\t\t// Absorb any new newlines if there's existing glue\r\n\t\t\t\t\t// in the output stream.\r\n\t\t\t\t\t// Also trim any extra whitespace (spaces/tabs) if so.\r\n\t\t\t\t\tif (text.isNewline) {\r\n\t\t\t\t\t\tthis.TrimFromExistingGlue();\r\n\t\t\t\t\t\tincludeInOutput = false;\r\n\t\t\t\t\t} \r\n\r\n\t\t\t\t\t// Able to completely reset when \r\n\t\t\t\t\telse if (text.isNonWhitespace) {\r\n\t\t\t\t\t\tthis.RemoveExistingGlue();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (text.isNewline) {\r\n\t\t\t\t\tif (this.outputStreamEndsInNewline || !this.outputStreamContainsContent)\r\n\t\t\t\t\t\tincludeInOutput = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (includeInOutput) {\r\n\t\t\t\tthis._outputStream.push(obj);\r\n\t\t\t\tthis.OutputStreamDirty();\r\n\t\t\t}\r\n\t\t}\r\n\t\tTrimNewlinesFromOutputStream(rightGlueToStopAt){\r\n\t\t\tvar removeWhitespaceFrom = -1;\r\n\t\t\tvar rightGluePos = -1;\r\n\t\t\tvar foundNonWhitespace = false;\r\n\r\n\t\t\t// Work back from the end, and try to find the point where\r\n\t\t\t// we need to start removing content. There are two ways:\r\n\t\t\t//  - Start from the matching right-glue (because we just saw a left-glue)\r\n\t\t\t//  - Simply work backwards to find the first newline in a string of whitespace\r\n\t\t\tvar i = this._outputStream.length-1;\r\n\t\t\twhile (i >= 0) {\r\n\t\t\t\tvar obj = this._outputStream[i];\r\n\t//\t\t\tvar cmd = obj as ControlCommand;\r\n\t\t\t\tvar cmd = obj;\r\n\t//\t\t\tvar txt = obj as StringValue;\r\n\t\t\t\tvar txt = obj;\r\n\t//\t\t\tvar glue = obj as Glue;\r\n\t\t\t\tvar glue = obj;\r\n\r\n\t\t\t\tif (cmd instanceof ControlCommand || (txt instanceof StringValue && txt.isNonWhitespace)) {\r\n\t\t\t\t\tfoundNonWhitespace = true;\r\n\t\t\t\t\tif( rightGlueToStopAt == null )\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (rightGlueToStopAt && glue instanceof Glue && glue == rightGlueToStopAt) {\r\n\t\t\t\t\trightGluePos = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (txt instanceof StringValue && txt.isNewline && !foundNonWhitespace) {\r\n\t\t\t\t\tremoveWhitespaceFrom = i;\r\n\t\t\t\t}\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the whitespace\r\n\t\t\tif (removeWhitespaceFrom >= 0) {\r\n\t\t\t\ti=removeWhitespaceFrom;\r\n\t\t\t\twhile(i < this._outputStream.length) {\r\n\t//\t\t\t\tvar text = _outputStream [i] as StringValue;\r\n\t\t\t\t\tvar text = this._outputStream[i];\r\n\t\t\t\t\tif (text instanceof StringValue) {\r\n\t\t\t\t\t\tthis._outputStream.splice(i, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (rightGlueToStopAt && rightGluePos > -1) {\r\n\t\t\t\ti = rightGluePos;\r\n\t\t\t\twhile(i < this._outputStream.length) {\r\n\t\t\t\t\tif (this._outputStream[i] instanceof Glue && (this._outputStream[i]).isRight) {\r\n\t\t\t\t\t\tthis.outputStream.splice(i, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.OutputStreamDirty();\r\n\t\t}\r\n\t\tTrimFromExistingGlue(){\r\n\t\t\tvar i = this.currentGlueIndex;\r\n\t\t\twhile (i < this._outputStream.length) {\r\n\t//\t\t\tvar txt = _outputStream [i] as StringValue;\r\n\t\t\t\tvar txt = this._outputStream[i];\r\n\t\t\t\tif (txt instanceof StringValue && !txt.isNonWhitespace)\r\n\t\t\t\t\tthis._outputStream.splice(i, 1);\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.OutputStreamDirty();\r\n\t\t}\r\n\t\tRemoveExistingGlue(){\r\n\t\t\tfor (var i = this._outputStream.length - 1; i >= 0; i--) {\r\n\t\t\t\tvar c = this._outputStream[i];\r\n\t\t\t\tif (c instanceof Glue) {\r\n\t\t\t\t\tthis._outputStream.splice(i, 1);\r\n\t\t\t\t} else if( c instanceof ControlCommand ) { // e.g. BeginString\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.OutputStreamDirty();\r\n\t\t}\r\n\t\tForceEnd(){\r\n\t\t\twhile (this.callStack.canPopThread)\r\n\t\t\t\tthis.callStack.PopThread();\r\n\r\n\t\t\twhile (this.callStack.canPop)\r\n\t\t\t\tthis.callStack.Pop();\r\n\r\n\t\t\tthis._currentChoices.length = 0;\r\n\t\t\t\r\n\t\t\tthis.currentContentObject = null;\r\n\t\t\tthis.previousContentObject = null;\r\n\r\n\t\t\tthis.didSafeExit = true;\r\n\t\t}\r\n\t\tSetChosenPath(path){\r\n\t\t\t// Changing direction, assume we need to clear current set of choices\r\n\t\t\tthis._currentChoices.length = 0;\r\n\r\n\t\t\tthis.currentPath = path;\r\n\r\n\t\t\tthis._currentTurnIndex++;\r\n\t\t}\r\n\t\tStartExternalFunctionEvaluation(funcContainer, args){\r\n\t\t\t // We'll start a new callstack, so keep hold of the original,\r\n\t\t\t// as well as the evaluation stack so we know if the function \r\n\t\t\t// returned something\r\n\t\t\tthis._originalCallstack = this.callStack;\r\n\t\t\tthis._originalEvaluationStackHeight = this.evaluationStack.length;\r\n\r\n\t\t\t// Create a new base call stack element.\r\n\t\t\tthis.callStack = new CallStack(funcContainer);\r\n\t\t\tthis.callStack.currentElement.type = PushPopType.Function;\r\n\t\t\t\r\n\t\t\tthis._variablesState.callStack = this.callStack;\r\n\r\n\t\t\t// By setting ourselves in external function evaluation mode,\r\n\t\t\t// we're saying it's okay to end the flow without a Done or End,\r\n\t\t\t// but with a ~ return instead.\r\n\t\t\tthis._isExternalFunctionEvaluation = true;\r\n\t\t\t\r\n\t\t\tthis.PassArgumentsToEvaluationStack(args);\r\n\t\t}\r\n\t\tPassArgumentsToEvaluationStack(args){\r\n\t\t\t// Pass arguments onto the evaluation stack\r\n\t\t\tif (args != null) {\r\n\t\t\t\tfor (var i = 0; i < args.length; i++) {\r\n\t\t\t\t\tif (!(typeof args[i] === 'number' || typeof args[i] === 'string')) {\r\n\t\t\t\t\t\tthrow \"ink arguments when calling EvaluateFunction / ChoosePathStringWithParameters  must be int, float or string\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.PushEvaluationStack(Value.Create(args[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tTryExitExternalFunctionEvaluation(){\r\n\t\t\tif (this._isExternalFunctionEvaluation && this.callStack.elements.length == 1 && this.callStack.currentElement.type == PushPopType.Function) {\r\n\t\t\t\tthis.currentContentObject = null;\r\n\t\t\t\tthis.didSafeExit = true;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tCompleteExternalFunctionEvaluation(){\r\n\t\t\t// Do we have a returned value?\r\n\t\t\t// Potentially pop multiple values off the stack, in case we need\r\n\t\t\t// to clean up after ourselves (e.g. caller of EvaluateFunction may \r\n\t\t\t// have passed too many arguments, and we currently have no way to check for that)\r\n\t\t\tvar returnedObj = null;\r\n\t\t\twhile (this.evaluationStack.length > this._originalEvaluationStackHeight) {\r\n\t\t\t\tvar poppedObj = this.PopEvaluationStack();\r\n\t\t\t\tif (returnedObj == null)\r\n\t\t\t\t\treturnedObj = poppedObj;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Restore our own state\r\n\t\t\tthis.callStack = this._originalCallstack;\r\n\t\t\tthis._originalCallstack = null;\r\n\t\t\tthis._originalEvaluationStackHeight = 0;\r\n\t\t\t\r\n\t\t\tthis._variablesState.callStack = this.callStack;\r\n\r\n\t\t\tif (returnedObj) {\r\n\t\t\t\tif (returnedObj instanceof Void)\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t// Some kind of value, if not void\r\n\t//\t\t\tvar returnVal = returnedObj as Runtime.Value;\r\n\t\t\t\tvar returnVal = returnedObj;\r\n\r\n\t\t\t\t// DivertTargets get returned as the string of components\r\n\t\t\t\t// (rather than a Path, which isn't public)\r\n\t\t\t\tif (returnVal.valueType == ValueType.DivertTarget) {\r\n\t\t\t\t\treturn returnVal.valueObject.toString();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Other types can just have their exact object type:\r\n\t\t\t\t// int, float, string. VariablePointers get returned as strings.\r\n\t\t\t\treturn returnVal.valueObject;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tAddError(message){\r\n\t\t\tif (this._currentErrors == null) {\r\n\t\t\t\tthis._currentErrors = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentErrors.push(message);\r\n\t\t}\r\n\t\tOutputStreamDirty(){\r\n\t\t\tthis._outputStreamTextDirty = true;\r\n\t\t\tthis._outputStreamTagsDirty = true;\r\n\t\t}\r\n\t\tVisitCountAtPathString(pathString){\r\n\t\t\tvar visitCountOut;\r\n\t\t\tif (visitCountOut = this.visitCounts[pathString])\r\n\t\t\t\treturn visitCountOut;\r\n\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tCopy(){\r\n\t\t\tvar copy = new StoryState(this.story);\r\n\r\n\t\t\tcopy.outputStream.push.apply(copy.outputStream, this._outputStream);\r\n\t\t\tthis.OutputStreamDirty();\r\n\t\t\t\r\n\t\t\tcopy._currentChoices.push.apply(copy._currentChoices, this._currentChoices);\r\n\r\n\t\t\tif (this.hasError) {\r\n\t\t\t\tcopy.currentErrors = [];\r\n\t\t\t\tcopy.currentErrors.push.apply(copy.currentErrors, this.currentErrors);\r\n\t\t\t}\r\n\r\n\t\t\tcopy.callStack = new CallStack(this.callStack);\r\n\t\t\tif (this._originalCallstack) copy._originalCallstack = new CallStack(this._originalCallstack);\r\n\t\t\t\r\n\t\t\tcopy._variablesState = new VariablesState(copy.callStack, this.story.listDefinitions);\r\n\t\t\tcopy.variablesState.CopyFrom(this.variablesState);\r\n\r\n\t\t\tcopy.evaluationStack.push.apply(copy.evaluationStack, this.evaluationStack);\r\n\t    copy._originalEvaluationStackHeight = this._originalEvaluationStackHeight;\r\n\r\n\t\t\tif (this.divertedTargetObject != null)\r\n\t\t\t\tcopy.divertedTargetObject = this.divertedTargetObject;\r\n\r\n\t\t\tcopy.previousContentObject = this.previousContentObject;\r\n\t\t\t\r\n\t\t\tcopy._isExternalFunctionEvaluation = this._isExternalFunctionEvaluation;\r\n\t\t\t\r\n\t\t\tcopy._visitCounts = {};\r\n\t\t\tfor (var keyValue in this._visitCounts) {\r\n\t\t\t      \tcopy._visitCounts[keyValue] = this._visitCounts[keyValue];\r\n\t\t\t}\r\n\t\t\tcopy._turnIndices = {};\r\n\t\t\tfor (var keyValue in this._turnIndices) {\r\n\t\t\t\tcopy._turnIndices[keyValue] = this._turnIndices[keyValue];\r\n\t\t\t}\r\n\t  \t\t\r\n\t\t\tcopy._currentTurnIndex = this.currentTurnIndex;\r\n\t\t\tcopy.storySeed = this.storySeed;\r\n\t\t\tcopy.previousRandom = this.previousRandom;\r\n\r\n\t\t\tcopy.didSafeExit = this.didSafeExit;\r\n\r\n\t\t\treturn copy;\r\n\t\t}\r\n\t\t\r\n\t\ttoJson(indented){\r\n\t\t\treturn JSON.stringify(this.jsonToken, null, (indented) ? 2 : 0);\r\n\t\t}\r\n\t\tLoadJson(jsonString){\r\n\t\t\tthis.jsonToken = JSON.parse(jsonString);\r\n\t\t}\r\n\t}\r\n\r\n\tStoryState.kInkSaveStateVersion = 7;\r\n\tStoryState.kMinCompatibleLoadVersion = 6;\n\n\tif (!Number.isInteger) {\r\n\t\tNumber.isInteger = function isInteger (nVal) {\r\n\t\t\treturn typeof nVal === \"number\" && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor(nVal) === nVal;\r\n\t\t};\r\n\t}\r\n\r\n\tclass Story extends Object$1{\r\n\t\tconstructor(jsonString, lists){\r\n\t\t\tsuper();\r\n\t\t\t\r\n\t\t\tlists = lists || null;\r\n\t\t\t\r\n\t\t\tthis.inkVersionCurrent = 17;\r\n\t\t\tthis.inkVersionMinimumCompatible = 16;\r\n\t\t\t\r\n\t\t\tthis._variableObservers = null;\r\n\t\t\tthis._externals = {};\r\n\t\t\tthis._prevContainerSet = null;\r\n\t\t\tthis._listDefinitions = null;\r\n\t\t\t\r\n\t\t\tif (jsonString instanceof Container){\r\n\t\t\t\tthis._mainContentContainer = jsonString;\r\n\t\t\t\t\r\n\t\t\t\tif (lists != null)\r\n\t\t\t\t\tthis._listDefinitions = new ListDefinitionsOrigin(lists);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//the original version only accepts a string as a constructor, but this is javascript and it's almost easier to get a JSON value than a string, so we're silently accepting both\r\n\t\t\t\tvar rootObject = (typeof jsonString === 'string') ? JSON.parse(jsonString) : jsonString;\r\n\r\n\t\t\t\tvar versionObj = rootObject[\"inkVersion\"];\r\n\t\t\t\tif (versionObj == null)\r\n\t\t\t\t\tthrow \"ink version number not found. Are you sure it's a valid .ink.json file?\";\r\n\r\n\t\t\t\tvar formatFromFile = parseInt(versionObj);\r\n\t\t\t\tif (formatFromFile > this.inkVersionCurrent){\r\n\t\t\t\t\tthrow \"Version of ink used to build story was newer than the current verison of the engine\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (formatFromFile < this.inkVersionMinimumCompatible){\r\n\t\t\t\t\tthrow \"Version of ink used to build story is too old to be loaded by this verison of the engine\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (formatFromFile != this.inkVersionCurrent){\r\n\t\t\t\t\tconsole.warn(\"WARNING: Version of ink used to build story doesn't match current version of engine. Non-critical, but recommend synchronising.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rootToken = rootObject[\"root\"];\r\n\t\t\t\tif (rootToken == null)\r\n\t\t\t\t\tthrow \"Root node for ink not found. Are you sure it's a valid .ink.json file?\";\r\n\t\t\t\t\r\n\t\t\t\tvar listDefsObj;\r\n\t            if (listDefsObj = rootObject[\"listDefs\"]) {\r\n\t                this._listDefinitions = JsonSerialisation.JTokenToListDefinitions(listDefsObj);\r\n\t            }\r\n\r\n\t\t\t\tthis._mainContentContainer = JsonSerialisation.JTokenToRuntimeObject(rootToken);\r\n\r\n\t\t\t\tthis._hasValidatedExternals = null;\r\n\t\t\t\tthis.allowExternalFunctionFallbacks = false;\r\n\r\n\t\t\t\tthis.ResetState();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tget currentChoices(){\r\n\t\t\t// Don't include invisible choices for external usage.\r\n\t\t\tvar choices = [];\r\n\t\t\t\r\n\t\t\tthis._state.currentChoices.forEach(c => {\r\n\t\t\t\tif (!c.choicePoint.isInvisibleDefault) {\r\n\t\t\t\t\tc.index = choices.length;\r\n\t\t\t\t\tchoices.push(c);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn choices;\r\n\t\t}\r\n\t\tget currentText(){\r\n\t\t\treturn this.state.currentText;\r\n\t\t}\r\n\t\tget currentTags(){\r\n\t\t\treturn this.state.currentTags;\r\n\t\t}\r\n\t\tget currentErrors(){\r\n\t\t\treturn this.state.currentErrors;\r\n\t\t}\r\n\t\tget hasError(){\r\n\t\t\treturn this.state.hasError;\r\n\t\t}\r\n\t\tget variablesState(){\r\n\t\t\treturn this.state.variablesState;\r\n\t\t}\r\n\t\tget listDefinitions (){\r\n\t\t\treturn this._listDefinitions;\r\n\t\t}\r\n\t\tget state(){\r\n\t\t\treturn this._state;\r\n\t\t}\r\n\t\t\r\n\t\tget mainContentContainer(){\r\n\t\t\tif (this._temporaryEvaluationContainer) {\r\n\t\t\t\treturn this._temporaryEvaluationContainer;\r\n\t\t\t} else {\r\n\t\t\t\treturn this._mainContentContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t\tget canContinue(){\r\n\t\t\treturn this.state.canContinue;\r\n\t\t}\r\n\t\t\r\n\t\tget globalTags(){\r\n\t\t\treturn this.TagsAtStartOfFlowContainerWithPathString(\"\");\r\n\t\t}\r\n\t\t\r\n\t\tToJsonString(){\r\n\t\t\tvar rootContainerJsonList = JsonSerialisation.RuntimeObjectToJToken(this._mainContentContainer);\r\n\r\n\t\t\tvar rootObject = {};\r\n\t\t\trootObject[\"inkVersion\"] = this.inkVersionCurrent;\r\n\t\t\trootObject[\"root\"] = rootContainerJsonList;\r\n\t\t\t\r\n\t\t\tif (this._listDefinitions != null)\r\n\t\t\t\trootObject[\"listDefs\"] = JsonSerialisation.ListDefinitionsToJToken(this._listDefinitions);\r\n\r\n\t\t\treturn JSON.stringify(rootObject);\r\n\t\t}\r\n\t\tResetState(){\r\n\t\t\tthis._state = new StoryState(this);\r\n\t\t\tthis._state.variablesState.ObserveVariableChange(this.VariableStateDidChangeEvent.bind(this));\r\n\t\t\t\r\n\t\t\tthis.ResetGlobals();\r\n\t\t}\r\n\t\tResetErrors(){\r\n\t\t\tthis._state.ResetErrors();\r\n\t\t}\r\n\t\tResetCallstack(){\r\n\t\t\tthis._state.ForceEnd();\r\n\t\t}\r\n\t\tResetGlobals(){\r\n\t\t\tif (this._mainContentContainer.namedContent[\"global decl\"]){\r\n\t\t\t\tvar originalPath = this.state.currentPath;\r\n\r\n\t\t\t\tthis.ChoosePathString(\"global decl\");\r\n\r\n\t\t\t\t// Continue, but without validating external bindings,\r\n\t\t\t\t// since we may be doing this reset at initialisation time.\r\n\t\t\t\tthis.ContinueInternal();\r\n\r\n\t\t\t\tthis.state.currentPath = originalPath;\r\n\t\t\t}\r\n\t\t}\r\n\t\tContinue(){\r\n\t\t\tif (!this._hasValidatedExternals)\r\n\t\t\t\tthis.ValidateExternalBindings();\r\n\r\n\t\t\treturn this.ContinueInternal();\r\n\t\t}\r\n\t\tContinueInternal(){\r\n\t\t\tif (!this.canContinue) {\r\n\t\t\t\tthrow new StoryException(\"Can't continue - should check canContinue before calling Continue\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._state.ResetOutput();\r\n\r\n\t\t\tthis._state.didSafeExit = false;\r\n\r\n\t\t\tthis._state.variablesState.batchObservingVariableChanges = true;\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tvar stateAtLastNewline = null;\r\n\r\n\t\t\t\t// The basic algorithm here is:\r\n\t\t\t\t//\r\n\t\t\t\t//     do { Step() } while( canContinue && !outputStreamEndsInNewline );\r\n\t\t\t\t//\r\n\t\t\t\t// But the complexity comes from:\r\n\t\t\t\t//  - Stepping beyond the newline in case it'll be absorbed by glue later\r\n\t\t\t\t//  - Ensuring that non-text content beyond newlines are generated - i.e. choices,\r\n\t\t\t\t//    which are actually built out of text content.\r\n\t\t\t\t// So we have to take a snapshot of the state, continue prospectively,\r\n\t\t\t\t// and rewind if necessary.\r\n\t\t\t\t// This code is slightly fragile :-/ \r\n\t\t\t\t//\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\t// Run main step function (walks through content)\r\n\t\t\t\t\tthis.Step();\r\n\r\n\t\t\t\t\t// Run out of content and we have a default invisible choice that we can follow?\r\n\t\t\t\t\tif( !this.canContinue ) {\r\n\t\t\t\t\t\tthis.TryFollowDefaultInvisibleChoice();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Don't save/rewind during string evaluation, which is e.g. used for choices\r\n\t\t\t\t\tif( !this.state.inStringEvaluation ) {\r\n\r\n\t\t\t\t\t\t// We previously found a newline, but were we just double checking that\r\n\t\t\t\t\t\t// it wouldn't immediately be removed by glue?\r\n\t\t\t\t\t\tif( stateAtLastNewline != null ) {\r\n\r\n\t\t\t\t\t\t\t// Cover cases that non-text generated content was evaluated last step\r\n\t\t\t\t\t\t\tvar currText = this.currentText;\r\n\t\t\t\t\t\t\tvar prevTextLength = stateAtLastNewline.currentText.length;\r\n\t\t\t\t\t\t\tvar prevTagCount = stateAtLastNewline.currentTags.length;\r\n\r\n\t\t\t\t\t\t\t// Output has been extended?\r\n\t\t\t\t\t\t\tif( currText !== stateAtLastNewline.currentText || prevTagCount != this.currentTags.length ) {\r\n\r\n\t\t\t\t\t\t\t\t// Original newline still exists?\r\n\t\t\t\t\t\t\t\tif( currText.length >= prevTextLength && currText[prevTextLength-1] == '\\n' ) {\r\n\r\n\t\t\t\t\t\t\t\t\tthis.RestoreStateSnapshot(stateAtLastNewline);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Newline that previously existed is no longer valid - e.g.\r\n\t\t\t\t\t\t\t\t// glue was encounted that caused it to be removed.\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tstateAtLastNewline = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Current content ends in a newline - approaching end of our evaluation\r\n\t\t\t\t\t\tif( this.state.outputStreamEndsInNewline ) {\r\n\r\n\t\t\t\t\t\t\t// If we can continue evaluation for a bit:\r\n\t\t\t\t\t\t\t// Create a snapshot in case we need to rewind.\r\n\t\t\t\t\t\t\t// We're going to continue stepping in case we see glue or some\r\n\t\t\t\t\t\t\t// non-text content such as choices.\r\n\t\t\t\t\t\t\tif( this.canContinue ) {\r\n\t\t\t\t\t\t\t\t\t// Don't bother to record the state beyond the current newline.\r\n\t\t\t\t\t\t\t\t\t// e.g.:\r\n\t\t\t\t\t\t\t\t\t// Hello world\\n\t\t\t// record state at the end of here\r\n\t\t\t\t\t\t\t\t\t// ~ complexCalculation()   // don't actually need this unless it generates text\r\n\t\t\t\t\t\t\t\t\tif( stateAtLastNewline == null ) {\r\n\t                                \tstateAtLastNewline = this.StateSnapshot();\r\n\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t} \r\n\r\n\t\t\t\t\t\t\t// Can't continue, so we're about to exit - make sure we\r\n\t\t\t\t\t\t\t// don't have an old state hanging around.\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tstateAtLastNewline = null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} while(this.canContinue);\r\n\r\n\t\t\t\t// Need to rewind, due to evaluating further than we should?\r\n\t\t\t\tif( stateAtLastNewline != null ) {\r\n\t\t\t\t\tthis.RestoreStateSnapshot(stateAtLastNewline);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Finished a section of content / reached a choice point?\r\n\t\t\t\tif( !this.canContinue ) {\r\n\r\n\t\t\t\t\tif( this.state.callStack.canPopThread ) {\r\n\t\t\t\t\t\tthis.Error(\"Thread available to pop, threads should always be flat by the end of evaluation?\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( this.state.generatedChoices.length == 0 && !this.state.didSafeExit && this._temporaryEvaluationContainer == null) {\r\n\t\t\t\t\t\tif( this.state.callStack.CanPop(PushPopType.Tunnel) ) {\r\n\t\t\t\t\t\t\tthis.Error(\"unexpectedly reached end of content. Do you need a '->->' to return from a tunnel?\");\r\n\t\t\t\t\t\t} else if( this.state.callStack.CanPop(PushPopType.Function) ) {\r\n\t\t\t\t\t\t\tthis.Error(\"unexpectedly reached end of content. Do you need a '~ return'?\");\r\n\t\t\t\t\t\t} else if( !this.state.callStack.canPop ) {\r\n\t\t\t\t\t\t\tthis.Error(\"ran out of content. Do you need a '-> DONE' or '-> END'?\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.Error(\"unexpectedly reached end of content for unknown reason. Please debug compiler!\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} catch(e) {\r\n\t\t\t\tthrow e;\r\n\t\t\t\tthis.AddError(e.Message, e.useEndLineNumber);\r\n\t\t\t} finally {\r\n\t\t\t\tthis.state.didSafeExit = false;\r\n\t\t\t\t\r\n\t\t\t\tthis._state.variablesState.batchObservingVariableChanges = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.currentText;\r\n\t\t}\r\n\t\tContinueMaximally(){\r\n\t\t\tvar sb = new StringBuilder();\r\n\r\n\t\t\twhile (this.canContinue) {\r\n\t\t\t\tsb.Append(this.Continue());\r\n\t\t\t}\r\n\r\n\t\t\treturn sb.toString();\r\n\t\t}\r\n\t\tContentAtPath(path){\r\n\t\t\treturn this.mainContentContainer.ContentAtPath(path);\r\n\t\t}\r\n\t\tStateSnapshot(){\r\n\t\t\treturn this.state.Copy();\r\n\t\t}\r\n\t\tRestoreStateSnapshot(state){\r\n\t\t\tthis._state = state;\r\n\t\t}\r\n\t\tStep(){\r\n\t\t\tvar shouldAddToStream = true;\r\n\r\n\t\t\t// Get current content\r\n\t\t\tvar currentContentObj = this.state.currentContentObject;\r\n\t\t\tif (currentContentObj == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Step directly to the first element of content in a container (if necessary)\r\n\t//\t\tContainer currentContainer = currentContentObj as Container;\r\n\t\t\tvar currentContainer = currentContentObj;\r\n\t\t\twhile(currentContainer instanceof Container) {\r\n\r\n\t\t\t\t// Mark container as being entered\r\n\t\t\t\tthis.VisitContainer(currentContainer, true);\r\n\r\n\t\t\t\t// No content? the most we can do is step past it\r\n\t\t\t\tif (currentContainer.content.length == 0)\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcurrentContentObj = currentContainer.content[0];\r\n\t\t\t\tthis.state.callStack.currentElement.currentContentIndex = 0;\r\n\t\t\t\tthis.state.callStack.currentElement.currentContainer = currentContainer;\r\n\r\n\t//\t\t\tcurrentContainer = currentContentObj as Container;\r\n\t\t\t\tcurrentContainer = currentContentObj;\r\n\t\t\t}\r\n\t\t\tcurrentContainer = this.state.callStack.currentElement.currentContainer;\r\n\r\n\t\t\t// Is the current content object:\r\n\t\t\t//  - Normal content\r\n\t\t\t//  - Or a logic/flow statement - if so, do it\r\n\t\t\t// Stop flow if we hit a stack pop when we're unable to pop (e.g. return/done statement in knot\r\n\t\t\t// that was diverted to rather than called as a function)\r\n\t\t\tvar isLogicOrFlowControl = this.PerformLogicAndFlowControl(currentContentObj);\r\n\r\n\t\t\t// Has flow been forced to end by flow control above?\r\n\t\t\tif (this.state.currentContentObject == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (isLogicOrFlowControl) {\r\n\t\t\t\tshouldAddToStream = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Choice with condition?\r\n\t//\t\tvar choicePoint = currentContentObj as ChoicePoint;\r\n\t\t\tvar choicePoint = currentContentObj;\r\n\t\t\tif (choicePoint instanceof ChoicePoint) {\r\n\t\t\t\tvar choice = this.ProcessChoice(choicePoint);\r\n\t\t\t\tif (choice) {\r\n\t\t\t\t\tthis.state.generatedChoices.push(choice);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentContentObj = null;\r\n\t\t\t\tshouldAddToStream = false;\r\n\t\t\t}\r\n\r\n\t\t\t// If the container has no content, then it will be\r\n\t\t\t// the \"content\" itself, but we skip over it.\r\n\t\t\tif (currentContentObj instanceof Container) {\r\n\t\t\t\tshouldAddToStream = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Content to add to evaluation stack or the output stream\r\n\t\t\tif (shouldAddToStream) {\r\n\r\n\t\t\t\t// If we're pushing a variable pointer onto the evaluation stack, ensure that it's specific\r\n\t\t\t\t// to our current (possibly temporary) context index. And make a copy of the pointer\r\n\t\t\t\t// so that we're not editing the original runtime object.\r\n\t//\t\t\tvar varPointer = currentContentObj as VariablePointerValue;\r\n\t\t\t\tvar varPointer = currentContentObj;\r\n\t\t\t\tif (varPointer instanceof VariablePointerValue && varPointer.contextIndex == -1) {\r\n\r\n\t\t\t\t\t// Create new object so we're not overwriting the story's own data\r\n\t\t\t\t\tvar contextIdx = this.state.callStack.ContextForVariableNamed(varPointer.variableName);\r\n\t\t\t\t\tcurrentContentObj = new VariablePointerValue(varPointer.variableName, contextIdx);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Expression evaluation content\r\n\t\t\t\tif (this.state.inExpressionEvaluation) {\r\n\t\t\t\t\tthis.state.PushEvaluationStack(currentContentObj);\r\n\t\t\t\t}\r\n\t\t\t\t// Output stream content (i.e. not expression evaluation)\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.PushToOutputStream(currentContentObj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Increment the content pointer, following diverts if necessary\r\n\t\t\tthis.NextContent();\r\n\r\n\t\t\t// Starting a thread should be done after the increment to the content pointer,\r\n\t\t\t// so that when returning from the thread, it returns to the content after this instruction.\r\n\t//\t\tvar controlCmd = currentContentObj as ControlCommand;\r\n\t\t\tvar controlCmd = currentContentObj;\r\n\t\t\tif (controlCmd instanceof ControlCommand && controlCmd.commandType == ControlCommand.CommandType.StartThread) {\r\n\t\t\t\tthis.state.callStack.PushThread();\r\n\t\t\t}\r\n\t\t}\r\n\t\tVisitContainer(container, atStart){\r\n\t\t\tif (!container.countingAtStartOnly || atStart) {\r\n\t\t\t\tif (container.visitsShouldBeCounted)\r\n\t\t\t\t\tthis.IncrementVisitCountForContainer(container);\r\n\r\n\t\t\t\tif (container.turnIndexShouldBeCounted)\r\n\t\t\t\t\tthis.RecordTurnIndexVisitToContainer(container);\r\n\t\t\t}\r\n\t\t}\r\n\t\tVisitChangedContainersDueToDivert(){\r\n\t\t\tvar previousContentObject = this.state.previousContentObject;\r\n\t\t\tvar newContentObject = this.state.currentContentObject;\r\n\t\t\t\r\n\t\t\tif (!newContentObject)\r\n\t\t\t\treturn;\r\n\t            \r\n\t\t\t// First, find the previously open set of containers\r\n\t\t\tthis._prevContainerSet = [];\r\n\t\t\tif (previousContentObject) {\r\n\t//\t\t\tContainer prevAncestor = previousContentObject as Container ?? previousContentObject.parent as Container;\r\n\t\t\t\tvar prevAncestor = (previousContentObject instanceof Container) ? previousContentObject : previousContentObject.parent;\r\n\t\t\t\twhile (prevAncestor instanceof Container) {\r\n\t\t\t\t\tthis._prevContainerSet.push(prevAncestor);\r\n\t//\t\t\t\tprevAncestor = prevAncestor.parent as Container;\r\n\t\t\t\t\tprevAncestor = prevAncestor.parent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If the new object is a container itself, it will be visited automatically at the next actual\r\n\t\t\t// content step. However, we need to walk up the new ancestry to see if there are more new containers\r\n\t\t\tvar currentChildOfContainer = newContentObject;\r\n\t//\t\tContainer currentContainerAncestor = currentChildOfContainer.parent as Container;\r\n\t\t\tvar currentContainerAncestor = currentChildOfContainer.parent;\r\n\t\t\twhile (currentContainerAncestor instanceof Container && this._prevContainerSet.indexOf(currentContainerAncestor) < 0) {\r\n\r\n\t\t\t\t// Check whether this ancestor container is being entered at the start,\r\n\t\t\t\t// by checking whether the child object is the first.\r\n\t\t\t\tvar enteringAtStart = currentContainerAncestor.content.length > 0 \r\n\t\t\t\t\t&& currentChildOfContainer == currentContainerAncestor.content[0];\r\n\r\n\t\t\t\t// Mark a visit to this container\r\n\t\t\t\tthis.VisitContainer(currentContainerAncestor, enteringAtStart);\r\n\r\n\t\t\t\tcurrentChildOfContainer = currentContainerAncestor;\r\n\t//\t\t\tcurrentContainerAncestor = currentContainerAncestor.parent as Container;\r\n\t\t\t\tcurrentContainerAncestor = currentContainerAncestor.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t\tProcessChoice(choicePoint){\r\n\t\t\tvar showChoice = true;\r\n\r\n\t\t\t// Don't create choice if choice point doesn't pass conditional\r\n\t\t\tif (choicePoint.hasCondition) {\r\n\t\t\t\tvar conditionValue = this.state.PopEvaluationStack();\r\n\t\t\t\tif (!this.IsTruthy(conditionValue)) {\r\n\t\t\t\t\tshowChoice = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar startText = \"\";\r\n\t\t\tvar choiceOnlyText = \"\";\r\n\r\n\t\t\tif (choicePoint.hasChoiceOnlyContent) {\r\n\t//\t\t\tvar choiceOnlyStrVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\t\tvar choiceOnlyStrVal = this.state.PopEvaluationStack();\r\n\t\t\t\tchoiceOnlyText = choiceOnlyStrVal.value;\r\n\t\t\t}\r\n\r\n\t\t\tif (choicePoint.hasStartContent) {\r\n\t//\t\t\tvar startStrVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\t\tvar startStrVal = this.state.PopEvaluationStack();\r\n\t\t\t\tstartText = startStrVal.value;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't create choice if player has already read this content\r\n\t\t\tif (choicePoint.onceOnly) {\r\n\t\t\t\tvar visitCount = this.VisitCountForContainer(choicePoint.choiceTarget);\r\n\t\t\t\tif (visitCount > 0) {\r\n\t\t\t\t\tshowChoice = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar choice = new Choice(choicePoint);\r\n\t\t\tchoice.threadAtGeneration = this.state.callStack.currentThread.Copy();\r\n\r\n\t\t\t// We go through the full process of creating the choice above so\r\n\t\t\t// that we consume the content for it, since otherwise it'll\r\n\t\t\t// be shown on the output stream.\r\n\t\t\tif (!showChoice) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Set final text for the choice\r\n\t\t\tchoice.text = startText + choiceOnlyText;\r\n\r\n\t\t\treturn choice;\r\n\t\t}\r\n\t\tIsTruthy(obj){\r\n\t\t\tvar truthy = false;\r\n\t\t\tif (obj instanceof Value) {\r\n\t\t\t\tvar val = obj;\r\n\r\n\t\t\t\tif (val instanceof DivertTargetValue) {\r\n\t\t\t\t\tvar divTarget = val;\r\n\t\t\t\t\tthis.Error(\"Shouldn't use a divert target (to \" + divTarget.targetPath + \") as a conditional value. Did you intend a function call 'likeThis()' or a read count check 'likeThis'? (no arrows)\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn val.isTruthy;\r\n\t\t\t}\r\n\t\t\treturn truthy;\r\n\t\t}\r\n\t\tPerformLogicAndFlowControl(contentObj){\r\n\t\t\tif( contentObj == null ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Divert\r\n\t\t\tif (contentObj instanceof Divert) {\r\n\t\t\t\tvar currentDivert = contentObj;\r\n\t\t\t\t\r\n\t\t\t\tif (currentDivert.isConditional) {\r\n\t\t\t\t\tvar conditionValue = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t\t// False conditional? Cancel divert\r\n\t\t\t\t\tif (!this.IsTruthy(conditionValue))\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (currentDivert.hasVariableTarget) {\r\n\t\t\t\t\tvar varName = currentDivert.variableDivertName;\r\n\r\n\t\t\t\t\tvar varContents = this.state.variablesState.GetVariableWithName(varName);\r\n\r\n\t\t\t\t\tif (!(varContents instanceof DivertTargetValue)) {\r\n\r\n\t//\t\t\t\t\tvar intContent = varContents as IntValue;\r\n\t\t\t\t\t\tvar intContent = varContents;\r\n\r\n\t\t\t\t\t\tvar errorMessage = \"Tried to divert to a target from a variable, but the variable (\" + varName + \") didn't contain a divert target, it \";\r\n\t\t\t\t\t\tif (intContent instanceof IntValue && intContent.value == 0) {\r\n\t\t\t\t\t\t\terrorMessage += \"was empty/null (the value 0).\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\terrorMessage += \"contained '\" + varContents + \"'.\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.Error(errorMessage);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar target = varContents;\r\n\t\t\t\t\tthis.state.divertedTargetObject = this.ContentAtPath(target.targetPath);\r\n\r\n\t\t\t\t} else if (currentDivert.isExternal) {\r\n\t\t\t\t\tthis.CallExternalFunction(currentDivert.targetPathString, currentDivert.externalArgs);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.state.divertedTargetObject = currentDivert.targetContent;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentDivert.pushesToStack) {\r\n\t\t\t\t\tthis.state.callStack.Push(currentDivert.stackPushType);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.state.divertedTargetObject == null && !currentDivert.isExternal) {\r\n\r\n\t\t\t\t\t// Human readable name available - runtime divert is part of a hard-written divert that to missing content\r\n\t\t\t\t\tif (currentDivert && currentDivert.debugMetadata.sourceName != null) {\r\n\t\t\t\t\t\tthis.Error(\"Divert target doesn't exist: \" + currentDivert.debugMetadata.sourceName);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.Error(\"Divert resolution failed: \" + currentDivert);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t} \r\n\r\n\t\t\t// Start/end an expression evaluation? Or print out the result?\r\n\t\t\telse if( contentObj instanceof ControlCommand ) {\r\n\t\t\t\tvar evalCommand = contentObj;\r\n\r\n\t\t\t\tswitch (evalCommand.commandType) {\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.EvalStart:\r\n\t\t\t\t\tif (this.state.inExpressionEvaluation) console.warn(\"Already in expression evaluation?\");\r\n\t\t\t\t\tthis.state.inExpressionEvaluation = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.EvalEnd:\r\n\t\t\t\t\tif (!this.state.inExpressionEvaluation) console.warn(\"Not in expression evaluation mode\");\r\n\t\t\t\t\tthis.state.inExpressionEvaluation = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.EvalOutput:\r\n\r\n\t\t\t\t\t// If the expression turned out to be empty, there may not be anything on the stack\r\n\t\t\t\t\tif (this.state.evaluationStack.length > 0) {\r\n\r\n\t\t\t\t\t\tvar output = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t\t\t// Functions may evaluate to Void, in which case we skip output\r\n\t\t\t\t\t\tif (output != null && !(output instanceof Void)) {\r\n\t\t\t\t\t\t\t// TODO: Should we really always blanket convert to string?\r\n\t\t\t\t\t\t\t// It would be okay to have numbers in the output stream the\r\n\t\t\t\t\t\t\t// only problem is when exporting text for viewing, it skips over numbers etc.\r\n\t\t\t\t\t\t\tvar text = new StringValue(output.toString());\r\n\r\n\t\t\t\t\t\t\tthis.state.PushToOutputStream(text);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.NoOp:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.Duplicate:\r\n\t\t\t\t\tthis.state.PushEvaluationStack(this.state.PeekEvaluationStack());\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.PopEvaluatedValue:\r\n\t\t\t\t\tthis.state.PopEvaluationStack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.PopFunction:\r\n\t\t\t\tcase ControlCommand.CommandType.PopTunnel:\r\n\r\n\t\t\t\t\tvar popType = evalCommand.commandType == ControlCommand.CommandType.PopFunction ?\r\n\t\t\t\t\t\tPushPopType.Function : PushPopType.Tunnel;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tvar overrideTunnelReturnTarget = null;\r\n\t\t\t\t\tif (popType == PushPopType.Tunnel) {\r\n\t\t\t\t\t\tvar popped = this.state.PopEvaluationStack();\r\n\t//\t\t\t\t\toverrideTunnelReturnTarget = popped as DivertTargetValue;\r\n\t\t\t\t\t\toverrideTunnelReturnTarget = popped;\r\n\t\t\t\t\t\tif (overrideTunnelReturnTarget instanceof DivertTargetValue === false) {\r\n\t\t\t\t\t\t\tif (popped instanceof Void === false){\r\n\t\t\t\t\t\t\t\tthrow \"Expected void if ->-> doesn't override target\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\toverrideTunnelReturnTarget = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.state.TryExitExternalFunctionEvaluation()){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.state.callStack.currentElement.type != popType || !this.state.callStack.canPop) {\r\n\r\n\t\t\t\t\t\tvar names = {};\r\n\t\t\t\t\t\tnames[PushPopType.Function] = \"function return statement (~ return)\";\r\n\t\t\t\t\t\tnames[PushPopType.Tunnel] = \"tunnel onwards statement (->->)\";\r\n\r\n\t\t\t\t\t\tvar expected = names[this.state.callStack.currentElement.type];\r\n\t\t\t\t\t\tif (!this.state.callStack.canPop)\r\n\t\t\t\t\t\t\texpected = \"end of flow (-> END or choice)\";\r\n\r\n\t\t\t\t\t\tvar errorMsg = \"Found \" + names[popType] + \", when expected \" + expected;\r\n\r\n\t\t\t\t\t\tthis.Error(errorMsg);\r\n\t\t\t\t\t} \r\n\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.state.callStack.Pop();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (overrideTunnelReturnTarget)\r\n\t\t\t\t\t\t\tthis.state.divertedTargetObject = this.ContentAtPath(overrideTunnelReturnTarget.targetPath);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.BeginString:\r\n\t\t\t\t\tthis.state.PushToOutputStream(evalCommand);\r\n\r\n\t\t\t\t\tif (!this.state.inExpressionEvaluation) console.warn(\"Expected to be in an expression when evaluating a string\");\r\n\t\t\t\t\tthis.state.inExpressionEvaluation = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.EndString:\r\n\r\n\t\t\t\t\tvar contentStackForString = [];\r\n\r\n\t\t\t\t\tvar outputCountConsumed = 0;\r\n\t\t\t\t\tfor (var i = this.state.outputStream.length - 1; i >= 0; --i) {\r\n\t\t\t\t\t\tvar obj = this.state.outputStream[i];\r\n\r\n\t\t\t\t\t\toutputCountConsumed++;\r\n\r\n\t//\t\t\t\t\tvar command = obj as ControlCommand;\r\n\t\t\t\t\t\tvar command = obj;\r\n\t\t\t\t\t\tif (command instanceof ControlCommand && command.commandType == ControlCommand.CommandType.BeginString) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( obj instanceof StringValue )\r\n\t\t\t\t\t\t\tcontentStackForString.push(obj);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Consume the content that was produced for this string\r\n\t\t\t\t\tthis.state.outputStream.splice(this.state.outputStream.length - outputCountConsumed, outputCountConsumed);\r\n\r\n\t\t\t\t\t//the C# version uses a Stack for contentStackForString, but we're using a simple array, so we need to reverse it before using it\r\n\t\t\t\t\tcontentStackForString = contentStackForString.reverse();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// Build string out of the content we collected\r\n\t\t\t\t\tvar sb = new StringBuilder();\r\n\t\t\t\t\tcontentStackForString.forEach(c => {\r\n\t\t\t\t\t\tsb.Append(c.toString());\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Return to expression evaluation (from content mode)\r\n\t\t\t\t\tthis.state.inExpressionEvaluation = true;\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new StringValue(sb.toString()));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.ChoiceCount:\r\n\t\t\t\t\tvar choiceCount = this.state.generatedChoices.length;\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new IntValue(choiceCount));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.TurnsSince:\r\n\t\t\t\tcase ControlCommand.CommandType.ReadCount:\r\n\t\t\t\t\tvar target = this.state.PopEvaluationStack();\r\n\t\t\t\t\tif( !(target instanceof DivertTargetValue) ) {\r\n\t\t\t\t\t\tvar extraNote = \"\";\r\n\t\t\t\t\t\tif( target instanceof IntValue )\r\n\t\t\t\t\t\t\textraNote = \". Did you accidentally pass a read count ('knot_name') instead of a target ('-> knot_name')?\";\r\n\t\t\t\t\t\tthis.Error(\"TURNS_SINCE / READ_COUNT expected a divert target (knot, stitch, label name), but saw \"+target+extraNote);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t//\t\t\t\tvar divertTarget = target as DivertTargetValue;\r\n\t\t\t\t\tvar divertTarget = target;\r\n\t//\t\t\t\tvar container = ContentAtPath (divertTarget.targetPath) as Container;\r\n\t\t\t\t\tvar container = this.ContentAtPath(divertTarget.targetPath);\r\n\r\n\t\t\t\t\tvar eitherCount; \r\n\t\t\t\t\tif (evalCommand.commandType == ControlCommand.CommandType.TurnsSince)\r\n\t\t\t\t\t\teitherCount = this.TurnsSinceForContainer(container);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\teitherCount = this.VisitCountForContainer(container);\r\n\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new IntValue(eitherCount));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.Random:\r\n\t\t\t\t\tvar maxInt = this.state.PopEvaluationStack();\r\n\t\t\t\t\tvar minInt = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t\tif (minInt == null || minInt instanceof IntValue === false)\r\n\t\t\t\t\t\tthis.Error(\"Invalid value for minimum parameter of RANDOM(min, max)\");\r\n\r\n\t\t\t\t\tif (maxInt == null || minInt instanceof IntValue === false)\r\n\t\t\t\t\t\tthis.Error(\"Invalid value for maximum parameter of RANDOM(min, max)\");\r\n\r\n\t\t\t\t\t// +1 because it's inclusive of min and max, for e.g. RANDOM(1,6) for a dice roll.\r\n\t\t\t\t\tvar randomRange = maxInt.value - minInt.value + 1;\r\n\t\t\t\t\tif (randomRange <= 0)\r\n\t\t\t\t\t\tthis.Error(\"RANDOM was called with minimum as \" + minInt.value + \" and maximum as \" + maxInt.value + \". The maximum must be larger\");\r\n\r\n\t\t\t\t\tvar resultSeed = this.state.storySeed + this.state.previousRandom;\r\n\t\t\t\t\tvar random = new PRNG(resultSeed);\r\n\r\n\t\t\t\t\tvar nextRandom = random.next();\r\n\t\t\t\t\tvar chosenValue = (nextRandom % randomRange) + minInt.value;\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new IntValue(chosenValue));\r\n\r\n\t\t\t\t\t// Next random number (rather than keeping the Random object around)\r\n\t\t\t\t\tthis.state.previousRandom = nextRandom;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\tcase ControlCommand.CommandType.SeedRandom:\r\n\t\t\t\t\tvar seed = this.state.PopEvaluationStack();\r\n\t\t\t\t\tif (seed == null || seed instanceof IntValue === false)\r\n\t\t\t\t\t\tthis.Error(\"Invalid value passed to SEED_RANDOM\");\r\n\r\n\t\t\t\t\t// Story seed affects both RANDOM and shuffle behaviour\r\n\t\t\t\t\tthis.state.storySeed = seed.value;\r\n\t\t\t\t\tthis.state.previousRandom = 0;\r\n\r\n\t\t\t\t\t// SEED_RANDOM returns nothing.\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new Void());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\tcase ControlCommand.CommandType.VisitIndex:\r\n\t\t\t\t\tvar count = this.VisitCountForContainer(this.state.currentContainer) - 1; // index not count\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new IntValue(count));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.SequenceShuffleIndex:\r\n\t\t\t\t\tvar shuffleIndex = this.NextSequenceShuffleIndex();\r\n\t\t\t\t\tthis.state.PushEvaluationStack(new IntValue(shuffleIndex));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.StartThread:\r\n\t\t\t\t\t// Handled in main step function\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ControlCommand.CommandType.Done:\r\n\r\n\t\t\t\t\t// We may exist in the context of the initial\r\n\t\t\t\t\t// act of creating the thread, or in the context of\r\n\t\t\t\t\t// evaluating the content.\r\n\t\t\t\t\tif (this.state.callStack.canPopThread) {\r\n\t\t\t\t\t\tthis.state.callStack.PopThread();\r\n\t\t\t\t\t} \r\n\r\n\t\t\t\t\t// In normal flow - allow safe exit without warning\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.state.didSafeExit = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Stop flow in current thread\r\n\t\t\t\t\t\tthis.state.currentContentObject = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// Force flow to end completely\r\n\t\t\t\tcase ControlCommand.CommandType.End:\r\n\t\t\t\t\tthis.state.ForceEnd();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\tcase ControlCommand.CommandType.ListFromInt:\r\n\t//\t\t\t\tvar intVal = state.PopEvaluationStack () as IntValue;\r\n\t\t\t\t\tvar intVal = parseInt(this.state.PopEvaluationStack());\r\n\t//\t\t\t\tvar listNameVal = state.PopEvaluationStack () as StringValue;\r\n\t\t\t\t\tvar listNameVal = this.state.PopEvaluationStack().toString();\r\n\r\n\t\t\t\t\tvar generatedListValue = null;\r\n\r\n\t\t\t\t\tvar foundListDef;\r\n\t\t\t\t\tif (foundListDef = this.listDefinitions.TryGetDefinition(listNameVal, foundListDef)) {\r\n\t\t\t\t\t\tvar foundItem = foundListDef.TryGetItemWithValue(intVal.value);\r\n\t\t\t\t\t\tif (foundItem.exists) {\r\n\t\t\t\t\t\t\tgeneratedListValue = new ListValue(foundItem.item, intVal.value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new StoryException(\"Failed to find LIST called \" + listNameVal.value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (generatedListValue == null)\r\n\t\t\t\t\t\tgeneratedListValue = new ListValue();\r\n\r\n\t\t\t\t\tthis.state.PushEvaluationStack(generatedListValue);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\tcase ControlCommand.CommandType.ListRange:\r\n\t\t\t\t\tvar max = this.state.PopEvaluationStack();\r\n\t\t\t\t\tvar min = this.state.PopEvaluationStack();\r\n\r\n\t//\t\t\t\tvar targetList = state.PopEvaluationStack () as ListValue;\r\n\t\t\t\t\tvar targetList = this.state.PopEvaluationStack();\r\n\r\n\t\t\t\t\tif (targetList instanceof ListValue === false || targetList == null || min == null || max == null)\r\n\t\t\t\t\t\tthrow new StoryException(\"Expected list, minimum and maximum for LIST_RANGE\");\r\n\r\n\t\t\t\t\t// Allow either int or a particular list item to be passed for the bounds,\r\n\t\t\t\t\t// so wrap up a function to handle this casting for us.\r\n\t\t\t\t\tvar IntBound = function IntBound(obj){\r\n\t//\t\t\t\t\tvar listValue = obj as ListValue;\r\n\t\t\t\t\t\tvar listValue = obj;\r\n\t\t\t\t\t\tif (listValue instanceof ListValue) {\r\n\t\t\t\t\t\t\treturn parseInt(listValue.value.maxItem.Value);\r\n\t\t\t\t\t\t}\r\n\r\n\t//\t\t\t\t\tvar intValue = obj as IntValue;\r\n\t\t\t\t\t\tvar intValue = obj;\r\n\t\t\t\t\t\tif (intValue instanceof IntValue) {\r\n\t\t\t\t\t\t\treturn intValue.value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tvar minVal = IntBound(min);\r\n\t\t\t\t\tvar maxVal = IntBound(max);\r\n\t\t\t\t\tif (minVal == -1)\r\n\t\t\t\t\t\tthrow new StoryException(\"Invalid min range bound passed to LIST_VALUE(): \" + min);\r\n\r\n\t\t\t\t\tif (maxVal == -1)\r\n\t\t\t\t\t\tthrow new StoryException(\"Invalid max range bound passed to LIST_VALUE(): \" + max);\r\n\r\n\t\t\t\t\t// Extract the range of items from the origin list\r\n\t\t\t\t\tvar result = new ListValue();\r\n\t\t\t\t\tvar origins = targetList.value.origins;\r\n\r\n\t\t\t\t\tif (origins != null) {\r\n\t\t\t\t\t\torigins.forEach(function(origin){\r\n\t\t\t\t\t\t\tvar rangeFromOrigin = origin.ListRange(minVal, maxVal);\r\n\t\t\t\t\t\t\trangeFromOrigin.value.forEach(function(kv){\r\n\t\t\t\t\t\t\t\tresult.value.Add(kv.Key, kv.Value);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.state.PushEvaluationStack(result);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.Error(\"unhandled ControlCommand: \" + evalCommand);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Variable assignment\r\n\t\t\telse if( contentObj instanceof VariableAssignment ) {\r\n\t\t\t\tvar varAss = contentObj;\r\n\t\t\t\tvar assignedVal = this.state.PopEvaluationStack();\r\n\t\t\t\t\r\n\t\t\t\t// When in temporary evaluation, don't create new variables purely within\r\n\t\t\t\t// the temporary context, but attempt to create them globally\r\n\t\t\t\t//var prioritiseHigherInCallStack = _temporaryEvaluationContainer != null;\r\n\r\n\t\t\t\tthis.state.variablesState.Assign(varAss, assignedVal);\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Variable reference\r\n\t\t\telse if( contentObj instanceof VariableReference ) {\r\n\t\t\t\tvar varRef = contentObj;\r\n\t\t\t\tvar foundValue = null;\r\n\r\n\r\n\t\t\t\t// Explicit read count value\r\n\t\t\t\tif (varRef.pathForCount != null) {\r\n\r\n\t\t\t\t\tvar container = varRef.containerForCount;\r\n\t\t\t\t\tvar count = this.VisitCountForContainer(container);\r\n\t\t\t\t\tfoundValue = new IntValue(count);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Normal variable reference\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\tfoundValue = this.state.variablesState.GetVariableWithName(varRef.name);\r\n\r\n\t\t\t\t\tif (foundValue == null) {\r\n\t\t\t\t\t\tthis.Error(\"Uninitialised variable: \" + varRef.name);\r\n\t\t\t\t\t\tfoundValue = new IntValue(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.state.PushEvaluationStack(foundValue);\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Native function call\r\n\t\t\telse if (contentObj instanceof NativeFunctionCall) {\r\n\t\t\t\tvar func = contentObj;\r\n\t\t\t\tvar funcParams = this.state.PopEvaluationStack(func.numberOfParameters);\r\n\t\t\t\tvar result = func.Call(funcParams);\r\n\t\t\t\tthis.state.PushEvaluationStack(result);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// No control content, must be ordinary content\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tChoosePathString(path, args){\r\n\t\t\targs = args || [];\r\n\t\t\tthis.state.PassArgumentsToEvaluationStack(args);\r\n\t\t\tthis.ChoosePath(new Path$1(path));\r\n\t\t}\r\n\t\tChoosePath(p){\r\n\t\t\tthis.state.SetChosenPath(p);\r\n\r\n\t\t\t// Take a note of newly visited containers for read counts etc\r\n\t\t\tthis.VisitChangedContainersDueToDivert();\r\n\t\t}\r\n\t\tChooseChoiceIndex(choiceIdx){\r\n\t\t\tchoiceIdx = choiceIdx;\r\n\t\t\tvar choices = this.currentChoices;\r\n\t\t\tif (choiceIdx < 0 || choiceIdx > choices.length) console.warn(\"choice out of range\");\r\n\r\n\t\t\t// Replace callstack with the one from the thread at the choosing point, \r\n\t\t\t// so that we can jump into the right place in the flow.\r\n\t\t\t// This is important in case the flow was forked by a new thread, which\r\n\t\t\t// can create multiple leading edges for the story, each of\r\n\t\t\t// which has its own context.\r\n\t\t\tvar choiceToChoose = choices[choiceIdx];\r\n\t\t\tthis.state.callStack.currentThread = choiceToChoose.threadAtGeneration;\r\n\r\n\t\t\tthis.ChoosePath(choiceToChoose.choicePoint.choiceTarget.path);\r\n\t\t}\r\n\t\tHasFunction(functionName){\r\n\t\t\ttry {\r\n\t\t\t\treturn this.ContentAtPath(new Path$1(functionName)) instanceof Container;\r\n\t\t\t} catch(e) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tEvaluateFunction(functionName, args, returnTextOutput){\r\n\t\t\t//EvaluateFunction behaves slightly differently than the C# version. In C#, you can pass a (second) parameter `out textOutput` to get the text outputted by the function. This is not possible in js. Instead, we maintain the regular signature (functionName, args), plus an optional third parameter returnTextOutput. If set to true, we will return both the textOutput and the returned value, as an object.\r\n\t\t\treturnTextOutput = !!returnTextOutput;\r\n\t\t\t\r\n\t\t\tif (functionName == null) {\r\n\t\t\t\tthrow \"Function is null\";\r\n\t\t\t} \r\n\t\t\telse if (functionName == '' || functionName.trim() == '') {\r\n\t\t\t\tthrow \"Function is empty or white space.\";\r\n\t\t\t}\r\n\r\n\t\t\tvar funcContainer = null;\r\n\t\t\ttry {\r\n\t\t\t\tfuncContainer = this.ContentAtPath(new Path$1(functionName));\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (e.message.indexOf(\"not found\") >= 0)\r\n\t\t\t\t\tthrow \"Function doesn't exist: '\" + functionName + \"'\";\r\n\t\t\t\telse\r\n\t\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.state.StartExternalFunctionEvaluation(funcContainer, args);\r\n\t\t\t\r\n\t\t\t// Evaluate the function, and collect the string output\r\n\t\t\tvar stringOutput = new StringBuilder();\r\n\t\t\twhile (this.canContinue) {\r\n\t\t\t\tstringOutput.Append(this.Continue());\r\n\t\t\t}\r\n\t\t\tvar textOutput = stringOutput.toString();\r\n\t\t\t\r\n\t\t\tvar result = this.state.CompleteExternalFunctionEvaluation();\r\n\r\n\t\t\treturn (returnTextOutput) ? {'returned': result, 'output': textOutput} : result;\r\n\t\t}\r\n\t\tEvaluateExpression(exprContainer){\r\n\t\t\tvar startCallStackHeight = this.state.callStack.elements.length;\r\n\r\n\t\t\tthis.state.callStack.Push(PushPopType.Tunnel);\r\n\r\n\t\t\tthis._temporaryEvaluationContainer = exprContainer;\r\n\r\n\t\t\tthis.state.GoToStart();\r\n\r\n\t\t\tvar evalStackHeight = this.state.evaluationStack.length;\r\n\r\n\t\t\tthis.Continue();\r\n\r\n\t\t\tthis._temporaryEvaluationContainer = null;\r\n\r\n\t\t\t// Should have fallen off the end of the Container, which should\r\n\t\t\t// have auto-popped, but just in case we didn't for some reason,\r\n\t\t\t// manually pop to restore the state (including currentPath).\r\n\t\t\tif (this.state.callStack.elements.length > startCallStackHeight) {\r\n\t\t\t\tthis.state.callStack.Pop();\r\n\t\t\t}\r\n\r\n\t\t\tvar endStackHeight = this.state.evaluationStack.length;\r\n\t\t\tif (endStackHeight > evalStackHeight) {\r\n\t\t\t\treturn this.state.PopEvaluationStack();\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tCallExternalFunction(funcName, numberOfArguments){\r\n\t\t\tvar func = this._externals[funcName];\r\n\t\t\tvar fallbackFunctionContainer = null;\r\n\r\n\t\t\tvar foundExternal = typeof func !== 'undefined';\r\n\r\n\t\t\t// Try to use fallback function?\r\n\t\t\tif (!foundExternal) {\r\n\t\t\t\tif (this.allowExternalFunctionFallbacks) {\r\n\t//\t\t\t\tfallbackFunctionContainer = ContentAtPath (new Path (funcName)) as Container;\r\n\t\t\t\t\tfallbackFunctionContainer = this.ContentAtPath(new Path$1(funcName));\r\n\t\t\t\t\tif (!(fallbackFunctionContainer instanceof Container)) console.warn(\"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound, and fallback ink function could not be found.\");\r\n\r\n\t\t\t\t\t// Divert direct into fallback function and we're done\r\n\t\t\t\t\tthis.state.callStack.Push(PushPopType.Function);\r\n\t\t\t\t\tthis.state.divertedTargetObject = fallbackFunctionContainer;\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\"Trying to call EXTERNAL function '\" + funcName + \"' which has not been bound (and ink fallbacks disabled).\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Pop arguments\r\n\t\t\tvar args = [];\r\n\t\t\tfor (var i = 0; i < numberOfArguments; ++i) {\r\n\t//\t\t\tvar poppedObj = state.PopEvaluationStack () as Value;\r\n\t\t\t\tvar poppedObj = this.state.PopEvaluationStack();\r\n\t\t\t\tvar valueObj = poppedObj.valueObject;\r\n\t\t\t\targs.push(valueObj);\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse arguments from the order they were popped,\r\n\t\t\t// so they're the right way round again.\r\n\t\t\targs.reverse();\r\n\r\n\t\t\t// Run the function!\r\n\t\t\tvar funcResult = func(args);\r\n\r\n\t\t\t// Convert return value (if any) to the a type that the ink engine can use\r\n\t\t\tvar returnObj = null;\r\n\t\t\tif (funcResult != null) {\r\n\t\t\t\treturnObj = Value.Create(funcResult);\r\n\t\t\t\tif (returnObj == null) console.warn(\"Could not create ink value from returned object of type \" + (typeof funcResult));\r\n\t\t\t} else {\r\n\t\t\t\treturnObj = new Void();\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.PushEvaluationStack(returnObj);\r\n\t\t}\r\n\t\tTryCoerce(value){\r\n\t\t\t//we're skipping type coercition in this implementation. First of, js is loosely typed, so it's not that important. Secondly, there is no clean way (AFAIK) for the user to describe what type of parameters he/she expects.\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tBindExternalFunctionGeneral(funcName, func){\r\n\t\t\tif (this._externals[funcName]) console.warn(\"Function '\" + funcName + \"' has already been bound.\");\r\n\t\t\tthis._externals[funcName] = func;\r\n\t\t}\r\n\t\tBindExternalFunction(funcName, func){\r\n\t\t\tif (!func) console.warn(\"Can't bind a null function\");\r\n\r\n\t\t\tthis.BindExternalFunctionGeneral(funcName, (args) => {\r\n\t\t\t\tif (args.length < func.length) console.warn(\"External function expected \" + func.length + \" arguments\");\r\n\t\t\t\t\r\n\t\t\t\tvar coercedArgs = [];\r\n\t\t\t\tfor (var i = 0, l = args.length; i < l; i++){\r\n\t\t\t\t\tcoercedArgs[i] = this.TryCoerce(args[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn func.apply(null, coercedArgs);\r\n\t\t\t});\r\n\t\t}\r\n\t\tUnbindExternalFunction(funcName){\r\n\t\t\tif (typeof this._externals[funcName] === 'undefined') console.warn(\"Function '\" + funcName + \"' has not been bound.\");\r\n\t\t\tdelete this._externals[funcName];\r\n\t\t}\r\n\t\tValidateExternalBindings(containerOrObject, missingExternals){\r\n\t\t\tif (!containerOrObject){\r\n\t\t\t\tvar missingExternals = [];\r\n\t\t\t\tthis.ValidateExternalBindings(this._mainContentContainer, missingExternals);\r\n\t            this._hasValidatedExternals = true;\r\n\t\t\t\t\r\n\t\t\t\t// No problem! Validation complete\r\n\t\t\t\tif( missingExternals.length == 0 ) {\r\n\t\t\t\t\tthis._hasValidatedExternals = true;\r\n\t\t\t\t} \r\n\r\n\t\t\t\t// Error for all missing externals\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar message = \"Error: Missing function binding for external\";\r\n\t\t\t\t\tmessage += (missingExternals.length > 1) ? \"s\" : \"\";\r\n\t\t\t\t\tmessage += \": '\";\r\n\t\t\t\t\tmessage += missingExternals.join(\"', '\");\r\n\t\t\t\t\tmessage += \"' \";\r\n\t\t\t\t\tmessage += (this.allowExternalFunctionFallbacks) ? \", and no fallback ink function found.\" : \" (ink fallbacks disabled)\";\r\n\r\n\t\t\t\t\tthis.Error(message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (containerOrObject instanceof Container){\r\n\t\t\t\tvar c = containerOrObject;\r\n\t\t\t\t\r\n\t\t\t\tc.content.forEach(innerContent => {\r\n\t\t\t\t\tthis.ValidateExternalBindings(innerContent, missingExternals);\r\n\t\t\t\t});\r\n\t\t\t\tfor (var key in c.namedContent){\r\n\t\t\t\t\tthis.ValidateExternalBindings(c.namedContent[key], missingExternals);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar o = containerOrObject;\r\n\t\t\t\t//the following code is already taken care of above in this implementation\r\n\t//\t\t\tvar container = o as Container;\r\n\t//            if (container) {\r\n\t//                ValidateExternalBindings (container, missingExternals);\r\n\t//                return;\r\n\t//            }\r\n\r\n\t//            var divert = o as Divert;\r\n\t            var divert = o;\r\n\t            if (divert instanceof Divert && divert.isExternal) {\r\n\t                var name = divert.targetPathString;\r\n\r\n\t                if (!this._externals[name]) {\r\n\t\t\t\t\t\tif( this.allowExternalFunctionFallbacks ) {\r\n\t\t\t\t\t\t\tvar fallbackFound = !!this.mainContentContainer.namedContent[name];\r\n\t\t\t\t\t\t\tif( !fallbackFound ) {\r\n\t\t\t\t\t\t\t\tmissingExternals.push(name);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmissingExternals.push(name);\r\n\t\t\t\t\t\t}\r\n\t                }\r\n\t            }\r\n\t\t\t}\r\n\t\t}\r\n\t\tObserveVariable(variableName, observer){\r\n\t\t\tif (this._variableObservers == null)\r\n\t\t\t\tthis._variableObservers = {};\r\n\r\n\t\t\tif (this._variableObservers[variableName]) {\r\n\t\t\t\tthis._variableObservers[variableName].push(observer);\r\n\t\t\t} else {\r\n\t\t\t\tthis._variableObservers[variableName] = [observer];\r\n\t\t\t}\r\n\t\t}\r\n\t\tObserveVariables(variableNames, observers){\r\n\t\t\tfor (var i = 0, l = variableNames.length; i < l; i++){\r\n\t\t\t\tthis.ObserveVariable(variableNames[i], observers[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tRemoveVariableObserver(observer, specificVariableName){\r\n\t\t\tif (this._variableObservers == null)\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// Remove observer for this specific variable\r\n\t\t\tif (typeof specificVariableName !== 'undefined') {\r\n\t\t\t\tif (this._variableObservers[specificVariableName]) {\r\n\t\t\t\t\tthis._variableObservers[specificVariableName].splice(this._variableObservers[specificVariableName].indexOf(observer), 1);\r\n\t\t\t\t}\r\n\t\t\t} \r\n\r\n\t\t\t// Remove observer for all variables\r\n\t\t\telse {\r\n\t\t\t\tfor (var varName in this._variableObservers){\r\n\t\t\t\t\tthis._variableObservers[varName].splice(this._variableObservers[varName].indexOf(observer), 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariableStateDidChangeEvent(variableName, newValueObj){\r\n\t\t\tif (this._variableObservers == null)\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tvar observers = this._variableObservers[variableName];\r\n\t\t\tif (typeof observers !== 'undefined') {\r\n\r\n\t\t\t\tif (!(newValueObj instanceof Value)) {\r\n\t\t\t\t\tthrow \"Tried to get the value of a variable that isn't a standard type\";\r\n\t\t\t\t}\r\n\t//\t\t\tvar val = newValueObj as Value;\r\n\t\t\t\tvar val = newValueObj;\r\n\r\n\t\t\t\tobservers.forEach(function(observer){\r\n\t\t\t\t\tobserver(variableName, val.valueObject);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tTagsForContentAtPath(path){\r\n\t\t\treturn this.TagsAtStartOfFlowContainerWithPathString(path);\r\n\t\t}\r\n\t\tTagsAtStartOfFlowContainerWithPathString(pathString){\r\n\t\t\tvar path = new Path$1(pathString);\r\n\r\n\t\t\t// Expected to be global story, knot or stitch\r\n\t//\t\tvar flowContainer = ContentAtPath (path) as Container;\r\n\t\t\tvar flowContainer = this.ContentAtPath(path);\r\n\t\t\twhile(true) {\r\n\t\t\t\tvar firstContent = flowContainer.content[0];\r\n\t\t\t\tif (firstContent instanceof Container)\r\n\t\t\t\t\tflowContainer = firstContent;\r\n\t\t\t\telse break;\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t// Any initial tag objects count as the \"main tags\" associated with that story/knot/stitch\r\n\t\t\tvar tags = null;\r\n\t\t\t\r\n\t\t\tflowContainer.content.every(c => {\r\n\t//\t\t\tvar tag = c as Runtime.Tag;\r\n\t\t\t\tvar tag = c;\r\n\t\t\t\tif (tag instanceof Tag) {\r\n\t\t\t\t\tif (tags == null) tags = [];\r\n\t\t\t\t\ttags.push(tag.text);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else return false;\r\n\t\t\t});\r\n\r\n\t\t\treturn tags;\r\n\t\t}\r\n\t\tBuildStringOfHierarchy(){\r\n\t\t\tvar sb = new StringBuilder();\r\n\r\n\t\t\tthis.mainContentContainer.BuildStringOfHierarchy(sb, 0, this.state.currentContentObject);\r\n\r\n\t    return sb.toString();\r\n\t\t}\r\n\t\tBuildStringOfContainer(container){\r\n\t\t\tvar sb = new StringBuilder();\r\n\t\t\tcontainer.BuildStringOfHierarchy(sb, 0, this.state.currentContentObject);\r\n\t\t\treturn sb.toString();\r\n\t\t}\r\n\t\tNextContent(){\r\n\t\t\t// Setting previousContentObject is critical for VisitChangedContainersDueToDivert\r\n\t\t\tthis.state.previousContentObject = this.state.currentContentObject;\r\n\t\t\t\r\n\t\t\t// Divert step?\r\n\t\t\tif (this.state.divertedTargetObject != null) {\r\n\r\n\t\t\t\tthis.state.currentContentObject = this.state.divertedTargetObject;\r\n\t\t\t\tthis.state.divertedTargetObject = null;\r\n\r\n\t\t\t\t// Internally uses state.previousContentObject and state.currentContentObject\r\n\t\t\t\tthis.VisitChangedContainersDueToDivert();\r\n\r\n\t\t\t\t// Diverted location has valid content?\r\n\t\t\t\tif (this.state.currentContentObject != null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Otherwise, if diverted location doesn't have valid content,\r\n\t\t\t\t// drop down and attempt to increment.\r\n\t\t\t\t// This can happen if the diverted path is intentionally jumping\r\n\t\t\t\t// to the end of a container - e.g. a Conditional that's re-joining\r\n\t\t\t}\r\n\r\n\t\t\tvar successfulPointerIncrement = this.IncrementContentPointer();\r\n\r\n\t\t\t// Ran out of content? Try to auto-exit from a function,\r\n\t\t\t// or finish evaluating the content of a thread\r\n\t\t\tif (!successfulPointerIncrement) {\r\n\r\n\t\t\t\tvar didPop = false;\r\n\r\n\t\t\t\tif (this.state.callStack.CanPop(PushPopType.Function)) {\r\n\r\n\t\t\t\t\t// Pop from the call stack\r\n\t\t\t\t\tthis.state.callStack.Pop(PushPopType.Function);\r\n\r\n\t\t\t\t\t// This pop was due to dropping off the end of a function that didn't return anything,\r\n\t\t\t\t\t// so in this case, we make sure that the evaluator has something to chomp on if it needs it\r\n\t\t\t\t\tif (this.state.inExpressionEvaluation) {\r\n\t\t\t\t\t\tthis.state.PushEvaluationStack(new Void());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdidPop = true;\r\n\t\t\t\t} \r\n\r\n\t\t\t\telse if (this.state.callStack.canPopThread) {\r\n\t\t\t\t\tthis.state.callStack.PopThread();\r\n\r\n\t\t\t\t\tdidPop = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.state.TryExitExternalFunctionEvaluation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Step past the point where we last called out\r\n\t\t\t\tif (didPop && this.state.currentContentObject != null) {\r\n\t\t\t\t\tthis.NextContent();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tIncrementContentPointer(){\r\n\t\t\tvar successfulIncrement = true;\r\n\r\n\t\t\tvar currEl = this.state.callStack.currentElement;\r\n\t\t\tcurrEl.currentContentIndex++;\r\n\r\n\t\t\t// Each time we step off the end, we fall out to the next container, all the\r\n\t\t\t// while we're in indexed rather than named content\r\n\t\t\twhile (currEl.currentContentIndex >= currEl.currentContainer.content.length) {\r\n\r\n\t\t\t\tsuccessfulIncrement = false;\r\n\r\n\t//\t\t\tContainer nextAncestor = currEl.currentContainer.parent as Container;\r\n\t\t\t\tvar nextAncestor = currEl.currentContainer.parent;\r\n\t\t\t\tif (nextAncestor instanceof Container === false) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar indexInAncestor = nextAncestor.content.indexOf(currEl.currentContainer);\r\n\t\t\t\tif (indexInAncestor == -1) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrEl.currentContainer = nextAncestor;\r\n\t\t\t\tcurrEl.currentContentIndex = indexInAncestor + 1;\r\n\r\n\t\t\t\tsuccessfulIncrement = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!successfulIncrement)\r\n\t\t\t\tcurrEl.currentContainer = null;\r\n\r\n\t\t\treturn successfulIncrement;\r\n\t\t}\r\n\t\tTryFollowDefaultInvisibleChoice(){\r\n\t\t\tvar allChoices = this._state.currentChoices;\r\n\r\n\t\t\t// Is a default invisible choice the ONLY choice?\r\n\t\t\tvar invisibleChoices = allChoices.filter(c => {\r\n\t\t\t\treturn c.choicePoint.isInvisibleDefault;\r\n\t\t\t});\r\n\t\t\tif (invisibleChoices.length == 0 || allChoices.length > invisibleChoices.length)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar choice = invisibleChoices[0];\r\n\r\n\t\t\tthis.ChoosePath(choice.choicePoint.choiceTarget.path);\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tVisitCountForContainer(container){\r\n\t\t\tif( !container.visitsShouldBeCounted ) {\r\n\t\t\t\tconsole.warn(\"Read count for target (\"+container.name+\" - on \"+container.debugMetadata+\") unknown. The story may need to be compiled with countAllVisits flag (-c).\");\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar count = 0;\r\n\t\t\tvar containerPathStr = container.path.toString();\r\n\t\t\tcount = this.state.visitCounts[containerPathStr] || count;\r\n\t\t\treturn count;\r\n\t\t}\r\n\t\tIncrementVisitCountForContainer(container){\r\n\t\t\tvar count = 0;\r\n\t\t\tvar containerPathStr = container.path.toString();\r\n\t\t\tif (this.state.visitCounts[containerPathStr]) count = this.state.visitCounts[containerPathStr];\r\n\t\t\tcount++;\r\n\t\t\tthis.state.visitCounts[containerPathStr] = count;\r\n\t\t}\r\n\t\tRecordTurnIndexVisitToContainer(container){\r\n\t\t\tvar containerPathStr = container.path.toString();\r\n\t\t\tthis.state.turnIndices[containerPathStr] = this.state.currentTurnIndex;\r\n\t\t}\r\n\t\tTurnsSinceForContainer(container){\r\n\t\t\tif( !container.turnIndexShouldBeCounted ) {\r\n\t\t\t\tthis.Error(\"TURNS_SINCE() for target (\"+container.name+\" - on \"+container.debugMetadata+\") unknown. The story may need to be compiled with countAllVisits flag (-c).\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar containerPathStr = container.path.toString();\r\n\t\t\tvar index = this.state.turnIndices[containerPathStr];\r\n\t\t\tif (typeof index !== 'undefined') {\r\n\t\t\t\treturn this.state.currentTurnIndex - index;\r\n\t\t\t} else {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tNextSequenceShuffleIndex(){\r\n\t//\t\tvar numElementsIntVal = state.PopEvaluationStack () as IntValue;\r\n\t\t\tvar numElementsIntVal = this.state.PopEvaluationStack();\r\n\t\t\tif (!(numElementsIntVal instanceof IntValue)) {\r\n\t\t\t\tthis.Error(\"expected number of elements in sequence for shuffle index\");\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar seqContainer = this.state.currentContainer;\r\n\r\n\t\t\tvar numElements = numElementsIntVal.value;\r\n\r\n\t//\t\tvar seqCountVal = state.PopEvaluationStack () as IntValue;\r\n\t\t\tvar seqCountVal = this.state.PopEvaluationStack();\r\n\t\t\tvar seqCount = seqCountVal.value;\r\n\t\t\tvar loopIndex = seqCount / numElements;\r\n\t\t\tvar iterationIndex = seqCount % numElements;\r\n\r\n\t\t\t// Generate the same shuffle based on:\r\n\t\t\t//  - The hash of this container, to make sure it's consistent\r\n\t\t\t//    each time the runtime returns to the sequence\r\n\t\t\t//  - How many times the runtime has looped around this full shuffle\r\n\t\t\tvar seqPathStr = seqContainer.path.toString();\r\n\t\t\tvar sequenceHash = 0;\r\n\t\t\tfor (var i = 0, l = seqPathStr.length; i < l; i++){\r\n\t\t\t\tsequenceHash += seqPathStr.charCodeAt[i] || 0;\r\n\t\t\t}\r\n\t\t\tvar randomSeed = sequenceHash + loopIndex + this.state.storySeed;\r\n\t\t\tvar random = new PRNG(parseInt(randomSeed));\r\n\r\n\t\t\tvar unpickedIndices = [];\r\n\t\t\tfor (var i = 0; i < numElements; ++i) {\r\n\t\t\t\tunpickedIndices.push(i);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i <= iterationIndex; ++i) {\r\n\t\t\t\tvar chosen = random.next() % unpickedIndices.length;\r\n\t\t\t\tvar chosenIndex = unpickedIndices[chosen];\r\n\t\t\t\tunpickedIndices.splice(chosen, 1);\r\n\r\n\t\t\t\tif (i == iterationIndex) {\r\n\t\t\t\t\treturn chosenIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthrow \"Should never reach here\";\r\n\t\t}\r\n\t\tError(message, useEndLineNumber){\r\n\t\t\tvar e = new StoryException(message);\r\n\t//\t\te.useEndLineNumber = useEndLineNumber;\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t\tAddError(message, useEndLineNumber){\r\n\t//\t\tvar dm = this.currentDebugMetadata;\r\n\t\t\tvar dm = null;\r\n\t\t\t\r\n\t\t\tif (dm != null) {\r\n\t\t\t\tvar lineNum = useEndLineNumber ? dm.endLineNumber : dm.startLineNumber;\r\n\t\t\t\tmessage = \"RUNTIME ERROR: '\" + dm.fileName + \"' line \" + lineNum + \": \" + message;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmessage = \"RUNTIME ERROR: \" + message;\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.AddError(message);\r\n\t\t\t\r\n\t\t\t// In a broken state don't need to know about any other errors.\r\n\t\t\tthis.state.ForceEnd();\r\n\t\t}\r\n\t}\n\n\texports.Story = Story;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import {Story} from 'inkjs/dist/ink-es2015';\nimport getScene from './scene';\n\nclass AtramentStory {\n  constructor(storyContent) {\n    this.story = new Story(storyContent);\n  }\n\n  // getters\n\n  get state() {\n    return this.story.state;\n  }\n\n  getScene(cmdInstance) {\n    return getScene(this.story, cmdInstance);\n  }\n\n  makeChoice(id) {\n    this.story.ChooseChoiceIndex(id); // eslint-disable-line new-cap\n  }\n\n  saveState() {\n    return this.story.state.toJson();\n  }\n\n  loadState(jsonState) {\n    this.story.state.LoadJson(jsonState); // eslint-disable-line new-cap\n  }\n\n  // get global tags for story\n  globalTags() {\n    return this.story.globalTags;\n  }\n\n  // get tags for knot\n  tagsForKnot(knot) {\n    return this.story.TagsForContentAtPath(knot); // eslint-disable-line new-cap\n  }\n\n  // go to knot/stitch\n  goTo(ref) {\n    this.story.ChoosePathString(ref); // eslint-disable-line new-cap\n  }\n\n  // get variable value\n  getVar(name) {\n    return this.story.variablesState[name];\n  }\n\n  // get all global variable values\n  getVars() {\n    const vState = this.story.variablesState;\n    const vars = {};\n    // eslint-disable-next-line no-underscore-dangle\n    Object.keys(vState._globalVariables).forEach((k) => {\n      vars[k] = vState[k];\n    });\n    return vars;\n  }\n\n  // set variable value\n  setVar(name, value) {\n    this.story.variablesState[name] = value;\n  }\n\n  // batch set variables values\n  setVars(vars) {\n    Object.keys(vars).forEach((k) => {\n      this.story.variablesState[k] = vars[k];\n    });\n  }\n\n  // get visit count\n  getVisitCount(ref) {\n    this.story.state.VisitCountAtPathString(ref); // eslint-disable-line new-cap\n  }\n\n  // register observe variable callback\n  // function callback(variableName:string, newValue) {}\n  observeVar(name, callback) {\n    this.story.ObserveVariable(name, callback); // eslint-disable-line new-cap\n  }\n\n  // bind external function\n  // (name, function_definition)\n  bindFunction(fnName, functionDef) {\n    this.story.BindExternalFunction(fnName, functionDef); // eslint-disable-line new-cap\n  }\n}\n\nexport default AtramentStory;\n","import AtramentStory from './story';\n\nclass Episode {\n  constructor(episodeId, storyContent, inkObservers, inkFunctions) {\n    this.id = episodeId;\n    this.$episode = [];\n    this.$story = new AtramentStory(storyContent);\n    this.sceneId = -1;\n    inkObservers.attach(this.$story);\n    inkFunctions.attach(this.$story);\n  }\n\n  reset() {\n    this.$episode.splice(0);\n    this.sceneId = -1;\n  }\n\n  renderScene(cmdInstance) {\n    const scene = this.$story.getScene(cmdInstance);\n    return this.updateEpisode(scene);\n  }\n\n  getCurrentScene() {\n    return this.$episode[this.$episode.length - 1];\n  }\n\n  makeChoice(choiceId) {\n    this.$story.makeChoice(choiceId);\n  }\n\n  // getters\n\n  get story() {\n    return this.$story;\n  }\n\n  get content() {\n    return this.$episode;\n  }\n\n  // internal methods\n\n  updateEpisode(scene) {\n    // deactivate previous scene\n    if (this.sceneId >= 0) {\n      this.$episode[this.sceneId].isActive = false;\n    }\n    this.sceneId += 1;\n    // append new scene\n    scene.isActive = true;\n    scene.id = this.sceneId;\n    this.$episode.push(scene);\n    return scene;\n  }\n\n  // get state snapshot\n  getState() {\n    return {\n      filename: this.id,\n      episode: this.$episode,\n      story: JSON.parse(this.$story.saveState())\n    };\n  }\n\n  // restore\n  restoreState(state) {\n    this.id = state.filename;\n    this.$episode = state.episode;\n    this.$story.loadState(JSON.stringify(state.story));\n  }\n}\n\nexport default Episode;\n","import Episode from './episode';\nimport Command from './command';\nimport InkObservers from './ink/observers';\nimport InkFunctions from './ink/functions';\n\nfunction stub(id) {\n  return new Promise(() => {\n    throw new Error(`${id} is not implemented`);\n  });\n}\n\nclass Atrament {\n  constructor(gameConfig) {\n    this.game = gameConfig;\n    this.events = {\n      loadStory: () => stub('loadStory'),\n      loadGame: () => stub('loadGame'),\n      saveGame: () => stub('saveGame'),\n      error: () => stub('error')\n    };\n    this.inkObservers = new InkObservers();\n    this.inkFunctions = new InkFunctions();\n    this.inkCommands = {};\n    this.episode = {};\n    this.command = {};\n    this.transcript = [];\n  }\n\n  startGame() {\n    // load first episode\n    return this.loadEpisode(this.game.episodes[0]).then(() => {\n      this.episode.reset();\n    });\n  }\n\n  loadGame(slotId) {\n    let gameState = {};\n    return this.dispatch('loadGame', slotId)\n      .then((data) => {\n        gameState = JSON.parse(data);\n        return this.loadEpisode(gameState.episode.filename);\n      })\n      .then(() => {\n        this.episode.restoreState(gameState.episode);\n      });\n  }\n\n  saveGame(slotId) {\n    return this.dispatch(\n      'saveGame',\n      {\n        id: slotId,\n        data: this.getGameState()\n      }\n    );\n  }\n\n  // render scene\n  renderScene() {\n    const scene = this.episode.renderScene(this.command);\n    if (this.game.transcript) {\n      this.transcript.push(scene);\n    }\n    return scene;\n  }\n\n  getCurrentEpisode() {\n    return this.episode.content;\n  }\n\n  // get current scene, rendered by renderScene\n  getCurrentScene() {\n    return this.episode.getCurrentScene();\n  }\n\n  getTranscript() {\n    return this.transcript;\n  }\n\n  makeChoice(choiceId) {\n    return new Promise((resolve, reject) => {\n      try {\n        if (this.game.transcript) {\n          this.transcript[this.transcript.length - 1].chosen = choiceId;\n        }\n        this.episode.makeChoice(choiceId);\n      } catch (error) {\n        this.dispatch('error', error);\n        reject(error);\n      }\n      resolve();\n    });\n  }\n\n  loadEpisode(filename) {\n    return this.dispatch('loadStory', filename).then((data) => {\n      const storyContent = typeof data === 'string' ? JSON.parse(data) : data;\n      this.initEpisode(filename, storyContent);\n    });\n  }\n\n  initEpisode(filename, storyContent) {\n    // init episode\n    const episode = new Episode(filename, storyContent, this.inkObservers, this.inkFunctions);\n    this.episode = episode;\n    // register commands with correct dependencies\n    this.command = new Command({episode: this.episode, story: this.episode.story});\n    Object.keys(this.inkCommands).forEach((cmd) => {\n      const cmdObj = this.inkCommands[cmd];\n      this.command.register(cmd, cmdObj.callback, cmdObj.deps);\n    });\n  }\n\n  getGameState() {\n    return {\n      episode: this.episode.getState()\n    };\n  }\n\n  // register event handler\n  on(eventName, eventHandler) {\n    this.events[eventName] = eventHandler;\n  }\n\n  // dispatch event\n  dispatch(eventName, eventParams) {\n    return this.events[eventName](eventParams);\n  }\n\n  // register functions for ink story\n  registerFunctions(fnList) {\n    this.inkFunctions.register(fnList);\n  }\n\n  // register observers for ink story variables\n  registerObservers(obList) {\n    this.inkObservers.register(obList);\n  }\n\n  // register Ink commands\n  registerCommand(cmd, callback, deps) {\n    this.inkCommands[cmd] = {callback, deps};\n  }\n\n  debug() {\n    return this.episode.story.state;\n  }\n}\n\nmodule.exports = Atrament;\n"],"sourceRoot":""}