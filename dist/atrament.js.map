{"version":3,"sources":["webpack://Atrament/webpack/universalModuleDefinition","webpack://Atrament/webpack/bootstrap","webpack://Atrament/./node_modules/inkjs/dist/ink-es2015.js","webpack://Atrament/./src/scene.js","webpack://Atrament/./src/story.js","webpack://Atrament/./src/commands.js","webpack://Atrament/./src/pubsub.js","webpack://Atrament/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","[object Object]","_components","_componentsString","_isRelative","arguments","componentsString","Component","push","concat","Array","isRelative","componentCount","length","head","tail","slice","lastComponent","containsNamedComponent","isIndex","isParent","join","substring","split","test","parseInt","Equals","apply","a","h","Error","hasValidName","u","parentId","index","toString","console","warn","trace","AssertType","Assert","parent","_debugMetadata","_path","debugMetadata","ownDebugMetadata","rootContentContainer","ContentAtPath","obj","startLineNumber","path","N","unshift","content","indexOf","GetComponent","Math","min","ToParent","PathByAppendingPath","ConvertPathToRelative","string","Length","Append","replace","f","originName","itemName","Null","isNull","fullName","JSON","stringify","parse","isLikeInkListItem","g","Map","super","origins","_originNames","SetInitialOriginName","listDefinitions","TryListGetDefinition","exists","result","Add","Key","Value","AddItem","TryGetValueForItem","ContainsItemWithName","ValueForItem","fromSerializedKey","has","serialized","set","delete","Count","size","originOfMaxItem","maxItem","every","originNames","minItem","inverse","items","ContainsKey","all","orderedItems","Number","MAX_SAFE_INTEGER","isInteger","SetInitialOriginNames","sort","localeCompare","NaN","C","useEndLineNumber","message","v","S","T","isNaN","_","String","w","O","b","Create","valueObject","valueType","y","isTruthy","Int","Float","BadCastException","_isNewline","_isInlineWhitespace","isNewline","isInlineWhitespace","isNonWhitespace","parseFloat","DivertTarget","targetPath","E","_contextIndex","contextIndex","variableName","VariablePointer","List","x","approximate","correctObj","container","_content","namedContent","visitsShouldBeCounted","turnIndexShouldBeCounted","countingAtStartOnly","_pathToFirstLeafContent","AddContent","namedOnlyContent","AddToNamedContentOnly","countFlags","CountFlags","Visits","Turns","CountStartOnly","pathToFirstLeafContent","internalPathToFirstLeafContent","TryAddNamedContent","ContentWithPathComponent","BuildStringOfHierarchy","AppendFormat","AppendLine","P","A","commandType","_commandType","CommandType","NotSet","EvalStart","EvalOutput","EvalEnd","Duplicate","PopEvaluatedValue","PopFunction","PopTunnel","BeginString","EndString","NoOp","ChoiceCount","TurnsSince","ReadCount","Random","SeedRandom","VisitIndex","SequenceShuffleIndex","StartThread","Done","End","ListFromInt","ListRange","ListRandom","TOTAL_VALUES","Tunnel","Function","FunctionEvaluationFromGame","k","PathByAppendingComponent","I","_targetPath","_targetPointer","variableDivertName","pushesToStack","stackPushType","isExternal","externalArgs","isConditional","targetPointer","Resolve","ResolvePath","StartOf","copy","targetPathString","CompactPathString","hasVariableTarget","F","_pathOnChoice","hasCondition","hasStartContent","hasChoiceOnlyContent","isInvisibleDefault","onceOnly","pathOnChoice","choiceTarget","pathStringOnChoice","flags","V","pathForCount","containerForCount","pathStringForCount","L","isNewDeclaration","isGlobal","R","D","_name","_numberOfParameters","_prototype","_isPrototype","_operationFuncs","GenerateNativeFunctionsIfNecessary","numberOfParameters","_nativeFunctions","Call","CallBinaryListOperation","CoerceValuesToSingleType","CallType","CallListIncrementOperation","TryGetItemWithValue","Cast","AddIntBinaryOp","Subtract","Multiply","Divide","round","Mod","AddIntUnaryOp","Negate","Equal","Greater","Less","GreaterThanOrEquals","LessThanOrEquals","NotEquals","Not","And","Or","Max","max","Min","Pow","pow","Floor","Identity","Ceiling","AddFloatBinaryOp","AddFloatUnaryOp","floor","ceil","AddStringBinaryOp","Has","includes","Hasnt","AddListBinaryOp","Union","Without","Contains","Intersect","GreaterThan","LessThan","AddListUnaryOp","Invert","All","ListMin","MinAsList","ListMax","MaxAsList","ValueOfList","AddOpToNativeFunc","AddOpFuncForType","M","text","G","threadAtGeneration","sourcePath","originalThreadIndex","B","_items","_itemNameToValues","W","_lists","_allUnambiguousListValueCache","lists","j","RuntimeObjectToJToken","JTokenToRuntimeObject","_controlCommandNames","CallExistsWithName","CallWithName","isArray","ci","var","exArgs","flg","re","list","originalChoicePath","JObjectToChoice","JArrayToContainer","ContainerToJArray","InkListToJObject","ChoiceToJObject","ListToJArray","DictionaryRuntimeObjsToJObject","keys","JArrayToRuntimeObjList","J","_threadCounter","_startOfRoot","H","Reset","_threads","Copy","elements","callStack","depth","currentElement","callstack","currentElementIndex","currentThread","canPop","Thread","Element","threads","threadCounter","jsonToken","threadIndex","canPopThread","splice","elementIsEvaluateFromGame","type","currentPointer","evaluationStackHeightWhenPushed","functionStartInOutputStream","CanPop","pop","temporaryVariables","RetainListOriginsForAssignment","filter","callStackTrace","inExpressionEvaluation","previousPointer","cPath","idx","Warning","exp","temp","JObjectToDictionaryRuntimeObjs","previousContentObject","PointerAtPath","q","variableChangedEventCallbacks","_batchObservingVariableChanges","_defaultGlobalVariables","_changedVariables","Set","_globalVariables","_callStack","_listDefsOrigin","Proxy","$","batchObservingVariableChanges","variableChangedEvent","SetGlobal","GetRawVariableWithName","ValueAtVariablePointer","FindSingleItemListWithName","GetTemporaryVariableWithName","GetVariableWithName","ResolveVariablePointer","SetTemporaryVariable","add","GetContextIndexOfVariableNamed","K","seed","next","U","kInkSaveStateVersion","kMinCompatibleLoadVersion","_currentErrors","_currentWarnings","divertedPointer","_currentTurnIndex","storySeed","previousRandom","didSafeExit","_currentText","_currentTags","_outputStreamTextDirty","_outputStreamTagsDirty","story","_outputStream","OutputStreamDirty","_evaluationStack","_variablesState","_visitCounts","_turnIndices","Date","getTime","_currentChoices","GoToStart","ToJson","visitCounts","callstackDepth","outputStream","currentChoices","canContinue","generatedChoices","currentErrors","currentWarnings","variablesState","evaluationStack","turnIndices","currentTurnIndex","currentPathString","hasError","hasWarning","currentText","CleanOutputWhitespace","charAt","currentTags","mainContentContainer","CopyFrom","ThreadWithIndex","choiceThreads","callstackThreads","GetJsonToken","evalStack","currentDivertTarget","IntDictionaryToJObject","turnIdx","inkSaveVersion","inkFormatVersion","inkVersionCurrent","SetJsonToken","JObjectToIntDictionary","TrySplittingHeadTailWhitespace","PushToOutputStreamIndividual","TrimNewlinesFromOutputStream","RemoveExistingGlue","outputStreamEndsInNewline","outputStreamContainsContent","inStringEvaluation","TrimWhitespaceFromFunctionEnd","Pop","Push","PassArgumentsToEvaluationStack","PushEvaluationStack","PopEvaluationStack","PopCallStack","z","startTime","ElapsedMilliseconds","isFinite","inkVersionMinimumCompatible","_prevContainers","allowExternalFunctionFallbacks","_listDefinitions","_variableObservers","_hasValidatedExternals","_temporaryEvaluationContainer","_asyncContinueActive","_stateAtLastNewline","_recursiveContinueCount","_profiler","_mainContentContainer","_externals","inkVersion","listDefs","JTokenToListDefinitions","ResetState","_state","IfAsyncWeCant","state","ListDefinitionsToJToken","ObserveVariableChange","VariableStateDidChangeEvent","ResetGlobals","ResetErrors","ForceEnd","ChoosePath","ContinueInternal","SnapshotDefaultGlobals","ContinueAsync","asyncContinueComplete","ValidateExternalBindings","PreContinue","ResetOutput","Start","ContinueSingleStep","AddError","Stop","RestoreStateSnapshot","PostContinue","PreStep","Step","PostStep","TryFollowDefaultInvisibleChoice","PreSnapshot","CalculateNewlineOutputStateChange","OutputStateChange","ExtendedBeyondNewline","NewlineRemoved","StateSnapshot","PostSnapshot","NoChange","Continue","VisitContainer","PerformLogicAndFlowControl","ProcessChoice","ContextForVariableNamed","PushToOutputStream","NextContent","PushThread","IncrementVisitCountForContainer","RecordTurnIndexVisitToContainer","IsTruthy","VisitCountForContainer","ForkThread","CallExternalFunction","sourceName","PeekEvaluationStack","TryExitFunctionEvaluationFromGame","PopFromOutputStream","reverse","TurnsSinceForContainer","NextSequenceShuffleIndex","PopThread","ListWithSubRange","entries","Assign","TryGetDefaultVariableValue","ResetCallstack","SetChosenPath","VisitChangedContainersDueToDivert","KnotContainerWithName","trim","StartFunctionEvaluationFromGame","CompleteFunctionEvaluationFromGame","returned","output","BindExternalFunctionGeneral","TryCoerce","from","GlobalVariableExistsWithName","ObserveVariable","globalTags","TagsAtStartOfFlowContainerWithPathString","IncrementContentPointer","charCodeAt","currentDebugMetadata","endLineNumber","fileName","InkList","Story","parseTags","tags","tagsObj","forEach","item","match","_content2","_slicedToArray","firstChar","substr","getScene","atramentStory","cmdInstance","inkStory","$ink","scene","choices","run","assign","choice","id","AtramentStory","storyContent","_classCallCheck","$episode","$sceneId","updateEpisode","choiceId","ChooseChoiceIndex","isActive","episode","toJson","LoadJson","vState","vars","_this","ref","VisitCountAtPathString","_this$$ink","EvaluateFunction","InkCommands","commands_classCallCheck","commands","cmd","callback","rawText","storyObj","cmdArr","params","PubSub","pubsub_classCallCheck","handlers","eventList","event","subscribe","_toConsumableArray","handler","args","stub","Promise","Atrament","gameConfig","src_classCallCheck","game","subscribeAll","loadStory","loadGame","saveGame","error","inkObservers","inkFunctions","inkCommands","transcript","loadStoryFile","then","clearEpisode","slotId","_this2","gameState","publish","data","restoreState","getState","renderScene","_this3","resolve","chosen","catch","_this4","storyFile","outputFileContent","initEpisode","_ref","_ref2","src_slicedToArray","cb","_ref3","_ref4","fn","BindExternalFunction","fnList","obList","register"],"mappings":"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","file":"atrament.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Atrament\"] = factory();\n\telse\n\t\troot[\"Atrament\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).inkjs={})}(this,function(t){\"use strict\";class e{constructor(){if(this._components=[],this._componentsString=null,this._isRelative=!1,\"string\"==typeof arguments[0]){let t=arguments[0];this.componentsString=t}else if(arguments[0]instanceof e.Component&&arguments[1]instanceof e){let t=arguments[0],e=arguments[1];this._components.push(t),this._components=this._components.concat(e._components)}else if(arguments[0]instanceof Array){let t=arguments[0],e=!!arguments[1];this._components=this._components.concat(t),this._isRelative=e}}get isRelative(){return this._isRelative}get componentCount(){return this._components.length}get head(){return this._components.length>0?this._components[0]:null}get tail(){if(this._components.length>=2){let t=this._components.slice(1,this._components.length);return new e(t)}return e.self}get length(){return this._components.length}get lastComponent(){let t=this._components.length-1;return t>=0?this._components[t]:null}get containsNamedComponent(){for(let t=0,e=this._components.length;t<e;t++)if(!this._components[t].isIndex)return!0;return!1}static get self(){let t=new e;return t._isRelative=!0,t}GetComponent(t){return this._components[t]}PathByAppendingPath(t){let n=new e,i=0;for(let e=0;e<t._components.length&&t._components[e].isParent;++e)i++;for(let t=0;t<this._components.length-i;++t)n._components.push(this._components[t]);for(let e=i;e<t._components.length;++e)n._components.push(t._components[e]);return n}get componentsString(){return null==this._componentsString&&(this._componentsString=this._components.join(\".\"),this.isRelative&&(this._componentsString=\".\"+this._componentsString)),this._componentsString}set componentsString(t){if(this._components.length=0,this._componentsString=t,null==this._componentsString||\"\"==this._componentsString)return;\".\"==this._componentsString[0]&&(this._isRelative=!0,this._componentsString=this._componentsString.substring(1));let n=this._componentsString.split(\".\");for(let t of n)/^(\\-|\\+)?([0-9]+|Infinity)$/.test(t)?this._components.push(new e.Component(parseInt(t))):this._components.push(new e.Component(t))}toString(){return this.componentsString}Equals(t){if(null==t)return!1;if(t._components.length!=this._components.length)return!1;if(t.isRelative!=this.isRelative)return!1;for(let e=0,n=t._components.length;e<n;e++)if(!t._components[e].Equals(this._components[e]))return!1;return!0}PathByAppendingComponent(t){let n=new e;return n._components.push.apply(n._components,this._components),n._components.push(t),n}}var n,i,a;function r(t,e){return t instanceof e?h(t):null}function s(t,e){if(t instanceof e)return h(t);throw new Error(`${t} is not of type ${e}`)}function l(t){if(\"number\"==typeof t)return t;throw new Error(`${t} is not a number`)}function o(t){return t.hasValidName&&t.name?t:null}function u(t){return void 0===t?null:t}function h(t,e){return t}e.parentId=\"^\",function(t){class e{constructor(t){this.index=-1,this.name=null,\"string\"==typeof t?this.name=t:this.index=t}get isIndex(){return this.index>=0}get isParent(){return this.name==t.parentId}static ToParent(){return new e(t.parentId)}toString(){return this.isIndex?this.index.toString():this.name}Equals(t){return null!=t&&t.isIndex==this.isIndex&&(this.isIndex?this.index==t.index:this.name==t.name)}}t.Component=e}(e||(e={})),function(t){function e(t,e){if(!t)throw void 0!==e&&console.warn(e),console.trace&&console.trace(),\"\"}t.AssertType=function(t,n,i){e(t instanceof n,i)},t.Assert=e}(n||(n={}));class c extends Error{}function d(t){throw new c(`${t} is null or undefined`)}class p{constructor(){this.parent=null,this._debugMetadata=null,this._path=null}get debugMetadata(){return null===this._debugMetadata&&this.parent?this.parent.debugMetadata:this._debugMetadata}set debugMetadata(t){this._debugMetadata=t}get ownDebugMetadata(){return this._debugMetadata}DebugLineNumberOfPath(t){if(null===t)return null;let e=this.rootContentContainer;if(e){let n=e.ContentAtPath(t).obj;if(n){let t=n.debugMetadata;if(null!==t)return t.startLineNumber}}return null}get path(){if(null==this._path)if(null==this.parent)this._path=new e;else{let t=[],n=this,i=r(n.parent,N);for(;null!==i;){let a=o(n);null!=a&&a.hasValidName?t.unshift(new e.Component(a.name)):t.unshift(new e.Component(i.content.indexOf(n))),n=i,i=r(i.parent,N)}this._path=new e(t)}return this._path}ResolvePath(t){if(null===t)return d(\"path\");if(t.isRelative){let e=r(this,N);return null===e&&(n.Assert(null!==this.parent,\"Can't resolve relative path because we don't have a parent\"),e=r(this.parent,N),n.Assert(null!==e,\"Expected parent to be a container\"),n.Assert(t.GetComponent(0).isParent),t=t.tail),null===e?d(\"nearestContainer\"):e.ContentAtPath(t)}{let e=this.rootContentContainer;return null===e?d(\"contentContainer\"):e.ContentAtPath(t)}}ConvertPathToRelative(t){let n=this.path,i=Math.min(t.length,n.length),a=-1;for(let e=0;e<i;++e){let i=n.GetComponent(e),r=t.GetComponent(e);if(!i.Equals(r))break;a=e}if(-1==a)return t;let r=n.componentCount-1-a,s=[];for(let t=0;t<r;++t)s.push(e.Component.ToParent());for(let e=a+1;e<t.componentCount;++e)s.push(t.GetComponent(e));return new e(s,!0)}CompactPathString(t){let e=null,n=null;if(t.isRelative)n=t.componentsString,e=this.path.PathByAppendingPath(t).componentsString;else{n=this.ConvertPathToRelative(t).componentsString,e=t.componentsString}return n.length<e.length?n:e}get rootContentContainer(){let t=this;for(;t.parent;)t=t.parent;return r(t,N)}Copy(){throw Error(\"Not Implemented: Doesn't support copying\")}SetChild(t,e,n){t[e]&&(t[e]=null),t[e]=n,t[e]&&(t[e].parent=this)}}class m{constructor(t){t=void 0!==t?t.toString():\"\",this.string=t}get Length(){return this.string.length}Append(t){null!==t&&(this.string+=t)}AppendLine(t){void 0!==t&&this.Append(t),this.string+=\"\\n\"}AppendFormat(t,...e){this.string+=t.replace(/{(\\d+)}/g,(t,n)=>void 0!==e[n]?e[n]:t)}toString(){return this.string}}class f{constructor(){if(this.originName=null,this.itemName=null,void 0!==arguments[1]){let t=arguments[0],e=arguments[1];this.originName=t,this.itemName=e}else if(arguments[0]){let t=arguments[0].toString().split(\".\");this.originName=t[0],this.itemName=t[1]}}static get Null(){return new f(null,null)}get isNull(){return null==this.originName&&null==this.itemName}get fullName(){return(null!==this.originName?this.originName:\"?\")+\".\"+this.itemName}toString(){return this.fullName}Equals(t){if(t instanceof f){let e=t;return e.itemName==this.itemName&&e.originName==this.originName}return!1}copy(){return new f(this.originName,this.itemName)}serialized(){return JSON.stringify({originName:this.originName,itemName:this.itemName})}static fromSerializedKey(t){let e=JSON.parse(t);if(!f.isLikeInkListItem(e))return f.Null;let n=e;return new f(n.originName,n.itemName)}static isLikeInkListItem(t){return\"object\"==typeof t&&(!(!t.hasOwnProperty(\"originName\")||!t.hasOwnProperty(\"itemName\"))&&((\"string\"==typeof t.originName||null===typeof t.originName)&&(\"string\"==typeof t.itemName||null===typeof t.itemName)))}}class g extends Map{constructor(){if(super((()=>arguments[0]instanceof g?arguments[0]:void 0)()),this.origins=null,this._originNames=[],arguments[0]instanceof g){let t=arguments[0];t._originNames&&(this._originNames=t._originNames.slice())}else if(\"string\"==typeof arguments[0]){let t=arguments[0],e=arguments[1];this.SetInitialOriginName(t);let n=e.listDefinitions.TryListGetDefinition(t,null);if(!n.exists)throw new Error(\"InkList origin could not be found in story when constructing new list: \"+t);this.origins=[n.result]}else if(\"object\"==typeof arguments[0]&&arguments[0].hasOwnProperty(\"Key\")&&arguments[0].hasOwnProperty(\"Value\")){let t=arguments[0];this.Add(t.Key,t.Value)}}AddItem(t){if(t instanceof f){let e=t;if(null==e.originName)return void this.AddItem(e.itemName);if(null===this.origins)return d(\"this.origins\");for(let t of this.origins)if(t.name==e.originName){let n=t.TryGetValueForItem(e,0);if(n.exists)return void this.Add(e,n.result);throw new Error(\"Could not add the item \"+e+\" to this list because it doesn't exist in the original list definition in ink.\")}throw new Error(\"Failed to add item to list because the item was from a new list definition that wasn't previously known to this list. Only items from previously known lists can be used, so that the int value can be found.\")}{let e=t,n=null;if(null===this.origins)return d(\"this.origins\");for(let t of this.origins){if(null===e)return d(\"itemName\");if(t.ContainsItemWithName(e)){if(null!=n)throw new Error(\"Could not add the item \"+e+\" to this list because it could come from either \"+t.name+\" or \"+n.name);n=t}}if(null==n)throw new Error(\"Could not add the item \"+e+\" to this list because it isn't known to any list definitions previously associated with this list.\");let i=new f(n.name,e),a=n.ValueForItem(i);this.Add(i,a)}}ContainsItemNamed(t){for(let[e,n]of this){if(f.fromSerializedKey(e).itemName==t)return!0}return!1}ContainsKey(t){return this.has(t.serialized())}Add(t,e){let n=t.serialized();if(this.has(n))throw new Error(`The Map already contains an entry for ${t}`);this.set(n,e)}Remove(t){return this.delete(t.serialized())}get Count(){return this.size}get originOfMaxItem(){if(null==this.origins)return null;let t=this.maxItem.Key.originName,e=null;return this.origins.every(n=>n.name!=t||(e=n,!1)),e}get originNames(){if(this.Count>0){null==this._originNames&&this.Count>0?this._originNames=[]:(this._originNames||(this._originNames=[]),this._originNames.length=0);for(let[t,e]of this){let e=f.fromSerializedKey(t);if(null===e.originName)return d(\"item.originName\");this._originNames.push(e.originName)}}return this._originNames}SetInitialOriginName(t){this._originNames=[t]}SetInitialOriginNames(t){this._originNames=null==t?null:t.slice()}get maxItem(){let t={Key:f.Null,Value:0};for(let[e,n]of this){let i=f.fromSerializedKey(e);(t.Key.isNull||n>t.Value)&&(t={Key:i,Value:n})}return t}get minItem(){let t={Key:f.Null,Value:0};for(let[e,n]of this){let i=f.fromSerializedKey(e);(t.Key.isNull||n<t.Value)&&(t={Key:i,Value:n})}return t}get inverse(){let t=new g;if(null!=this.origins)for(let e of this.origins)for(let[n,i]of e.items){let e=f.fromSerializedKey(n);this.ContainsKey(e)||t.Add(e,i)}return t}get all(){let t=new g;if(null!=this.origins)for(let e of this.origins)for(let[n,i]of e.items){let e=f.fromSerializedKey(n);t.set(e.serialized(),i)}return t}Union(t){let e=new g(this);for(let[n,i]of t)e.set(n,i);return e}Intersect(t){let e=new g;for(let[n,i]of this)t.has(n)&&e.set(n,i);return e}Without(t){let e=new g(this);for(let[n,i]of t)e.delete(n);return e}Contains(t){for(let[e,n]of t)if(!this.has(e))return!1;return!0}GreaterThan(t){return 0!=this.Count&&(0==t.Count||this.minItem.Value>t.maxItem.Value)}GreaterThanOrEquals(t){return 0!=this.Count&&(0==t.Count||this.minItem.Value>=t.minItem.Value&&this.maxItem.Value>=t.maxItem.Value)}LessThan(t){return 0!=t.Count&&(0==this.Count||this.maxItem.Value<t.minItem.Value)}LessThanOrEquals(t){return 0!=t.Count&&(0==this.Count||this.maxItem.Value<=t.maxItem.Value&&this.minItem.Value<=t.minItem.Value)}MaxAsList(){return this.Count>0?new g(this.maxItem):new g}MinAsList(){return this.Count>0?new g(this.minItem):new g}ListWithSubRange(t,e){if(0==this.Count)return new g;let n=this.orderedItems,i=0,a=Number.MAX_SAFE_INTEGER;Number.isInteger(t)?i=t:t instanceof g&&t.Count>0&&(i=t.minItem.Value),Number.isInteger(e)?a=e:t instanceof g&&t.Count>0&&(a=e.maxItem.Value);let r=new g;r.SetInitialOriginNames(this.originNames);for(let t of n)t.Value>=i&&t.Value<=a&&r.Add(t.Key,t.Value);return r}Equals(t){if(t instanceof g==!1)return!1;if(t.Count!=this.Count)return!1;for(let[e,n]of this)if(!t.has(e))return!1;return!0}get orderedItems(){let t=new Array;for(let[e,n]of this){let i=f.fromSerializedKey(e);t.push({Key:i,Value:n})}return t.sort((t,e)=>null===t.Key.originName?d(\"x.Key.originName\"):null===e.Key.originName?d(\"y.Key.originName\"):t.Value==e.Value?t.Key.originName.localeCompare(e.Key.originName):t.Value<e.Value?-1:t.Value>e.Value?1:0),t}toString(){let t=this.orderedItems,e=new m;for(let n=0;n<t.length;n++){n>0&&e.Append(\", \");let i=t[n].Key;if(null===i.itemName)return d(\"item.itemName\");e.Append(i.itemName)}return e.toString()}valueOf(){return NaN}}class C extends Error{constructor(t){super(t),this.useEndLineNumber=!1,this.message=t,this.name=\"StoryException\"}}function v(t,e,n){if(null===t)return{result:n,exists:!1};let i=t.get(e);return i?{result:i,exists:!0}:{result:n,exists:!1}}class S extends p{static Create(t){if(\"boolean\"==typeof t){t=!!t?1:0}return Number.isInteger(Number(t))?new T(Number(t)):isNaN(t)?\"string\"==typeof t?new _(String(t)):t instanceof e?new w(s(t,e)):t instanceof g?new O(s(t,g)):null:new b(Number(t))}Copy(){return s(S.Create(this),p)}BadCastException(t){return new C(\"Can't cast \"+this.valueObject+\" from \"+this.valueType+\" to \"+t)}}class y extends S{constructor(t){super(),this.value=t}get valueObject(){return this.value}toString(){return null===this.value?d(\"Value.value\"):this.value.toString()}}class T extends y{constructor(t){super(t||0)}get isTruthy(){return 0!=this.value}get valueType(){return i.Int}Cast(t){if(null===this.value)return d(\"Value.value\");if(t==this.valueType)return this;if(t==i.Float)return new b(this.value);if(t==i.String)return new _(\"\"+this.value);throw this.BadCastException(t)}}class b extends y{constructor(t){super(t||0)}get isTruthy(){return 0!=this.value}get valueType(){return i.Float}Cast(t){if(null===this.value)return d(\"Value.value\");if(t==this.valueType)return this;if(t==i.Int)return new T(this.value);if(t==i.String)return new _(\"\"+this.value);throw this.BadCastException(t)}}class _ extends y{constructor(t){if(super(t||\"\"),this._isNewline=\"\\n\"==this.value,this._isInlineWhitespace=!0,null===this.value)return d(\"Value.value\");this.value.length>0&&this.value.split(\"\").every(t=>\" \"==t||\"\\t\"==t||(this._isInlineWhitespace=!1,!1))}get valueType(){return i.String}get isTruthy(){return null===this.value?d(\"Value.value\"):this.value.length>0}get isNewline(){return this._isNewline}get isInlineWhitespace(){return this._isInlineWhitespace}get isNonWhitespace(){return!this.isNewline&&!this.isInlineWhitespace}Cast(t){if(t==this.valueType)return this;if(t==i.Int){let e=function(t,e=0){let n=parseInt(t);return Number.isNaN(n)?{result:e,exists:!1}:{result:n,exists:!0}}(this.value);if(e.exists)return new T(e.result);throw this.BadCastException(t)}if(t==i.Float){let e=function(t,e=0){let n=parseFloat(t);return Number.isNaN(n)?{result:e,exists:!1}:{result:n,exists:!0}}(this.value);if(e.exists)return new b(e.result);throw this.BadCastException(t)}throw this.BadCastException(t)}}class w extends y{constructor(t){super(t)}get valueType(){return i.DivertTarget}get targetPath(){return null===this.value?d(\"Value.value\"):this.value}set targetPath(t){this.value=t}get isTruthy(){throw new Error(\"Shouldn't be checking the truthiness of a divert target\")}Cast(t){if(t==this.valueType)return this;throw this.BadCastException(t)}toString(){return\"DivertTargetValue(\"+this.targetPath+\")\"}}class E extends y{constructor(t,e=-1){super(t),this._contextIndex=e}get contextIndex(){return this._contextIndex}set contextIndex(t){this._contextIndex=t}get variableName(){return null===this.value?d(\"Value.value\"):this.value}set variableName(t){this.value=t}get valueType(){return i.VariablePointer}get isTruthy(){throw new Error(\"Shouldn't be checking the truthiness of a variable pointer\")}Cast(t){if(t==this.valueType)return this;throw this.BadCastException(t)}toString(){return\"VariablePointerValue(\"+this.variableName+\")\"}Copy(){return new E(this.variableName,this.contextIndex)}}class O extends y{get isTruthy(){return null===this.value?d(\"this.value\"):this.value.Count>0}get valueType(){return i.List}Cast(t){if(null===this.value)return d(\"Value.value\");if(t==i.Int){let t=this.value.maxItem;return t.Key.isNull?new T(0):new T(t.Value)}if(t==i.Float){let t=this.value.maxItem;return t.Key.isNull?new b(0):new b(t.Value)}if(t==i.String){let t=this.value.maxItem;return t.Key.isNull?new _(\"\"):new _(t.Key.toString())}if(t==this.valueType)return this;throw this.BadCastException(t)}constructor(t,e){super(null),t||e?t instanceof g?this.value=new g(t):t instanceof f&&\"number\"==typeof e&&(this.value=new g({Key:t,Value:e})):this.value=new g}static RetainListOriginsForAssignment(t,e){let n=r(t,O),i=r(e,O);return i&&null===i.value?d(\"newList.value\"):n&&null===n.value?d(\"oldList.value\"):void(n&&i&&0==i.value.Count&&i.value.SetInitialOriginNames(n.value.originNames))}}!function(t){t[t.Int=0]=\"Int\",t[t.Float=1]=\"Float\",t[t.List=2]=\"List\",t[t.String=3]=\"String\",t[t.DivertTarget=4]=\"DivertTarget\",t[t.VariablePointer=5]=\"VariablePointer\"}(i||(i={}));class x{constructor(){this.obj=null,this.approximate=!1}get correctObj(){return this.approximate?null:this.obj}get container(){return this.obj instanceof N?this.obj:null}copy(){let t=new x;return t.obj=this.obj,t.approximate=this.approximate,t}}class N extends p{constructor(){super(...arguments),this.name=\"\",this._content=[],this.namedContent=new Map,this.visitsShouldBeCounted=!1,this.turnIndexShouldBeCounted=!1,this.countingAtStartOnly=!1,this._pathToFirstLeafContent=null}get hasValidName(){return null!=this.name&&this.name.length>0}get content(){return this._content}set content(t){this.AddContent(t)}get namedOnlyContent(){let t=new Map;for(let[e,n]of this.namedContent){let i=s(n,p);t.set(e,i)}for(let e of this.content){let n=o(e);null!=n&&n.hasValidName&&t.delete(n.name)}return 0==t.size&&(t=null),t}set namedOnlyContent(t){let e=this.namedOnlyContent;if(null!=e)for(let[t,n]of e)this.namedContent.delete(t);if(null!=t)for(let[e,n]of t){let t=o(n);null!=t&&this.AddToNamedContentOnly(t)}}get countFlags(){let t=0;return this.visitsShouldBeCounted&&(t|=N.CountFlags.Visits),this.turnIndexShouldBeCounted&&(t|=N.CountFlags.Turns),this.countingAtStartOnly&&(t|=N.CountFlags.CountStartOnly),t==N.CountFlags.CountStartOnly&&(t=0),t}set countFlags(t){let e=t;(e&N.CountFlags.Visits)>0&&(this.visitsShouldBeCounted=!0),(e&N.CountFlags.Turns)>0&&(this.turnIndexShouldBeCounted=!0),(e&N.CountFlags.CountStartOnly)>0&&(this.countingAtStartOnly=!0)}get pathToFirstLeafContent(){return null==this._pathToFirstLeafContent&&(this._pathToFirstLeafContent=this.path.PathByAppendingPath(this.internalPathToFirstLeafContent)),this._pathToFirstLeafContent}get internalPathToFirstLeafContent(){let t=[],n=this;for(;n instanceof N;)n.content.length>0&&(t.push(new e.Component(0)),n=n.content[0]);return new e(t)}AddContent(t){if(t instanceof Array){let e=t;for(let t of e)this.AddContent(t)}else{let e=t;if(this._content.push(e),e.parent)throw new Error(\"content is already in \"+e.parent);e.parent=this,this.TryAddNamedContent(e)}}TryAddNamedContent(t){let e=o(t);null!=e&&e.hasValidName&&this.AddToNamedContentOnly(e)}AddToNamedContentOnly(t){n.AssertType(t,p,\"Can only add Runtime.Objects to a Runtime.Container\"),s(t,p).parent=this,this.namedContent.set(t.name,t)}ContentAtPath(t,e=0,n=-1){-1==n&&(n=t.length);let i=new x;i.approximate=!1;let a=this,s=this;for(let l=e;l<n;++l){let e=t.GetComponent(l);if(null==a){i.approximate=!0;break}let n=a.ContentWithPathComponent(e);if(null==n){i.approximate=!0;break}s=n,a=r(n,N)}return i.obj=s,i}InsertContent(t,e){if(this.content[e]=t,t.parent)throw new Error(\"content is already in \"+t.parent);t.parent=this,this.TryAddNamedContent(t)}AddContentsOfContainer(t){this.content=this.content.concat(t.content);for(let e of t.content)e.parent=this,this.TryAddNamedContent(e)}ContentWithPathComponent(t){if(t.isIndex)return t.index>=0&&t.index<this.content.length?this.content[t.index]:null;if(t.isParent)return this.parent;{if(null===t.name)return d(\"component.name\");let e=v(this.namedContent,t.name,null);return e.exists?s(e.result,p):null}}BuildStringOfHierarchy(){let t;if(0==arguments.length)return t=new m,this.BuildStringOfHierarchy(t,0,null),t.toString();t=arguments[0];let e=arguments[1],i=arguments[2];function a(){for(let n=0;n<4*e;++n)t.Append(\" \")}a(),t.Append(\"[\"),this.hasValidName&&t.AppendFormat(\" ({0})\",this.name),this==i&&t.Append(\"  <---\"),t.AppendLine(),e++;for(let n=0;n<this.content.length;++n){let r=this.content[n];if(r instanceof N){r.BuildStringOfHierarchy(t,e,i)}else a(),r instanceof _?(t.Append('\"'),t.Append(r.toString().replace(\"\\n\",\"\\\\n\")),t.Append('\"')):t.Append(r.toString());n!=this.content.length-1&&t.Append(\",\"),r instanceof N||r!=i||t.Append(\"  <---\"),t.AppendLine()}let r=new Map;for(let[t,e]of this.namedContent)this.content.indexOf(s(e,p))>=0||r.set(t,e);if(r.size>0){a(),t.AppendLine(\"-- named: --\");for(let[a,s]of r){n.AssertType(s,N,\"Can only print out named Containers\"),s.BuildStringOfHierarchy(t,e,i),t.AppendLine()}}e--,a(),t.Append(\"]\")}}!function(t){let e;!function(t){t[t.Visits=1]=\"Visits\",t[t.Turns=2]=\"Turns\",t[t.CountStartOnly=4]=\"CountStartOnly\"}(e=t.CountFlags||(t.CountFlags={}))}(N||(N={}));class P extends p{toString(){return\"Glue\"}}class A extends p{get commandType(){return this._commandType}constructor(t=A.CommandType.NotSet){super(),this._commandType=t}Copy(){return new A(this.commandType)}static EvalStart(){return new A(A.CommandType.EvalStart)}static EvalOutput(){return new A(A.CommandType.EvalOutput)}static EvalEnd(){return new A(A.CommandType.EvalEnd)}static Duplicate(){return new A(A.CommandType.Duplicate)}static PopEvaluatedValue(){return new A(A.CommandType.PopEvaluatedValue)}static PopFunction(){return new A(A.CommandType.PopFunction)}static PopTunnel(){return new A(A.CommandType.PopTunnel)}static BeginString(){return new A(A.CommandType.BeginString)}static EndString(){return new A(A.CommandType.EndString)}static NoOp(){return new A(A.CommandType.NoOp)}static ChoiceCount(){return new A(A.CommandType.ChoiceCount)}static Turns(){return new A(A.CommandType.Turns)}static TurnsSince(){return new A(A.CommandType.TurnsSince)}static ReadCount(){return new A(A.CommandType.ReadCount)}static Random(){return new A(A.CommandType.Random)}static SeedRandom(){return new A(A.CommandType.SeedRandom)}static VisitIndex(){return new A(A.CommandType.VisitIndex)}static SequenceShuffleIndex(){return new A(A.CommandType.SequenceShuffleIndex)}static StartThread(){return new A(A.CommandType.StartThread)}static Done(){return new A(A.CommandType.Done)}static End(){return new A(A.CommandType.End)}static ListFromInt(){return new A(A.CommandType.ListFromInt)}static ListRange(){return new A(A.CommandType.ListRange)}static ListRandom(){return new A(A.CommandType.ListRandom)}toString(){return this.commandType.toString()}}!function(t){let e;!function(t){t[t.NotSet=-1]=\"NotSet\",t[t.EvalStart=0]=\"EvalStart\",t[t.EvalOutput=1]=\"EvalOutput\",t[t.EvalEnd=2]=\"EvalEnd\",t[t.Duplicate=3]=\"Duplicate\",t[t.PopEvaluatedValue=4]=\"PopEvaluatedValue\",t[t.PopFunction=5]=\"PopFunction\",t[t.PopTunnel=6]=\"PopTunnel\",t[t.BeginString=7]=\"BeginString\",t[t.EndString=8]=\"EndString\",t[t.NoOp=9]=\"NoOp\",t[t.ChoiceCount=10]=\"ChoiceCount\",t[t.Turns=11]=\"Turns\",t[t.TurnsSince=12]=\"TurnsSince\",t[t.Random=13]=\"Random\",t[t.SeedRandom=14]=\"SeedRandom\",t[t.VisitIndex=15]=\"VisitIndex\",t[t.SequenceShuffleIndex=16]=\"SequenceShuffleIndex\",t[t.StartThread=17]=\"StartThread\",t[t.Done=18]=\"Done\",t[t.End=19]=\"End\",t[t.ListFromInt=20]=\"ListFromInt\",t[t.ListRange=21]=\"ListRange\",t[t.ListRandom=22]=\"ListRandom\",t[t.ReadCount=23]=\"ReadCount\",t[t.TOTAL_VALUES=24]=\"TOTAL_VALUES\"}(e=t.CommandType||(t.CommandType={}))}(A||(A={})),function(t){t[t.Tunnel=0]=\"Tunnel\",t[t.Function=1]=\"Function\",t[t.FunctionEvaluationFromGame=2]=\"FunctionEvaluationFromGame\"}(a||(a={}));class k{constructor(){this.container=null,this.index=-1,2===arguments.length&&(this.container=arguments[0],this.index=arguments[1])}Resolve(){return this.index<0?this.container:null==this.container?null:0==this.container.content.length?this.container:this.index>=this.container.content.length?null:this.container.content[this.index]}get isNull(){return null==this.container}get path(){return this.isNull?null:this.index>=0?this.container.path.PathByAppendingComponent(new e.Component(this.index)):this.container.path}toString(){return this.container?\"Ink Pointer -> \"+this.container.path.toString()+\" -- index \"+this.index:\"Ink Pointer (null)\"}copy(){return new k(this.container,this.index)}static StartOf(t){return new k(t,0)}static get Null(){return new k(null,-1)}}class I extends p{constructor(t){super(),this._targetPath=null,this._targetPointer=k.Null,this.variableDivertName=null,this.pushesToStack=!1,this.stackPushType=0,this.isExternal=!1,this.externalArgs=0,this.isConditional=!1,this.pushesToStack=!1,void 0!==t&&(this.pushesToStack=!0,this.stackPushType=t)}get targetPath(){if(null!=this._targetPath&&this._targetPath.isRelative){let t=this.targetPointer.Resolve();t&&(this._targetPath=t.path)}return this._targetPath}set targetPath(t){this._targetPath=t,this._targetPointer=k.Null}get targetPointer(){if(this._targetPointer.isNull){let t=this.ResolvePath(this._targetPath).obj;if(null===this._targetPath)return d(\"this._targetPath\");if(null===this._targetPath.lastComponent)return d(\"this._targetPath.lastComponent\");if(this._targetPath.lastComponent.isIndex){if(null===t)return d(\"targetObj\");this._targetPointer.container=t.parent instanceof N?t.parent:null,this._targetPointer.index=this._targetPath.lastComponent.index}else this._targetPointer=k.StartOf(t instanceof N?t:null)}return this._targetPointer.copy()}get targetPathString(){return null==this.targetPath?null:this.CompactPathString(this.targetPath)}set targetPathString(t){this.targetPath=null==t?null:new e(t)}get hasVariableTarget(){return null!=this.variableDivertName}Equals(t){let e=t;return e instanceof I&&this.hasVariableTarget==e.hasVariableTarget&&(this.hasVariableTarget?this.variableDivertName==e.variableDivertName:null===this.targetPath?d(\"this.targetPath\"):this.targetPath.Equals(e.targetPath))}toString(){if(this.hasVariableTarget)return\"Divert(variable: \"+this.variableDivertName+\")\";if(null==this.targetPath)return\"Divert(null)\";{let t=new m,e=this.targetPath.toString();return t.Append(\"Divert\"),this.isConditional&&t.Append(\"?\"),this.pushesToStack&&(this.stackPushType==a.Function?t.Append(\" function\"):t.Append(\" tunnel\")),t.Append(\" -> \"),t.Append(this.targetPathString),t.Append(\" (\"),t.Append(e),t.Append(\")\"),t.toString()}}}class F extends p{constructor(t=!0){super(),this._pathOnChoice=null,this.hasCondition=!1,this.hasStartContent=!1,this.hasChoiceOnlyContent=!1,this.isInvisibleDefault=!1,this.onceOnly=!0,this.onceOnly=t}get pathOnChoice(){if(null!=this._pathOnChoice&&this._pathOnChoice.isRelative){let t=this.choiceTarget;t&&(this._pathOnChoice=t.path)}return this._pathOnChoice}set pathOnChoice(t){this._pathOnChoice=t}get choiceTarget(){return null===this._pathOnChoice?d(\"ChoicePoint._pathOnChoice\"):this.ResolvePath(this._pathOnChoice).container}get pathStringOnChoice(){return null===this.pathOnChoice?d(\"ChoicePoint.pathOnChoice\"):this.CompactPathString(this.pathOnChoice)}set pathStringOnChoice(t){this.pathOnChoice=new e(t)}get flags(){let t=0;return this.hasCondition&&(t|=1),this.hasStartContent&&(t|=2),this.hasChoiceOnlyContent&&(t|=4),this.isInvisibleDefault&&(t|=8),this.onceOnly&&(t|=16),t}set flags(t){this.hasCondition=(1&t)>0,this.hasStartContent=(2&t)>0,this.hasChoiceOnlyContent=(4&t)>0,this.isInvisibleDefault=(8&t)>0,this.onceOnly=(16&t)>0}toString(){if(null===this.pathOnChoice)return d(\"ChoicePoint.pathOnChoice\");return\"Choice: -> \"+this.pathOnChoice.toString()}}class V extends p{constructor(t=null){super(),this.pathForCount=null,this.name=t}get containerForCount(){return null===this.pathForCount?null:this.ResolvePath(this.pathForCount).container}get pathStringForCount(){return null===this.pathForCount?null:this.CompactPathString(this.pathForCount)}set pathStringForCount(t){this.pathForCount=null===t?null:new e(t)}toString(){if(null!=this.name)return\"var(\"+this.name+\")\";return\"read_count(\"+this.pathStringForCount+\")\"}}class L extends p{constructor(t,e){super(),this.variableName=t||null,this.isNewDeclaration=!!e,this.isGlobal=!1}toString(){return\"VarAssign to \"+this.variableName}}class R extends p{}class D extends p{constructor(){if(super(),this._name=null,this._numberOfParameters=0,this._prototype=null,this._isPrototype=!1,this._operationFuncs=null,0===arguments.length)D.GenerateNativeFunctionsIfNecessary();else if(1===arguments.length){let t=arguments[0];D.GenerateNativeFunctionsIfNecessary(),this.name=t}else if(2===arguments.length){let t=arguments[0],e=arguments[1];this._isPrototype=!0,this.name=t,this.numberOfParameters=e}}static CallWithName(t){return new D(t)}static CallExistsWithName(t){return this.GenerateNativeFunctionsIfNecessary(),this._nativeFunctions.get(t)}get name(){return null===this._name?d(\"NativeFunctionCall._name\"):this._name}set name(t){this._name=t,this._isPrototype||(null===D._nativeFunctions?d(\"NativeFunctionCall._nativeFunctions\"):this._prototype=D._nativeFunctions.get(this._name)||null)}get numberOfParameters(){return this._prototype?this._prototype.numberOfParameters:this._numberOfParameters}set numberOfParameters(t){this._numberOfParameters=t}Call(t){if(this._prototype)return this._prototype.Call(t);if(this.numberOfParameters!=t.length)throw new Error(\"Unexpected number of parameters\");let e=!1;for(let n of t){if(n instanceof R)throw new C('Attempting to perform operation on a void value. Did you forget to \"return\" a value from a function you called here?');n instanceof O&&(e=!0)}if(2==t.length&&e)return this.CallBinaryListOperation(t);let n=this.CoerceValuesToSingleType(t),a=n[0].valueType;return a==i.Int?this.CallType(n):a==i.Float?this.CallType(n):a==i.String?this.CallType(n):a==i.DivertTarget?this.CallType(n):a==i.List?this.CallType(n):null}CallType(t){let e=s(t[0],y),n=e.valueType,i=e,a=t.length;if(2==a||1==a){if(null===this._operationFuncs)return d(\"NativeFunctionCall._operationFuncs\");let e=this._operationFuncs.get(n);if(!e)throw new C(\"Cannot perform operation \"+this.name+\" on \"+n);if(2==a){let n=s(t[1],y),a=e;if(null===i.value||null===n.value)return d(\"NativeFunctionCall.Call BinaryOp values\");let r=a(i.value,n.value);return y.Create(r)}{let t=e;if(null===i.value)return d(\"NativeFunctionCall.Call UnaryOp value\");let n=t(i.value);return y.Create(n)}}throw new Error(\"Unexpected number of parameters to NativeFunctionCall: \"+t.length)}CallBinaryListOperation(t){if((\"+\"==this.name||\"-\"==this.name)&&t[0]instanceof O&&t[1]instanceof T)return this.CallListIncrementOperation(t);let e=s(t[0],y),n=s(t[1],y);if(!(\"&&\"!=this.name&&\"||\"!=this.name||e.valueType==i.List&&n.valueType==i.List)){if(null===this._operationFuncs)return d(\"NativeFunctionCall._operationFuncs\");let t=this._operationFuncs.get(i.Int);if(null===t)return d(\"NativeFunctionCall.CallBinaryListOperation op\");let a=t(e.isTruthy?1:0,n.isTruthy?1:0);return new T(a)}if(e.valueType==i.List&&n.valueType==i.List)return this.CallType([e,n]);throw new C(\"Can not call use \"+this.name+\" operation on \"+e.valueType+\" and \"+n.valueType)}CallListIncrementOperation(t){let e=s(t[0],O),n=s(t[1],T),a=new g;if(null===e.value)return d(\"NativeFunctionCall.CallListIncrementOperation listVal.value\");for(let[t,r]of e.value){let s=f.fromSerializedKey(t);if(null===this._operationFuncs)return d(\"NativeFunctionCall._operationFuncs\");let l=this._operationFuncs.get(i.Int);if(null===n.value)return d(\"NativeFunctionCall.CallListIncrementOperation intVal.value\");let o=l(r,n.value),u=null;if(null===e.value.origins)return d(\"NativeFunctionCall.CallListIncrementOperation listVal.value.origins\");for(let t of e.value.origins)if(t.name==s.originName){u=t;break}if(null!=u){let t=u.TryGetItemWithValue(o,f.Null);t.exists&&a.Add(t.result,o)}}return new O(a)}CoerceValuesToSingleType(t){let e=i.Int,n=null;for(let a of t){let t=s(a,y);t.valueType>e&&(e=t.valueType),t.valueType==i.List&&(n=r(t,O))}let a=[];if(i[e]==i[i.List])for(let e of t){let t=s(e,y);if(t.valueType==i.List)a.push(t);else{if(t.valueType!=i.Int)throw new C(\"Cannot mix Lists and \"+t.valueType+\" values in this operation\");{let e=parseInt(t.valueObject);if(null===(n=s(n,O)).value)return d(\"NativeFunctionCall.CoerceValuesToSingleType specialCaseList.value\");let i=n.value.originOfMaxItem;if(null===i)return d(\"NativeFunctionCall.CoerceValuesToSingleType list\");let r=i.TryGetItemWithValue(e,f.Null);if(!r.exists)throw new C(\"Could not find List item with the value \"+e+\" in \"+i.name);{let t=new O(r.result,e);a.push(t)}}}}else for(let n of t){let t=s(n,y).Cast(e);a.push(t)}return a}static Identity(t){return t}static GenerateNativeFunctionsIfNecessary(){if(null==this._nativeFunctions){this._nativeFunctions=new Map,this.AddIntBinaryOp(this.Add,(t,e)=>t+e),this.AddIntBinaryOp(this.Subtract,(t,e)=>t-e),this.AddIntBinaryOp(this.Multiply,(t,e)=>t*e),this.AddIntBinaryOp(this.Divide,(t,e)=>Math.round(t/e)),this.AddIntBinaryOp(this.Mod,(t,e)=>t%e),this.AddIntUnaryOp(this.Negate,t=>-t),this.AddIntBinaryOp(this.Equal,(t,e)=>t==e?1:0),this.AddIntBinaryOp(this.Greater,(t,e)=>t>e?1:0),this.AddIntBinaryOp(this.Less,(t,e)=>t<e?1:0),this.AddIntBinaryOp(this.GreaterThanOrEquals,(t,e)=>t>=e?1:0),this.AddIntBinaryOp(this.LessThanOrEquals,(t,e)=>t<=e?1:0),this.AddIntBinaryOp(this.NotEquals,(t,e)=>t!=e?1:0),this.AddIntUnaryOp(this.Not,t=>0==t?1:0),this.AddIntBinaryOp(this.And,(t,e)=>0!=t&&0!=e?1:0),this.AddIntBinaryOp(this.Or,(t,e)=>0!=t||0!=e?1:0),this.AddIntBinaryOp(this.Max,(t,e)=>Math.max(t,e)),this.AddIntBinaryOp(this.Min,(t,e)=>Math.min(t,e)),this.AddIntBinaryOp(this.Pow,(t,e)=>Math.pow(t,e)),this.AddIntUnaryOp(this.Floor,D.Identity),this.AddIntUnaryOp(this.Ceiling,D.Identity),this.AddIntUnaryOp(this.Int,D.Identity),this.AddIntUnaryOp(this.Float,t=>t),this.AddFloatBinaryOp(this.Add,(t,e)=>t+e),this.AddFloatBinaryOp(this.Subtract,(t,e)=>t-e),this.AddFloatBinaryOp(this.Multiply,(t,e)=>t*e),this.AddFloatBinaryOp(this.Divide,(t,e)=>t/e),this.AddFloatBinaryOp(this.Mod,(t,e)=>t%e),this.AddFloatUnaryOp(this.Negate,t=>-t),this.AddFloatBinaryOp(this.Equal,(t,e)=>t==e?1:0),this.AddFloatBinaryOp(this.Greater,(t,e)=>t>e?1:0),this.AddFloatBinaryOp(this.Less,(t,e)=>t<e?1:0),this.AddFloatBinaryOp(this.GreaterThanOrEquals,(t,e)=>t>=e?1:0),this.AddFloatBinaryOp(this.LessThanOrEquals,(t,e)=>t<=e?1:0),this.AddFloatBinaryOp(this.NotEquals,(t,e)=>t!=e?1:0),this.AddFloatUnaryOp(this.Not,t=>0==t?1:0),this.AddFloatBinaryOp(this.And,(t,e)=>0!=t&&0!=e?1:0),this.AddFloatBinaryOp(this.Or,(t,e)=>0!=t||0!=e?1:0),this.AddFloatBinaryOp(this.Max,(t,e)=>Math.max(t,e)),this.AddFloatBinaryOp(this.Min,(t,e)=>Math.min(t,e)),this.AddFloatBinaryOp(this.Pow,(t,e)=>Math.pow(t,e)),this.AddFloatUnaryOp(this.Floor,t=>Math.floor(t)),this.AddFloatUnaryOp(this.Ceiling,t=>Math.ceil(t)),this.AddFloatUnaryOp(this.Int,t=>Math.floor(t)),this.AddFloatUnaryOp(this.Float,D.Identity),this.AddStringBinaryOp(this.Add,(t,e)=>t+e),this.AddStringBinaryOp(this.Equal,(t,e)=>t===e?1:0),this.AddStringBinaryOp(this.NotEquals,(t,e)=>t!==e?1:0),this.AddStringBinaryOp(this.Has,(t,e)=>t.includes(e)?1:0),this.AddStringBinaryOp(this.Hasnt,(t,e)=>t.includes(e)?0:1),this.AddListBinaryOp(this.Add,(t,e)=>t.Union(e)),this.AddListBinaryOp(this.Subtract,(t,e)=>t.Without(e)),this.AddListBinaryOp(this.Has,(t,e)=>t.Contains(e)?1:0),this.AddListBinaryOp(this.Hasnt,(t,e)=>t.Contains(e)?0:1),this.AddListBinaryOp(this.Intersect,(t,e)=>t.Intersect(e)),this.AddListBinaryOp(this.Equal,(t,e)=>t.Equals(e)?1:0),this.AddListBinaryOp(this.Greater,(t,e)=>t.GreaterThan(e)?1:0),this.AddListBinaryOp(this.Less,(t,e)=>t.LessThan(e)?1:0),this.AddListBinaryOp(this.GreaterThanOrEquals,(t,e)=>t.GreaterThanOrEquals(e)?1:0),this.AddListBinaryOp(this.LessThanOrEquals,(t,e)=>t.LessThanOrEquals(e)?1:0),this.AddListBinaryOp(this.NotEquals,(t,e)=>t.Equals(e)?0:1),this.AddListBinaryOp(this.And,(t,e)=>t.Count>0&&e.Count>0?1:0),this.AddListBinaryOp(this.Or,(t,e)=>t.Count>0||e.Count>0?1:0),this.AddListUnaryOp(this.Not,t=>0==t.Count?1:0),this.AddListUnaryOp(this.Invert,t=>t.inverse),this.AddListUnaryOp(this.All,t=>t.all),this.AddListUnaryOp(this.ListMin,t=>t.MinAsList()),this.AddListUnaryOp(this.ListMax,t=>t.MaxAsList()),this.AddListUnaryOp(this.Count,t=>t.Count),this.AddListUnaryOp(this.ValueOfList,t=>t.maxItem.Value);let t=(t,e)=>t.Equals(e)?1:0,e=(t,e)=>t.Equals(e)?0:1;this.AddOpToNativeFunc(this.Equal,2,i.DivertTarget,t),this.AddOpToNativeFunc(this.NotEquals,2,i.DivertTarget,e)}}AddOpFuncForType(t,e){null==this._operationFuncs&&(this._operationFuncs=new Map),this._operationFuncs.set(t,e)}static AddOpToNativeFunc(t,e,n,i){if(null===this._nativeFunctions)return d(\"NativeFunctionCall._nativeFunctions\");let a=this._nativeFunctions.get(t);a||(a=new D(t,e),this._nativeFunctions.set(t,a)),a.AddOpFuncForType(n,i)}static AddIntBinaryOp(t,e){this.AddOpToNativeFunc(t,2,i.Int,e)}static AddIntUnaryOp(t,e){this.AddOpToNativeFunc(t,1,i.Int,e)}static AddFloatBinaryOp(t,e){this.AddOpToNativeFunc(t,2,i.Float,e)}static AddFloatUnaryOp(t,e){this.AddOpToNativeFunc(t,1,i.Float,e)}static AddStringBinaryOp(t,e){this.AddOpToNativeFunc(t,2,i.String,e)}static AddListBinaryOp(t,e){this.AddOpToNativeFunc(t,2,i.List,e)}static AddListUnaryOp(t,e){this.AddOpToNativeFunc(t,1,i.List,e)}toString(){return'Native \"'+this.name+'\"'}}D.Add=\"+\",D.Subtract=\"-\",D.Divide=\"/\",D.Multiply=\"*\",D.Mod=\"%\",D.Negate=\"_\",D.Equal=\"==\",D.Greater=\">\",D.Less=\"<\",D.GreaterThanOrEquals=\">=\",D.LessThanOrEquals=\"<=\",D.NotEquals=\"!=\",D.Not=\"!\",D.And=\"&&\",D.Or=\"||\",D.Min=\"MIN\",D.Max=\"MAX\",D.Pow=\"POW\",D.Floor=\"FLOOR\",D.Ceiling=\"CEILING\",D.Int=\"INT\",D.Float=\"FLOAT\",D.Has=\"?\",D.Hasnt=\"!?\",D.Intersect=\"^\",D.ListMin=\"LIST_MIN\",D.ListMax=\"LIST_MAX\",D.All=\"LIST_ALL\",D.Count=\"LIST_COUNT\",D.ValueOfList=\"LIST_VALUE\",D.Invert=\"LIST_INVERT\",D._nativeFunctions=null;class M extends p{constructor(t){super(),this.text=t.toString()||\"\"}toString(){return\"# \"+this.text}}class G extends p{constructor(){super(...arguments),this.text=\"\",this.index=0,this.threadAtGeneration=null,this.sourcePath=\"\",this.targetPath=null,this.isInvisibleDefault=!1,this.originalThreadIndex=0}get pathStringOnChoice(){return null===this.targetPath?d(\"Choice.targetPath\"):this.targetPath.toString()}set pathStringOnChoice(t){this.targetPath=new e(t)}}class B{constructor(t,e){this._name=t||\"\",this._items=null,this._itemNameToValues=e||new Map}get name(){return this._name}get items(){if(null==this._items){this._items=new Map;for(let[t,e]of this._itemNameToValues){let n=new f(this.name,t);this._items.set(n.serialized(),e)}}return this._items}ValueForItem(t){if(!t.itemName)return 0;let e=this._itemNameToValues.get(t.itemName);return void 0!==e?e:0}ContainsItem(t){return!!t.itemName&&(t.originName==this.name&&this._itemNameToValues.has(t.itemName))}ContainsItemWithName(t){return this._itemNameToValues.has(t)}TryGetItemWithValue(t,e){for(let[e,n]of this._itemNameToValues)if(n==t)return{result:new f(this.name,e),exists:!0};return{result:f.Null,exists:!1}}TryGetValueForItem(t,e){if(!t.itemName)return{result:0,exists:!1};let n=this._itemNameToValues.get(t.itemName);return n?{result:n,exists:!0}:{result:0,exists:!1}}}class W{constructor(t){this._lists=new Map,this._allUnambiguousListValueCache=new Map;for(let e of t){this._lists.set(e.name,e);for(let[t,n]of e.items){let e=f.fromSerializedKey(t),i=new O(e,n);if(!e.itemName)throw new Error(\"item.itemName is null or undefined.\");this._allUnambiguousListValueCache.set(e.itemName,i),this._allUnambiguousListValueCache.set(e.fullName,i)}}}get lists(){let t=[];for(let[e,n]of this._lists)t.push(n);return t}TryListGetDefinition(t,e){if(null===t)return{result:e,exists:!1};let n=this._lists.get(t);return n?{result:n,exists:!0}:{result:e,exists:!1}}FindSingleItemListWithName(t){if(null===t)return d(\"name\");let e=this._allUnambiguousListValueCache.get(t);return void 0!==e?e:null}}class j{static ListToJArray(t){let e=[];for(let n of t)e.push(this.RuntimeObjectToJToken(n));return e}static JArrayToRuntimeObjList(t,e=!1){let n=t.length;e&&n--;let i=[];for(let e=0;e<n;e++){let n=t[e],a=this.JTokenToRuntimeObject(n);if(null===a)return d(\"runtimeObj\");i.push(a)}return i}static DictionaryRuntimeObjsToJObject(t){let e={};for(let[n,i]of t){let t=r(i,p);null!=t&&(e[n]=this.RuntimeObjectToJToken(t))}return e}static JObjectToDictionaryRuntimeObjs(t){let e=new Map;for(let n in t)if(t.hasOwnProperty(n)){let i=this.JTokenToRuntimeObject(t[n]);if(null===i)return d(\"inkObject\");e.set(n,i)}return e}static JObjectToIntDictionary(t){let e=new Map;for(let n in t)t.hasOwnProperty(n)&&e.set(n,parseInt(t[n]));return e}static IntDictionaryToJObject(t){let e={};for(let[n,i]of t)e[n]=l(i);return e}static JTokenToRuntimeObject(t){if(\"number\"==typeof t&&!isNaN(t))return y.Create(t);if(\"string\"==typeof t){let e=t.toString(),n=e[0];if(\"^\"==n)return new _(e.substring(1));if(\"\\n\"==n&&1==e.length)return new _(\"\\n\");if(\"<>\"==e)return new P;for(let t=0;t<j._controlCommandNames.length;++t){if(e==j._controlCommandNames[t])return new A(t)}if(\"L^\"==e&&(e=\"^\"),D.CallExistsWithName(e))return D.CallWithName(e);if(\"->->\"==e)return A.PopTunnel();if(\"~ret\"==e)return A.PopFunction();if(\"void\"==e)return new R}if(\"object\"==typeof t&&!Array.isArray(t)){let n,i=t;if(i[\"^->\"])return n=i[\"^->\"],new w(new e(n.toString()));if(i[\"^var\"]){n=i[\"^var\"];let t=new E(n.toString());return\"ci\"in i&&(n=i.ci,t.contextIndex=parseInt(n)),t}let r=!1,s=!1,l=a.Function,o=!1;if((n=i[\"->\"])?r=!0:(n=i[\"f()\"])?(r=!0,s=!0,l=a.Function):(n=i[\"->t->\"])?(r=!0,s=!0,l=a.Tunnel):(n=i[\"x()\"])&&(r=!0,o=!0,s=!1,l=a.Function),r){let t=new I;t.pushesToStack=s,t.stackPushType=l,t.isExternal=o;let e=n.toString();return(n=i.var)?t.variableDivertName=e:t.targetPathString=e,t.isConditional=!!i.c,o&&(n=i.exArgs)&&(t.externalArgs=parseInt(n)),t}if(n=i[\"*\"]){let t=new F;return t.pathStringOnChoice=n.toString(),(n=i.flg)&&(t.flags=parseInt(n)),t}if(n=i[\"VAR?\"])return new V(n.toString());if(n=i[\"CNT?\"]){let t=new V;return t.pathStringForCount=n.toString(),t}let u=!1,h=!1;if((n=i[\"VAR=\"])?(u=!0,h=!0):(n=i[\"temp=\"])&&(u=!0,h=!1),u){let t=n.toString(),e=!i.re,a=new L(t,e);return a.isGlobal=h,a}if(void 0!==i[\"#\"])return n=i[\"#\"],new M(n.toString());if(n=i.list){let t=n,e=new g;if(n=i.origins){let t=n;e.SetInitialOriginNames(t)}for(let n in t)if(t.hasOwnProperty(n)){let i=t[n],a=new f(n),r=parseInt(i);e.Add(a,r)}return new O(e)}if(null!=i.originalChoicePath)return this.JObjectToChoice(i)}if(Array.isArray(t))return this.JArrayToContainer(t);if(null==t)return null;throw new Error(\"Failed to convert token to runtime object: \"+JSON.stringify(t))}static RuntimeObjectToJToken(t){let e=r(t,N);if(e)return this.ContainerToJArray(e);let n=r(t,I);if(n){let t,e=\"->\";n.isExternal?e=\"x()\":n.pushesToStack&&(n.stackPushType==a.Function?e=\"f()\":n.stackPushType==a.Tunnel&&(e=\"->t->\")),t=n.hasVariableTarget?n.variableDivertName:n.targetPathString;let i={};return i[e]=t,n.hasVariableTarget&&(i.var=!0),n.isConditional&&(i.c=!0),n.externalArgs>0&&(i.exArgs=n.externalArgs),i}let i=r(t,F);if(i){let t={};return t[\"*\"]=i.pathStringOnChoice,t.flg=i.flags,t}let s=r(t,T);if(s)return s.value;let l=r(t,b);if(l)return l.value;let o=r(t,_);if(o)return o.isNewline?\"\\n\":\"^\"+o.value;let u=r(t,O);if(u)return this.InkListToJObject(u);let h=r(t,w);if(h){let t={};return null===h.value?d(\"divTargetVal.value\"):(t[\"^->\"]=h.value.componentsString,t)}let c=r(t,E);if(c){let t={};return t[\"^var\"]=c.value,t.ci=c.contextIndex,t}if(r(t,P))return\"<>\";let p=r(t,A);if(p)return j._controlCommandNames[p.commandType];let m=r(t,D);if(m){let t=m.name;return\"^\"==t&&(t=\"L^\"),t}let f=r(t,V);if(f){let t={},e=f.pathStringForCount;return null!=e?t[\"CNT?\"]=e:t[\"VAR?\"]=f.name,t}let g=r(t,L);if(g){let t={};return t[g.isGlobal?\"VAR=\":\"temp=\"]=g.variableName,g.isNewDeclaration||(t.re=!0),t}if(r(t,R))return\"void\";let C=r(t,M);if(C){let t={};return t[\"#\"]=C.text,t}let v=r(t,G);if(v)return this.ChoiceToJObject(v);throw new Error(\"Failed to convert runtime object to Json token: \"+t)}static ContainerToJArray(t){let e=this.ListToJArray(t.content),n=t.namedOnlyContent,i=t.countFlags;if(null!=n&&n.size>0||i>0||null!=t.name){let a;if(null!=n){a=this.DictionaryRuntimeObjsToJObject(n);for(let t in a)if(a.hasOwnProperty(t)){let e=a[t];if(null!=e){let t=e[e.length-1];null!=t&&(delete t[\"#n\"],0==Object.keys(t).length&&(e[e.length-1]=null))}}}else a={};i>0&&(a[\"#f\"]=i),null!=t.name&&(a[\"#n\"]=t.name),e.push(a)}else e.push(null);return e}static JArrayToContainer(t){let e=new N;e.content=this.JArrayToRuntimeObjList(t,!0);let n=t[t.length-1];if(null!=n){let t=new Map;for(let i in n)if(\"#f\"==i)e.countFlags=parseInt(n[i]);else if(\"#n\"==i)e.name=n[i].toString();else{let e=this.JTokenToRuntimeObject(n[i]),a=r(e,N);a&&(a.name=i),t.set(i,e)}e.namedOnlyContent=t}return e}static JObjectToChoice(t){let e=new G;return e.text=t.text.toString(),e.index=parseInt(t.index),e.sourcePath=t.originalChoicePath.toString(),e.originalThreadIndex=parseInt(t.originalThreadIndex),e.pathStringOnChoice=t.targetPath.toString(),e}static ChoiceToJObject(t){let e={};return e.text=t.text,e.index=t.index,e.originalChoicePath=t.sourcePath,e.originalThreadIndex=t.originalThreadIndex,e.targetPath=t.pathStringOnChoice,e}static InkListToJObject(t){let e=t.value;if(null===e)return d(\"rawList\");let n={},i={};for(let[t,n]of e){i[f.fromSerializedKey(t).toString()]=n}return n.list=i,0==e.Count&&null!=e.originNames&&e.originNames.length>0&&(n.origins=e.originNames),n}static ListDefinitionsToJToken(t){let e={};for(let n of t.lists){let t={};for(let[e,i]of n.items){let n=f.fromSerializedKey(e);if(null===n.itemName)return d(\"item.itemName\");t[n.itemName]=i}e[n.name]=t}return e}static JTokenToListDefinitions(t){let e=t,n=[];for(let t in e)if(e.hasOwnProperty(t)){let i=t.toString(),a=e[t],r=new Map;for(let n in a)if(e.hasOwnProperty(t)){let t=a[n];r.set(n,parseInt(t))}let s=new B(i,r);n.push(s)}return new W(n)}}j._controlCommandNames=(()=>{let t=[];t[A.CommandType.EvalStart]=\"ev\",t[A.CommandType.EvalOutput]=\"out\",t[A.CommandType.EvalEnd]=\"/ev\",t[A.CommandType.Duplicate]=\"du\",t[A.CommandType.PopEvaluatedValue]=\"pop\",t[A.CommandType.PopFunction]=\"~ret\",t[A.CommandType.PopTunnel]=\"->->\",t[A.CommandType.BeginString]=\"str\",t[A.CommandType.EndString]=\"/str\",t[A.CommandType.NoOp]=\"nop\",t[A.CommandType.ChoiceCount]=\"choiceCnt\",t[A.CommandType.Turns]=\"turn\",t[A.CommandType.TurnsSince]=\"turns\",t[A.CommandType.ReadCount]=\"readc\",t[A.CommandType.Random]=\"rnd\",t[A.CommandType.SeedRandom]=\"srnd\",t[A.CommandType.VisitIndex]=\"visit\",t[A.CommandType.SequenceShuffleIndex]=\"seq\",t[A.CommandType.StartThread]=\"thread\",t[A.CommandType.Done]=\"done\",t[A.CommandType.End]=\"end\",t[A.CommandType.ListFromInt]=\"listInt\",t[A.CommandType.ListRange]=\"range\",t[A.CommandType.ListRandom]=\"lrnd\";for(let e=0;e<A.CommandType.TOTAL_VALUES;++e)if(null==t[e])throw new Error(\"Control command not accounted for in serialisation\");return t})();class J{constructor(){if(this._threadCounter=0,this._startOfRoot=k.Null,arguments[0]instanceof H){let t=arguments[0];this._startOfRoot=k.StartOf(t.rootContentContainer),this.Reset()}else{let t=arguments[0];this._threads=[];for(let e of t._threads)this._threads.push(e.Copy());this._startOfRoot=t._startOfRoot}}get elements(){return this.callStack}get depth(){return this.elements.length}get currentElement(){let t=this._threads[this._threads.length-1].callstack;return t[t.length-1]}get currentElementIndex(){return this.callStack.length-1}get currentThread(){return this._threads[this._threads.length-1]}set currentThread(t){n.Assert(1==this._threads.length,\"Shouldn't be directly setting the current thread when we have a stack of them\"),this._threads.length=0,this._threads.push(t)}get canPop(){return this.callStack.length>1}Reset(){this._threads=[],this._threads.push(new J.Thread),this._threads[0].callstack.push(new J.Element(a.Tunnel,this._startOfRoot))}SetJsonToken(t,e){this._threads.length=0;let n=t.threads;for(let t of n){let n=t,i=new J.Thread(n,e);this._threads.push(i)}this._threadCounter=parseInt(t.threadCounter),this._startOfRoot=k.StartOf(e.rootContentContainer)}GetJsonToken(){let t={},e=[];for(let t of this._threads)e.push(t.jsonToken);return t.threads=e,t.threadCounter=this._threadCounter,t}PushThread(){let t=this.currentThread.Copy();this._threadCounter++,t.threadIndex=this._threadCounter,this._threads.push(t)}ForkThread(){let t=this.currentThread.Copy();return this._threadCounter++,t.threadIndex=this._threadCounter,t}PopThread(){if(!this.canPopThread)throw new Error(\"Can't pop thread\");this._threads.splice(this._threads.indexOf(this.currentThread),1)}get canPopThread(){return this._threads.length>1&&!this.elementIsEvaluateFromGame}get elementIsEvaluateFromGame(){return this.currentElement.type==a.FunctionEvaluationFromGame}Push(t,e=0,n=0){let i=new J.Element(t,this.currentElement.currentPointer,!1);i.evaluationStackHeightWhenPushed=e,i.functionStartInOutputStream=n,this.callStack.push(i)}CanPop(t=null){return!!this.canPop&&(null==t||this.currentElement.type==t)}Pop(t=null){if(!this.CanPop(t))throw new Error(\"Mismatched push/pop in Callstack\");this.callStack.pop()}GetTemporaryVariableWithName(t,e=-1){-1==e&&(e=this.currentElementIndex+1);let n=v(this.callStack[e-1].temporaryVariables,t,null);return n.exists?n.result:null}SetTemporaryVariable(t,e,n,i=-1){-1==i&&(i=this.currentElementIndex+1);let a=this.callStack[i-1];if(!n&&!a.temporaryVariables.get(t))throw new C(\"Could not find temporary variable to set: \"+t);let r=v(a.temporaryVariables,t,null);r.exists&&O.RetainListOriginsForAssignment(r.result,e),a.temporaryVariables.set(t,e)}ContextForVariableNamed(t){return this.currentElement.temporaryVariables.get(t)?this.currentElementIndex+1:0}ThreadWithIndex(t){return this._threads.filter(e=>{if(e.threadIndex==t)return e})[0]}get callStack(){return this.currentThread.callstack}get callStackTrace(){let t=new m;for(let e=0;e<this._threads.length;e++){let n=this._threads[e],i=e==this._threads.length-1;t.AppendFormat(\"=== THREAD {0}/{1} {2}===\\n\",e+1,this._threads.length,i?\"(current) \":\"\");for(let e=0;e<n.callstack.length;e++){n.callstack[e].type==a.Function?t.Append(\"  [FUNCTION] \"):t.Append(\"  [TUNNEL] \");let i=n.callstack[e].currentPointer;if(!i.isNull){if(t.Append(\"<SOMEWHERE IN \"),null===i.container)return d(\"pointer.container\");t.Append(i.container.path.toString()),t.AppendLine(\">\")}}}return t.toString()}}!function(t){class n{constructor(t,e,n=!1){this.evaluationStackHeightWhenPushed=0,this.functionStartInOutputStream=0,this.currentPointer=e.copy(),this.inExpressionEvaluation=n,this.temporaryVariables=new Map,this.type=t}Copy(){let t=new n(this.type,this.currentPointer,this.inExpressionEvaluation);return t.temporaryVariables=new Map(this.temporaryVariables),t.evaluationStackHeightWhenPushed=this.evaluationStackHeightWhenPushed,t.functionStartInOutputStream=this.functionStartInOutputStream,t}}t.Element=n;class i{constructor(){if(this.threadIndex=0,this.previousPointer=k.Null,this.callstack=[],arguments[0]&&arguments[1]){let t=arguments[0],i=arguments[1];this.threadIndex=parseInt(t.threadIndex);let a=t.callstack;for(let t of a){let a,r=t,s=parseInt(r.type),l=k.Null,o=r.cPath;if(void 0!==o){a=o.toString();let t=i.ContentAtPath(new e(a));if(l.container=t.container,l.index=parseInt(r.idx),null==t.obj)throw new Error(\"When loading state, internal story location couldn't be found: \"+a+\". Has the story changed since this save data was created?\");if(t.approximate){if(null===l.container)return d(\"pointer.container\");i.Warning(\"When loading state, exact internal story location couldn't be found: '\"+a+\"', so it was approximated to '\"+l.container.path.toString()+\"' to recover. Has the story changed since this save data was created?\")}}let u=!!r.exp,h=new n(s,l,u),c=r.temp;h.temporaryVariables=j.JObjectToDictionaryRuntimeObjs(c),this.callstack.push(h)}let r=t.previousContentObject;if(void 0!==r){let t=new e(r.toString());this.previousPointer=i.PointerAtPath(t)}}}Copy(){let t=new i;t.threadIndex=this.threadIndex;for(let e of this.callstack)t.callstack.push(e.Copy());return t.previousPointer=this.previousPointer.copy(),t}get jsonToken(){let t={},e=[];for(let t of this.callstack){let n={};if(!t.currentPointer.isNull){if(null===t.currentPointer.container)return d(\"el.currentPointer.container\");n.cPath=t.currentPointer.container.path.componentsString,n.idx=t.currentPointer.index}n.exp=t.inExpressionEvaluation,n.type=t.type,n.temp=j.DictionaryRuntimeObjsToJObject(t.temporaryVariables),e.push(n)}if(t.callstack=e,t.threadIndex=this.threadIndex,!this.previousPointer.isNull){let e=this.previousPointer.Resolve();if(null===e)return d(\"this.previousPointer.Resolve()\");t.previousContentObject=e.path.toString()}return t}}t.Thread=i}(J||(J={}));class q{constructor(t,e){this.variableChangedEventCallbacks=[],this._batchObservingVariableChanges=!1,this._defaultGlobalVariables=new Map,this._changedVariables=new Set,this._globalVariables=new Map,this._callStack=t,this._listDefsOrigin=e;try{return new Proxy(this,{get:(t,e)=>e in t?t[e]:t.$(e),set:(t,e,n)=>(e in t?t[e]=n:t.$(e,n),!0)})}catch(t){}}variableChangedEvent(t,e){for(let n of this.variableChangedEventCallbacks)n(t,e)}get batchObservingVariableChanges(){return this._batchObservingVariableChanges}set batchObservingVariableChanges(t){if(this._batchObservingVariableChanges=t,t)this._changedVariables=new Set;else if(null!=this._changedVariables)for(let t of this._changedVariables){let e=this._globalVariables.get(t);e?this.variableChangedEvent(t,e):d(\"currentValue\")}}get callStack(){return this._callStack}set callStack(t){this._callStack=t}$(t,e){if(void 0===e){let e=this._globalVariables.get(t);return void 0===e&&(e=this._defaultGlobalVariables.get(t)),void 0!==e?e.valueObject:null}{if(void 0===this._defaultGlobalVariables.get(t))throw new C(\"Cannot assign to a variable (\"+t+\") that hasn't been declared in the story\");let n=y.Create(e);if(null==n)throw new C(null==e?\"Cannot pass null to VariableState\":\"Invalid value passed to VariableState: \"+e.toString());this.SetGlobal(t,n)}}CopyFrom(t){if(this._globalVariables=new Map(t._globalVariables),this._defaultGlobalVariables=new Map(t._defaultGlobalVariables),this.variableChangedEvent=t.variableChangedEvent,this.variableChangedEventCallbacks=t.variableChangedEventCallbacks,t.batchObservingVariableChanges!=this.batchObservingVariableChanges)if(t.batchObservingVariableChanges){if(this._batchObservingVariableChanges=!0,null===t._changedVariables)return d(\"toCopy._changedVariables\");this._changedVariables=new Set(t._changedVariables)}else this._batchObservingVariableChanges=!1,this._changedVariables=null}get jsonToken(){return j.DictionaryRuntimeObjsToJObject(this._globalVariables)}set jsonToken(t){this._globalVariables=j.JObjectToDictionaryRuntimeObjs(t)}TryGetDefaultVariableValue(t){let e=v(this._defaultGlobalVariables,t,null);return e.exists?e.result:null}GlobalVariableExistsWithName(t){return this._globalVariables.has(t)}GetVariableWithName(t,e=-1){let n=this.GetRawVariableWithName(t,e),i=r(n,E);return null!==i&&(n=this.ValueAtVariablePointer(i)),n}GetRawVariableWithName(t,e){let n=null;if(0==e||-1==e){let e=v(this._globalVariables,t,null);if(e.exists)return e.result;if(null===this._listDefsOrigin)return d(\"VariablesState._listDefsOrigin\");let n=this._listDefsOrigin.FindSingleItemListWithName(t);if(n)return n}return n=this._callStack.GetTemporaryVariableWithName(t,e)}ValueAtVariablePointer(t){return this.GetVariableWithName(t.variableName,t.contextIndex)}Assign(t,e){let n=t.variableName;if(null===n)return d(\"name\");let i=-1,a=!1;if(a=t.isNewDeclaration?t.isGlobal:this._globalVariables.has(n),t.isNewDeclaration){let t=r(e,E);if(null!==t){e=this.ResolveVariablePointer(t)}}else{let t=null;do{null!=(t=r(this.GetRawVariableWithName(n,i),E))&&(n=t.variableName,a=0==(i=t.contextIndex))}while(null!=t)}a?this.SetGlobal(n,e):this._callStack.SetTemporaryVariable(n,e,t.isNewDeclaration,i)}SnapshotDefaultGlobals(){this._defaultGlobalVariables=new Map(this._globalVariables)}RetainListOriginsForAssignment(t,e){let n=s(t,O),i=s(e,O);n.value&&i.value&&0==i.value.Count&&i.value.SetInitialOriginNames(n.value.originNames)}SetGlobal(t,e){let n=v(this._globalVariables,t,null);if(n.exists&&O.RetainListOriginsForAssignment(n.result,e),null===t)return d(\"variableName\");if(this._globalVariables.set(t,e),null!=this.variableChangedEvent&&e!==n.result)if(this.batchObservingVariableChanges){if(null===this._changedVariables)return d(\"this._changedVariables\");this._changedVariables.add(t)}else this.variableChangedEvent(t,e)}ResolveVariablePointer(t){let e=t.contextIndex;-1==e&&(e=this.GetContextIndexOfVariableNamed(t.variableName));let n=r(this.GetRawVariableWithName(t.variableName,e),E);return null!=n?n:new E(t.variableName,e)}GetContextIndexOfVariableNamed(t){return this._globalVariables.get(t)?0:this._callStack.currentElementIndex}ObserveVariableChange(t){this.variableChangedEventCallbacks.push(t)}}class K{constructor(t){this.seed=t%2147483647,this.seed<=0&&(this.seed+=2147483646)}next(){return this.seed=16807*this.seed%2147483647}nextFloat(){return(this.next()-1)/2147483646}}class U{constructor(t){this.kInkSaveStateVersion=8,this.kMinCompatibleLoadVersion=8,this._currentErrors=null,this._currentWarnings=null,this.divertedPointer=k.Null,this._currentTurnIndex=0,this.storySeed=0,this.previousRandom=0,this.didSafeExit=!1,this._currentText=null,this._currentTags=null,this._outputStreamTextDirty=!0,this._outputStreamTagsDirty=!0,this.story=t,this._outputStream=[],this.OutputStreamDirty(),this._evaluationStack=[],this.callStack=new J(t),this._variablesState=new q(this.callStack,t.listDefinitions),this._visitCounts=new Map,this._turnIndices=new Map,this._currentTurnIndex=-1;let e=(new Date).getTime();this.storySeed=new K(e).next()%100,this.previousRandom=0,this._currentChoices=[],this.GoToStart()}ToJson(t=!1){return JSON.stringify(this.jsonToken,null,t?2:0)}toJson(t=!1){return this.ToJson(t)}LoadJson(t){this.jsonToken=JSON.parse(t)}VisitCountAtPathString(t){let e=v(this.visitCounts,t,null);return e.exists?e.result:0}get callstackDepth(){return this.callStack.depth}get outputStream(){return this._outputStream}get currentChoices(){return this.canContinue?[]:this._currentChoices}get generatedChoices(){return this._currentChoices}get currentErrors(){return this._currentErrors}get currentWarnings(){return this._currentWarnings}get variablesState(){return this._variablesState}get evaluationStack(){return this._evaluationStack}get visitCounts(){return this._visitCounts}get turnIndices(){return this._turnIndices}get currentTurnIndex(){return this._currentTurnIndex}get currentPathString(){let t=this.currentPointer;return t.isNull?null:null===t.path?d(\"pointer.path\"):t.path.toString()}get currentPointer(){return this.callStack.currentElement.currentPointer.copy()}set currentPointer(t){this.callStack.currentElement.currentPointer=t.copy()}get previousPointer(){return this.callStack.currentThread.previousPointer.copy()}set previousPointer(t){this.callStack.currentThread.previousPointer=t.copy()}get canContinue(){return!this.currentPointer.isNull&&!this.hasError}get hasError(){return null!=this.currentErrors&&this.currentErrors.length>0}get hasWarning(){return null!=this.currentWarnings&&this.currentWarnings.length>0}get currentText(){if(this._outputStreamTextDirty){let t=new m;for(let e of this._outputStream){let n=r(e,_);null!==n&&t.Append(n.value)}this._currentText=this.CleanOutputWhitespace(t.toString()),this._outputStreamTextDirty=!1}return this._currentText}CleanOutputWhitespace(t){let e=new m,n=-1,i=0;for(let a=0;a<t.length;a++){let r=t.charAt(a),s=\" \"==r||\"\\t\"==r;s&&-1==n&&(n=a),s||(\"\\n\"!=r&&n>0&&n!=i&&e.Append(\" \"),n=-1),\"\\n\"==r&&(i=a+1),s||e.Append(r)}return e.toString()}get currentTags(){if(this._outputStreamTagsDirty){this._currentTags=[];for(let t of this._outputStream){let e=r(t,M);null!==e&&this._currentTags.push(e.text)}this._outputStreamTagsDirty=!1}return this._currentTags}get inExpressionEvaluation(){return this.callStack.currentElement.inExpressionEvaluation}set inExpressionEvaluation(t){this.callStack.currentElement.inExpressionEvaluation=t}GoToStart(){this.callStack.currentElement.currentPointer=k.StartOf(this.story.mainContentContainer)}Copy(){let t=new U(this.story);return t.outputStream.push.apply(t.outputStream,this._outputStream),this.OutputStreamDirty(),t._currentChoices.push.apply(t._currentChoices,this._currentChoices),this.hasError&&(t._currentErrors=[],t._currentErrors.push.apply(t._currentErrors,this.currentErrors||[])),this.hasWarning&&(t._currentWarnings=[],t._currentWarnings.push.apply(t._currentWarnings,this.currentWarnings||[])),t.callStack=new J(this.callStack),t._variablesState=new q(t.callStack,this.story.listDefinitions),t.variablesState.CopyFrom(this.variablesState),t.evaluationStack.push.apply(t.evaluationStack,this.evaluationStack),this.divertedPointer.isNull||(t.divertedPointer=this.divertedPointer.copy()),t.previousPointer=this.previousPointer.copy(),t._visitCounts=new Map(this.visitCounts),t._turnIndices=new Map(this.turnIndices),t._currentTurnIndex=this.currentTurnIndex,t.storySeed=this.storySeed,t.previousRandom=this.previousRandom,t.didSafeExit=this.didSafeExit,t}get jsonToken(){let t,e={};for(let e of this._currentChoices){if(null===e.threadAtGeneration)return d(\"c.threadAtGeneration\");e.originalThreadIndex=e.threadAtGeneration.threadIndex,null==this.callStack.ThreadWithIndex(e.originalThreadIndex)&&(null==t&&(t=new Map),t[e.originalThreadIndex.toString()]=e.threadAtGeneration.jsonToken)}if(null!=t&&(e.choiceThreads=t),e.callstackThreads=this.callStack.GetJsonToken(),e.variablesState=this.variablesState.jsonToken,e.evalStack=j.ListToJArray(this.evaluationStack),e.outputStream=j.ListToJArray(this._outputStream),e.currentChoices=j.ListToJArray(this._currentChoices),!this.divertedPointer.isNull){if(null===this.divertedPointer.path)return d(\"this.divertedPointer.path\");e.currentDivertTarget=this.divertedPointer.path.componentsString}return e.visitCounts=j.IntDictionaryToJObject(this.visitCounts),e.turnIndices=j.IntDictionaryToJObject(this.turnIndices),e.turnIdx=this.currentTurnIndex,e.storySeed=this.storySeed,e.previousRandom=this.previousRandom,e.inkSaveVersion=this.kInkSaveStateVersion,e.inkFormatVersion=this.story.inkVersionCurrent,e}set jsonToken(t){let n=t,i=n.inkSaveVersion;if(null==i)throw new C(\"ink save format incorrect, can't load.\");if(parseInt(i)<this.kMinCompatibleLoadVersion)throw new C(\"Ink save format isn't compatible with the current version (saw '\"+i+\"', but minimum is \"+this.kMinCompatibleLoadVersion+\"), so can't load.\");this.callStack.SetJsonToken(n.callstackThreads,this.story),this.variablesState.jsonToken=n.variablesState,this._evaluationStack=j.JArrayToRuntimeObjList(n.evalStack),this._outputStream=j.JArrayToRuntimeObjList(n.outputStream),this.OutputStreamDirty(),this._currentChoices=j.JArrayToRuntimeObjList(n.currentChoices);let a=n.currentDivertTarget;if(null!=a){let t=new e(a.toString());this.divertedPointer=this.story.PointerAtPath(t)}this._visitCounts=j.JObjectToIntDictionary(n.visitCounts),this._turnIndices=j.JObjectToIntDictionary(n.turnIndices),this._currentTurnIndex=parseInt(n.turnIdx),this.storySeed=parseInt(n.storySeed),this.previousRandom=parseInt(n.previousRandom);let r=n.choiceThreads;for(let t of this._currentChoices){let e=this.callStack.ThreadWithIndex(t.originalThreadIndex);if(null!=e)t.threadAtGeneration=e.Copy();else{let e=r[t.originalThreadIndex.toString()];t.threadAtGeneration=new J.Thread(e,this.story)}}}ResetErrors(){this._currentErrors=null,this._currentWarnings=null}ResetOutput(t=null){this._outputStream.length=0,null!==t&&this._outputStream.push.apply(this._outputStream,t),this.OutputStreamDirty()}PushToOutputStream(t){let e=r(t,_);if(null!==e){let t=this.TrySplittingHeadTailWhitespace(e);if(null!==t){for(let e of t)this.PushToOutputStreamIndividual(e);return void this.OutputStreamDirty()}}this.PushToOutputStreamIndividual(t),this.OutputStreamDirty()}PopFromOutputStream(t){this.outputStream.splice(this.outputStream.length-t,t),this.OutputStreamDirty()}TrySplittingHeadTailWhitespace(t){let e=t.value;if(null===e)return d(\"single.value\");let n=-1,i=-1;for(let t=0;t<e.length;++t){let a=e[t];if(\"\\n\"!=a){if(\" \"==a||\"\\t\"==a)continue;break}-1==n&&(n=t),i=t}let a=-1,r=-1;for(let t=0;t<e.length;++t){let n=e[t];if(\"\\n\"!=n){if(\" \"==n||\"\\t\"==n)continue;break}-1==a&&(a=t),r=t}if(-1==n&&-1==a)return null;let s=[],l=0,o=e.length;if(-1!=n){if(n>0){let t=new _(e.substring(0,n));s.push(t)}s.push(new _(\"\\n\")),l=i+1}if(-1!=a&&(o=r),o>l){let t=e.substring(l,o-l);s.push(new _(t))}if(-1!=a&&r>i&&(s.push(new _(\"\\n\")),a<e.length-1)){let t=e.length-a-1,n=new _(e.substring(a+1,t));s.push(n)}return s}PushToOutputStreamIndividual(t){let e=r(t,P),n=r(t,_),i=!0;if(e)this.TrimNewlinesFromOutputStream(),i=!0;else if(n){let t=-1,e=this.callStack.currentElement;e.type==a.Function&&(t=e.functionStartInOutputStream);let r=-1;for(let e=this._outputStream.length-1;e>=0;e--){let n=this._outputStream[e],i=n instanceof A?n:null;if(null!=(n instanceof P?n:null)){r=e;break}if(null!=i&&i.commandType==A.CommandType.BeginString){e>=t&&(t=-1);break}}let s=-1;if(-1!=(s=-1!=r&&-1!=t?Math.min(t,r):-1!=r?r:t)){if(n.isNewline)i=!1;else if(n.isNonWhitespace&&(r>-1&&this.RemoveExistingGlue(),t>-1)){let t=this.callStack.elements;for(let e=t.length-1;e>=0;e--){let n=t[e];if(n.type!=a.Function)break;n.functionStartInOutputStream=-1}}}else n.isNewline&&(!this.outputStreamEndsInNewline&&this.outputStreamContainsContent||(i=!1))}if(i){if(null===t)return d(\"obj\");this._outputStream.push(t),this.OutputStreamDirty()}}TrimNewlinesFromOutputStream(){let t=-1,e=this._outputStream.length-1;for(;e>=0;){let n=this._outputStream[e],i=r(n,A),a=r(n,_);if(null!=i||null!=a&&a.isNonWhitespace)break;null!=a&&a.isNewline&&(t=e),e--}if(t>=0)for(e=t;e<this._outputStream.length;){r(this._outputStream[e],_)?this._outputStream.splice(e,1):e++}this.OutputStreamDirty()}RemoveExistingGlue(){for(let t=this._outputStream.length-1;t>=0;t--){let e=this._outputStream[t];if(e instanceof P)this._outputStream.splice(t,1);else if(e instanceof A)break}this.OutputStreamDirty()}get outputStreamEndsInNewline(){if(this._outputStream.length>0)for(let t=this._outputStream.length-1;t>=0;t--){if(this._outputStream[t]instanceof A)break;let e=this._outputStream[t];if(e instanceof _){if(e.isNewline)return!0;if(e.isNonWhitespace)break}}return!1}get outputStreamContainsContent(){for(let t=0;t<this._outputStream.length;t++)if(this._outputStream[t]instanceof _)return!0;return!1}get inStringEvaluation(){for(let t=this._outputStream.length-1;t>=0;t--){let e=r(this._outputStream[t],A);if(e instanceof A&&e.commandType==A.CommandType.BeginString)return!0}return!1}PushEvaluationStack(t){let e=r(t,O);if(e){let t=e.value;if(null===t)return d(\"rawList\");if(null!=t.originNames){t.origins||(t.origins=[]),t.origins.length=0;for(let e of t.originNames){if(null===this.story.listDefinitions)return d(\"StoryState.story.listDefinitions\");let n=this.story.listDefinitions.TryListGetDefinition(e,null);if(null===n.result)return d(\"StoryState def.result\");t.origins.indexOf(n.result)<0&&t.origins.push(n.result)}}}if(null===t)return d(\"obj\");this.evaluationStack.push(t)}PopEvaluationStack(t){if(void 0===t){return u(this.evaluationStack.pop())}if(t>this.evaluationStack.length)throw new Error(\"trying to pop too many objects\");return u(this.evaluationStack.splice(this.evaluationStack.length-t,t))}PeekEvaluationStack(){return this.evaluationStack[this.evaluationStack.length-1]}ForceEnd(){this.callStack.Reset(),this._currentChoices.length=0,this.currentPointer=k.Null,this.previousPointer=k.Null,this.didSafeExit=!0}TrimWhitespaceFromFunctionEnd(){n.Assert(this.callStack.currentElement.type==a.Function);let t=this.callStack.currentElement.functionStartInOutputStream;-1==t&&(t=0);for(let e=this._outputStream.length-1;e>=t;e--){let t=this._outputStream[e],n=r(t,_),i=r(t,A);if(null!=n){if(i)break;if(!n.isNewline&&!n.isInlineWhitespace)break;this._outputStream.splice(e,1),this.OutputStreamDirty()}}}PopCallStack(t=null){this.callStack.currentElement.type==a.Function&&this.TrimWhitespaceFromFunctionEnd(),this.callStack.Pop(t)}SetChosenPath(t,e){this._currentChoices.length=0;let n=this.story.PointerAtPath(t);n.isNull||-1!=n.index||(n.index=0),this.currentPointer=n,e&&this._currentTurnIndex++}StartFunctionEvaluationFromGame(t,e){this.callStack.Push(a.FunctionEvaluationFromGame,this.evaluationStack.length),this.callStack.currentElement.currentPointer=k.StartOf(t),this.PassArgumentsToEvaluationStack(e)}PassArgumentsToEvaluationStack(t){if(null!=t)for(let e=0;e<t.length;e++){if(\"number\"!=typeof t[e]&&\"string\"!=typeof t[e])throw new Error(\"ink arguments when calling EvaluateFunction / ChoosePathStringWithParameters  must be int, float or string\");this.PushEvaluationStack(y.Create(t[e]))}}TryExitFunctionEvaluationFromGame(){return this.callStack.currentElement.type==a.FunctionEvaluationFromGame&&(this.currentPointer=k.Null,this.didSafeExit=!0,!0)}CompleteFunctionEvaluationFromGame(){if(this.callStack.currentElement.type!=a.FunctionEvaluationFromGame)throw new C(\"Expected external function evaluation to be complete. Stack trace: \"+this.callStack.callStackTrace);let t=this.callStack.currentElement.evaluationStackHeightWhenPushed,e=null;for(;this.evaluationStack.length>t;){let t=this.PopEvaluationStack();null===e&&(e=t)}if(this.PopCallStack(a.FunctionEvaluationFromGame),e){if(e instanceof R)return null;let t=s(e,y);return t.valueType==i.DivertTarget?t.valueObject.toString():t.valueObject}return null}AddError(t,e){e?(null==this._currentWarnings&&(this._currentWarnings=[]),this._currentWarnings.push(t)):(null==this._currentErrors&&(this._currentErrors=[]),this._currentErrors.push(t))}OutputStreamDirty(){this._outputStreamTextDirty=!0,this._outputStreamTagsDirty=!0}}class z{constructor(){this.startTime=void 0}get ElapsedMilliseconds(){return void 0===this.startTime?0:(new Date).getTime()-this.startTime}Start(){this.startTime=(new Date).getTime()}Stop(){this.startTime=void 0}}Number.isInteger||(Number.isInteger=function(t){return\"number\"==typeof t&&isFinite(t)&&t>-9007199254740992&&t<9007199254740992&&Math.floor(t)===t});class H extends p{constructor(){let t;super(),this.inkVersionCurrent=19,this.inkVersionMinimumCompatible=18,this._prevContainers=[],this.allowExternalFunctionFallbacks=!1,this._listDefinitions=null,this._variableObservers=null,this._hasValidatedExternals=!1,this._temporaryEvaluationContainer=null,this._asyncContinueActive=!1,this._stateAtLastNewline=null,this._recursiveContinueCount=0,this._profiler=null;let e=null,n=null;if(arguments[0]instanceof N)t=arguments[0],void 0!==arguments[1]&&(e=arguments[1]),this._mainContentContainer=t;else if(\"string\"==typeof arguments[0]){let t=arguments[0];n=JSON.parse(t)}else n=arguments[0];if(null!=e&&(this._listDefinitions=new W(e)),this._externals=new Map,null!==n){let t=n,e=t.inkVersion;if(null==e)throw new Error(\"ink version number not found. Are you sure it's a valid .ink.json file?\");let i=parseInt(e);if(i>this.inkVersionCurrent)throw new Error(\"Version of ink used to build story was newer than the current version of the engine\");if(i<this.inkVersionMinimumCompatible)throw new Error(\"Version of ink used to build story is too old to be loaded by this version of the engine\");i!=this.inkVersionCurrent&&console.warn(\"WARNING: Version of ink used to build story doesn't match current version of engine. Non-critical, but recommend synchronising.\");let a,r=t.root;if(null==r)throw new Error(\"Root node for ink not found. Are you sure it's a valid .ink.json file?\");(a=t.listDefs)&&(this._listDefinitions=j.JTokenToListDefinitions(a)),this._mainContentContainer=s(j.JTokenToRuntimeObject(r),N),this.ResetState()}}get currentChoices(){let t=[];if(null===this._state)return d(\"this._state\");for(let e of this._state.currentChoices)e.isInvisibleDefault||(e.index=t.length,t.push(e));return t}get currentText(){return this.IfAsyncWeCant(\"call currentText since it's a work in progress\"),this.state.currentText}get currentTags(){return this.IfAsyncWeCant(\"call currentTags since it's a work in progress\"),this.state.currentTags}get currentErrors(){return this.state.currentErrors}get currentWarnings(){return this.state.currentWarnings}get hasError(){return this.state.hasError}get hasWarning(){return this.state.hasWarning}get variablesState(){return this.state.variablesState}get listDefinitions(){return this._listDefinitions}get state(){return this._state}StartProfiling(){}EndProfiling(){}ToJsonString(){let t=j.RuntimeObjectToJToken(this._mainContentContainer),e={};return e.inkVersion=this.inkVersionCurrent,e.root=t,null!=this._listDefinitions&&(e.listDefs=j.ListDefinitionsToJToken(this._listDefinitions)),JSON.stringify(e)}ResetState(){this.IfAsyncWeCant(\"ResetState\"),this._state=new U(this),this._state.variablesState.ObserveVariableChange(this.VariableStateDidChangeEvent.bind(this)),this.ResetGlobals()}ResetErrors(){if(null===this._state)return d(\"this._state\");this._state.ResetErrors()}ResetCallstack(){if(this.IfAsyncWeCant(\"ResetCallstack\"),null===this._state)return d(\"this._state\");this._state.ForceEnd()}ResetGlobals(){if(this._mainContentContainer.namedContent.get(\"global decl\")){let t=this.state.currentPointer.copy();this.ChoosePath(new e(\"global decl\"),!1),this.ContinueInternal(),this.state.currentPointer=t}this.state.variablesState.SnapshotDefaultGlobals()}Continue(){return this.ContinueAsync(0),this.currentText}get canContinue(){return this.state.canContinue}get asyncContinueComplete(){return!this._asyncContinueActive}ContinueAsync(t){this._hasValidatedExternals||this.ValidateExternalBindings(),this.ContinueInternal(t)}ContinueInternal(t=0){null!=this._profiler&&this._profiler.PreContinue();let e=t>0;if(this._recursiveContinueCount++,!this._asyncContinueActive){if(this._asyncContinueActive=e,!this.canContinue)throw new C(\"Can't continue - should check canContinue before calling Continue\");this._state.didSafeExit=!1,this._state.ResetOutput(),1==this._recursiveContinueCount&&(this._state.variablesState.batchObservingVariableChanges=!0)}let n=new z;n.Start();let i=!1;do{try{i=this.ContinueSingleStep()}catch(t){if(!(t instanceof C))throw t;this.AddError(t.message,void 0,t.useEndLineNumber);break}if(i)break;if(this._asyncContinueActive&&n.ElapsedMilliseconds>t)break}while(this.canContinue);n.Stop(),!i&&this.canContinue||(null!=this._stateAtLastNewline&&(this.RestoreStateSnapshot(this._stateAtLastNewline),this._stateAtLastNewline=null),this.canContinue||(this.state.callStack.canPopThread&&this.AddError(\"Thread available to pop, threads should always be flat by the end of evaluation?\"),0!=this.state.generatedChoices.length||this.state.didSafeExit||null!=this._temporaryEvaluationContainer||(this.state.callStack.CanPop(a.Tunnel)?this.AddError(\"unexpectedly reached end of content. Do you need a '->->' to return from a tunnel?\"):this.state.callStack.CanPop(a.Function)?this.AddError(\"unexpectedly reached end of content. Do you need a '~ return'?\"):this.state.callStack.canPop?this.AddError(\"unexpectedly reached end of content for unknown reason. Please debug compiler!\"):this.AddError(\"ran out of content. Do you need a '-> DONE' or '-> END'?\"))),this.state.didSafeExit=!1,1==this._recursiveContinueCount&&(this._state.variablesState.batchObservingVariableChanges=!1),this._asyncContinueActive=!1),this._recursiveContinueCount--,null!=this._profiler&&this._profiler.PostContinue()}ContinueSingleStep(){if(null!=this._profiler&&this._profiler.PreStep(),this.Step(),null!=this._profiler&&this._profiler.PostStep(),this.canContinue||this.state.callStack.elementIsEvaluateFromGame||this.TryFollowDefaultInvisibleChoice(),null!=this._profiler&&this._profiler.PreSnapshot(),!this.state.inStringEvaluation){if(null!=this._stateAtLastNewline){if(null===this._stateAtLastNewline.currentTags)return d(\"this._stateAtLastNewline.currentTags\");if(null===this.state.currentTags)return d(\"this.state.currentTags\");let t=this.CalculateNewlineOutputStateChange(this._stateAtLastNewline.currentText,this.state.currentText,this._stateAtLastNewline.currentTags.length,this.state.currentTags.length);if(t==H.OutputStateChange.ExtendedBeyondNewline)return this.RestoreStateSnapshot(this._stateAtLastNewline),!0;t==H.OutputStateChange.NewlineRemoved&&(this._stateAtLastNewline=null)}this.state.outputStreamEndsInNewline&&(this.canContinue?null==this._stateAtLastNewline&&(this._stateAtLastNewline=this.StateSnapshot()):this._stateAtLastNewline=null)}return null!=this._profiler&&this._profiler.PostSnapshot(),!1}CalculateNewlineOutputStateChange(t,e,n,i){if(null===t)return d(\"prevText\");if(null===e)return d(\"currText\");let a=e.length>=t.length&&\"\\n\"==e.charAt(t.length-1);if(n==i&&t.length==e.length&&a)return H.OutputStateChange.NoChange;if(!a)return H.OutputStateChange.NewlineRemoved;if(i>n)return H.OutputStateChange.ExtendedBeyondNewline;for(let n=t.length;n<e.length;n++){let t=e.charAt(n);if(\" \"!=t&&\"\\t\"!=t)return H.OutputStateChange.ExtendedBeyondNewline}return H.OutputStateChange.NoChange}ContinueMaximally(){this.IfAsyncWeCant(\"ContinueMaximally\");let t=new m;for(;this.canContinue;)t.Append(this.Continue());return t.toString()}ContentAtPath(t){return this.mainContentContainer.ContentAtPath(t)}KnotContainerWithName(t){let e=this.mainContentContainer.namedContent.get(t);return e instanceof N?e:null}PointerAtPath(t){if(0==t.length)return k.Null;let e=new k,n=t.length,i=null;return null===t.lastComponent?d(\"path.lastComponent\"):(t.lastComponent.isIndex?(n=t.length-1,i=this.mainContentContainer.ContentAtPath(t,void 0,n),e.container=i.container,e.index=t.lastComponent.index):(i=this.mainContentContainer.ContentAtPath(t),e.container=i.container,e.index=-1),null==i.obj||i.obj==this.mainContentContainer&&n>0?this.Error(\"Failed to find content at path '\"+t+\"', and no approximation of it was possible.\"):i.approximate&&this.Warning(\"Failed to find content at path '\"+t+\"', so it was approximated to: '\"+i.obj.path+\"'.\"),e)}StateSnapshot(){return this.state.Copy()}RestoreStateSnapshot(t){this._state=t}Step(){let t=!0,e=this.state.currentPointer.copy();if(e.isNull)return;let n=r(e.Resolve(),N);for(;n&&(this.VisitContainer(n,!0),0!=n.content.length);)n=r((e=k.StartOf(n)).Resolve(),N);this.state.currentPointer=e.copy(),null!=this._profiler&&this._profiler.Step(this.state.callStack);let i=e.Resolve(),a=this.PerformLogicAndFlowControl(i);if(this.state.currentPointer.isNull)return;a&&(t=!1);let s=r(i,F);if(s){let e=this.ProcessChoice(s);e&&this.state.generatedChoices.push(e),i=null,t=!1}if(i instanceof N&&(t=!1),t){let t=r(i,E);if(t&&-1==t.contextIndex){let e=this.state.callStack.ContextForVariableNamed(t.variableName);i=new E(t.variableName,e)}this.state.inExpressionEvaluation?this.state.PushEvaluationStack(i):this.state.PushToOutputStream(i)}this.NextContent();let l=r(i,A);l&&l.commandType==A.CommandType.StartThread&&this.state.callStack.PushThread()}VisitContainer(t,e){t.countingAtStartOnly&&!e||(t.visitsShouldBeCounted&&this.IncrementVisitCountForContainer(t),t.turnIndexShouldBeCounted&&this.RecordTurnIndexVisitToContainer(t))}VisitChangedContainersDueToDivert(){let t=this.state.previousPointer.copy(),e=this.state.currentPointer.copy();if(e.isNull||-1==e.index)return;if(this._prevContainers.length=0,!t.isNull){let e=r(t.Resolve(),N)||r(t.container,N);for(;e;)this._prevContainers.push(e),e=r(e.parent,N)}let n=e.Resolve();if(null==n)return;let i=r(n.parent,N);for(;i&&(this._prevContainers.indexOf(i)<0||i.countingAtStartOnly);){let t=i.content.length>0&&n==i.content[0];this.VisitContainer(i,t),n=i,i=r(i.parent,N)}}ProcessChoice(t){let e=!0;if(t.hasCondition){let t=this.state.PopEvaluationStack();this.IsTruthy(t)||(e=!1)}let n=\"\",i=\"\";if(t.hasChoiceOnlyContent){i=s(this.state.PopEvaluationStack(),_).value||\"\"}if(t.hasStartContent){n=s(this.state.PopEvaluationStack(),_).value||\"\"}if(t.onceOnly){this.VisitCountForContainer(t.choiceTarget)>0&&(e=!1)}if(!e)return null;let a=new G;return a.targetPath=t.pathOnChoice,a.sourcePath=t.path.toString(),a.isInvisibleDefault=t.isInvisibleDefault,a.threadAtGeneration=this.state.callStack.ForkThread(),a.text=(n+i).replace(/^[ \\t]+|[ \\t]+$/g,\"\"),a}IsTruthy(t){if(t instanceof y){let e=t;if(e instanceof w){let t=e;return this.Error(\"Shouldn't use a divert target (to \"+t.targetPath+\") as a conditional value. Did you intend a function call 'likeThis()' or a read count check 'likeThis'? (no arrows)\"),!1}return e.isTruthy}return!1}PerformLogicAndFlowControl(t){if(null==t)return!1;if(t instanceof I){let e=t;if(e.isConditional){let t=this.state.PopEvaluationStack();if(!this.IsTruthy(t))return!0}if(e.hasVariableTarget){let t=e.variableDivertName,n=this.state.variablesState.GetVariableWithName(t);if(null==n)this.Error(\"Tried to divert using a target from a variable that could not be found (\"+t+\")\");else if(!(n instanceof w)){let e=r(n,T),i=\"Tried to divert to a target from a variable, but the variable (\"+t+\") didn't contain a divert target, it \";e instanceof T&&0==e.value?i+=\"was empty/null (the value 0).\":i+=\"contained '\"+n+\"'.\",this.Error(i)}let i=s(n,w);this.state.divertedPointer=this.PointerAtPath(i.targetPath)}else{if(e.isExternal)return this.CallExternalFunction(e.targetPathString,e.externalArgs),!0;this.state.divertedPointer=e.targetPointer.copy()}return e.pushesToStack&&this.state.callStack.Push(e.stackPushType,void 0,this.state.outputStream.length),this.state.divertedPointer.isNull&&!e.isExternal&&(e&&e.debugMetadata&&null!=e.debugMetadata.sourceName?this.Error(\"Divert target doesn't exist: \"+e.debugMetadata.sourceName):this.Error(\"Divert resolution failed: \"+e)),!0}if(t instanceof A){let e=t;switch(e.commandType){case A.CommandType.EvalStart:this.Assert(!1===this.state.inExpressionEvaluation,\"Already in expression evaluation?\"),this.state.inExpressionEvaluation=!0;break;case A.CommandType.EvalEnd:this.Assert(!0===this.state.inExpressionEvaluation,\"Not in expression evaluation mode\"),this.state.inExpressionEvaluation=!1;break;case A.CommandType.EvalOutput:if(this.state.evaluationStack.length>0){let t=this.state.PopEvaluationStack();if(!(t instanceof R)){let e=new _(t.toString());this.state.PushToOutputStream(e)}}break;case A.CommandType.NoOp:break;case A.CommandType.Duplicate:this.state.PushEvaluationStack(this.state.PeekEvaluationStack());break;case A.CommandType.PopEvaluatedValue:this.state.PopEvaluationStack();break;case A.CommandType.PopFunction:case A.CommandType.PopTunnel:let t=e.commandType==A.CommandType.PopFunction?a.Function:a.Tunnel,n=null;if(t==a.Tunnel){let t=this.state.PopEvaluationStack();null===(n=r(t,w))&&this.Assert(t instanceof R,\"Expected void if ->-> doesn't override target\")}if(this.state.TryExitFunctionEvaluationFromGame())break;if(this.state.callStack.currentElement.type==t&&this.state.callStack.canPop)this.state.PopCallStack(),n&&(this.state.divertedPointer=this.PointerAtPath(n.targetPath));else{let e=new Map;e.set(a.Function,\"function return statement (~ return)\"),e.set(a.Tunnel,\"tunnel onwards statement (->->)\");let n=e.get(this.state.callStack.currentElement.type);this.state.callStack.canPop||(n=\"end of flow (-> END or choice)\");let i=\"Found \"+e.get(t)+\", when expected \"+n;this.Error(i)}break;case A.CommandType.BeginString:this.state.PushToOutputStream(e),this.Assert(!0===this.state.inExpressionEvaluation,\"Expected to be in an expression when evaluating a string\"),this.state.inExpressionEvaluation=!1;break;case A.CommandType.EndString:let i=[],l=0;for(let t=this.state.outputStream.length-1;t>=0;--t){let e=this.state.outputStream[t];l++;let n=r(e,A);if(n&&n.commandType==A.CommandType.BeginString)break;e instanceof _&&i.push(e)}this.state.PopFromOutputStream(l),i=i.reverse();let o=new m;for(let t of i)o.Append(t.toString());this.state.inExpressionEvaluation=!0,this.state.PushEvaluationStack(new _(o.toString()));break;case A.CommandType.ChoiceCount:let u=this.state.generatedChoices.length;this.state.PushEvaluationStack(new T(u));break;case A.CommandType.Turns:this.state.PushEvaluationStack(new T(this.state.currentTurnIndex+1));break;case A.CommandType.TurnsSince:case A.CommandType.ReadCount:let h=this.state.PopEvaluationStack();if(!(h instanceof w)){let t=\"\";h instanceof T&&(t=\". Did you accidentally pass a read count ('knot_name') instead of a target ('-> knot_name')?\"),this.Error(\"TURNS_SINCE / READ_COUNT expected a divert target (knot, stitch, label name), but saw \"+h+t);break}let c,p=s(h,w),v=r(this.ContentAtPath(p.targetPath).correctObj,N);null!=v?c=e.commandType==A.CommandType.TurnsSince?this.TurnsSinceForContainer(v):this.VisitCountForContainer(v):(c=e.commandType==A.CommandType.TurnsSince?-1:0,this.Warning(\"Failed to find container for \"+e.toString()+\" lookup at \"+p.targetPath.toString())),this.state.PushEvaluationStack(new T(c));break;case A.CommandType.Random:{let t=r(this.state.PopEvaluationStack(),T),e=r(this.state.PopEvaluationStack(),T);if(null==e||e instanceof T==!1)return this.Error(\"Invalid value for minimum parameter of RANDOM(min, max)\");if(null==t||e instanceof T==!1)return this.Error(\"Invalid value for maximum parameter of RANDOM(min, max)\");if(null===t.value)return d(\"maxInt.value\");if(null===e.value)return d(\"minInt.value\");let n=t.value-e.value+1;n<=0&&this.Error(\"RANDOM was called with minimum as \"+e.value+\" and maximum as \"+t.value+\". The maximum must be larger\");let i=this.state.storySeed+this.state.previousRandom,a=new K(i).next(),s=a%n+e.value;this.state.PushEvaluationStack(new T(s)),this.state.previousRandom=a;break}case A.CommandType.SeedRandom:let S=r(this.state.PopEvaluationStack(),T);if(null==S||S instanceof T==!1)return this.Error(\"Invalid value passed to SEED_RANDOM\");if(null===S.value)return d(\"minInt.value\");this.state.storySeed=S.value,this.state.previousRandom=0,this.state.PushEvaluationStack(new R);break;case A.CommandType.VisitIndex:let b=this.VisitCountForContainer(this.state.currentPointer.container)-1;this.state.PushEvaluationStack(new T(b));break;case A.CommandType.SequenceShuffleIndex:let E=this.NextSequenceShuffleIndex();this.state.PushEvaluationStack(new T(E));break;case A.CommandType.StartThread:break;case A.CommandType.Done:this.state.callStack.canPopThread?this.state.callStack.PopThread():(this.state.didSafeExit=!0,this.state.currentPointer=k.Null);break;case A.CommandType.End:this.state.ForceEnd();break;case A.CommandType.ListFromInt:let x=r(this.state.PopEvaluationStack(),T),P=s(this.state.PopEvaluationStack(),_);if(null===x)throw new C(\"Passed non-integer when creating a list element from a numerical value.\");let I=null;if(null===this.listDefinitions)return d(\"this.listDefinitions\");let F=this.listDefinitions.TryListGetDefinition(P.value,null);if(!F.exists)throw new C(\"Failed to find LIST called \"+P.value);{if(null===x.value)return d(\"minInt.value\");let t=F.result.TryGetItemWithValue(x.value,f.Null);t.exists&&(I=new O(t.result,x.value))}null==I&&(I=new O),this.state.PushEvaluationStack(I);break;case A.CommandType.ListRange:let V=r(this.state.PopEvaluationStack(),y),L=r(this.state.PopEvaluationStack(),y),D=r(this.state.PopEvaluationStack(),O);if(null===D||null===L||null===V)throw new C(\"Expected list, minimum and maximum for LIST_RANGE\");if(null===D.value)return d(\"targetList.value\");let M=D.value.ListWithSubRange(L.valueObject,V.valueObject);this.state.PushEvaluationStack(new O(M));break;case A.CommandType.ListRandom:{let t=this.state.PopEvaluationStack();if(null===t)throw new C(\"Expected list for LIST_RANDOM\");let e=t.value,n=null;if(null===e)throw d(\"list\");if(0==e.Count)n=new g;else{let t=this.state.storySeed+this.state.previousRandom,i=new K(t).next(),a=i%e.Count,r=e.entries();for(let t=0;t<=a-1;t++)r.next();let s=r.next().value,l={Key:f.fromSerializedKey(s[0]),Value:s[1]};if(null===l.Key.originName)return d(\"randomItem.Key.originName\");(n=new g(l.Key.originName,this)).Add(l.Key,l.Value),this.state.previousRandom=i}this.state.PushEvaluationStack(new O(n));break}default:this.Error(\"unhandled ControlCommand: \"+e)}return!0}if(t instanceof L){let e=t,n=this.state.PopEvaluationStack();return this.state.variablesState.Assign(e,n),!0}if(t instanceof V){let e=t,n=null;if(null!=e.pathForCount){let t=e.containerForCount,i=this.VisitCountForContainer(t);n=new T(i)}else if(null==(n=this.state.variablesState.GetVariableWithName(e.name))){let t=this.state.variablesState.TryGetDefaultVariableValue(e.name);null!=t?(this.Warning(\"Variable not found in save state: '\"+e.name+\"', but seems to have been newly created. Assigning value from latest ink's declaration: \"+t),n=t,this.state.variablesState.SetGlobal(e.name,n)):(this.Warning(\"Variable not found: '\"+e.name+\"'. Using default value of 0 (false). This can happen with temporary variables if the declaration hasn't yet been hit.\"),n=new T(0))}return this.state.PushEvaluationStack(n),!0}if(t instanceof D){let e=t,n=this.state.PopEvaluationStack(e.numberOfParameters),i=e.Call(n);return this.state.PushEvaluationStack(i),!0}return!1}ChoosePathString(t,n=!0,i=[]){if(this.IfAsyncWeCant(\"call ChoosePathString right now\"),n)this.ResetCallstack();else if(this.state.callStack.currentElement.type==a.Function){let e=\"\",n=this.state.callStack.currentElement.currentPointer.container;throw null!=n&&(e=\"(\"+n.path.toString()+\") \"),new Error(\"Story was running a function \"+e+\"when you called ChoosePathString(\"+t+\") - this is almost certainly not not what you want! Full stack trace: \\n\"+this.state.callStack.callStackTrace)}this.state.PassArgumentsToEvaluationStack(i),this.ChoosePath(new e(t))}IfAsyncWeCant(t){if(this._asyncContinueActive)throw new Error(\"Can't \"+t+\". Story is in the middle of a ContinueAsync(). Make more ContinueAsync() calls or a single Continue() call beforehand.\")}ChoosePath(t,e=!0){this.state.SetChosenPath(t,e),this.VisitChangedContainersDueToDivert()}ChooseChoiceIndex(t){t=t;let e=this.currentChoices;this.Assert(t>=0&&t<e.length,\"choice out of range\");let n=e[t];return null===n.threadAtGeneration?d(\"choiceToChoose.threadAtGeneration\"):null===n.targetPath?d(\"choiceToChoose.targetPath\"):(this.state.callStack.currentThread=n.threadAtGeneration,void this.ChoosePath(n.targetPath))}HasFunction(t){try{return null!=this.KnotContainerWithName(t)}catch(t){return!1}}EvaluateFunction(t,e=[],n=!1){if(this.IfAsyncWeCant(\"evaluate a function\"),null==t)throw new Error(\"Function is null\");if(\"\"==t||\"\"==t.trim())throw new Error(\"Function is empty or white space.\");let i=this.KnotContainerWithName(t);if(null==i)throw new Error(\"Function doesn't exist: '\"+t+\"'\");let a=[];a.push.apply(a,this.state.outputStream),this._state.ResetOutput(),this.state.StartFunctionEvaluationFromGame(i,e);let r=new m;for(;this.canContinue;)r.Append(this.Continue());let s=r.toString();this._state.ResetOutput(a);let l=this.state.CompleteFunctionEvaluationFromGame();return n?{returned:l,output:s}:l}EvaluateExpression(t){let e=this.state.callStack.elements.length;this.state.callStack.Push(a.Tunnel),this._temporaryEvaluationContainer=t,this.state.GoToStart();let n=this.state.evaluationStack.length;return this.Continue(),this._temporaryEvaluationContainer=null,this.state.callStack.elements.length>e&&this.state.PopCallStack(),this.state.evaluationStack.length>n?this.state.PopEvaluationStack():null}CallExternalFunction(t,e){if(null===t)return d(\"funcName\");let n=this._externals.get(t),i=null;if(!(void 0!==n)){if(this.allowExternalFunctionFallbacks)return i=this.KnotContainerWithName(t),this.Assert(null!==i,\"Trying to call EXTERNAL function '\"+t+\"' which has not been bound, and fallback ink function could not be found.\"),this.state.callStack.Push(a.Function,void 0,this.state.outputStream.length),void(this.state.divertedPointer=k.StartOf(i));this.Assert(!1,\"Trying to call EXTERNAL function '\"+t+\"' which has not been bound (and ink fallbacks disabled).\")}let r=[];for(let t=0;t<e;++t){let t=s(this.state.PopEvaluationStack(),y).valueObject;r.push(t)}r.reverse();let l=n(r),o=null;null!=l?(o=y.Create(l),this.Assert(null!==o,\"Could not create ink value from returned object of type \"+typeof l)):o=new R,this.state.PushEvaluationStack(o)}BindExternalFunctionGeneral(t,e){this.IfAsyncWeCant(\"bind an external function\"),this.Assert(!this._externals.has(t),\"Function '\"+t+\"' has already been bound.\"),this._externals.set(t,e)}TryCoerce(t){return t}BindExternalFunction(t,e){this.Assert(null!=e,\"Can't bind a null function\"),this.BindExternalFunctionGeneral(t,t=>{this.Assert(t.length>=e.length,\"External function expected \"+e.length+\" arguments\");let n=[];for(let e=0,i=t.length;e<i;e++)n[e]=this.TryCoerce(t[e]);return e.apply(null,n)})}UnbindExternalFunction(t){this.IfAsyncWeCant(\"unbind an external a function\"),this.Assert(this._externals.has(t),\"Function '\"+t+\"' has not been bound.\"),this._externals.delete(t)}ValidateExternalBindings(){let t=null,e=null,n=arguments[1]||new Set;if(arguments[0]instanceof N&&(t=arguments[0]),arguments[0]instanceof p&&(e=arguments[0]),null===t&&null===e)if(this.ValidateExternalBindings(this._mainContentContainer,n),this._hasValidatedExternals=!0,0==n.size)this._hasValidatedExternals=!0;else{let t=\"Error: Missing function binding for external\";t+=n.size>1?\"s\":\"\",t+=\": '\",t+=Array.from(n).join(\"', '\"),t+=\"' \",t+=this.allowExternalFunctionFallbacks?\", and no fallback ink function found.\":\" (ink fallbacks disabled)\",this.Error(t)}else if(null!=t){for(let e of t.content){let t=e;null!=t&&t.hasValidName||this.ValidateExternalBindings(e,n)}for(let[e,i]of t.namedContent)this.ValidateExternalBindings(r(i,p),n)}else if(null!=e){let t=r(e,I);if(t&&t.isExternal){let e=t.targetPathString;if(null===e)return d(\"name\");if(!this._externals.has(e))if(this.allowExternalFunctionFallbacks){this.mainContentContainer.namedContent.has(e)||n.add(e)}else n.add(e)}}}ObserveVariable(t,e){if(this.IfAsyncWeCant(\"observe a new variable\"),null===this._variableObservers&&(this._variableObservers=new Map),!this.state.variablesState.GlobalVariableExistsWithName(t))throw new C(\"Cannot observe variable '\"+t+\"' because it wasn't declared in the ink story.\");this._variableObservers.has(t)?this._variableObservers.get(t).push(e):this._variableObservers.set(t,[e])}ObserveVariables(t,e){for(let n=0,i=t.length;n<i;n++)this.ObserveVariable(t[n],e[n])}RemoveVariableObserver(t,e){if(this.IfAsyncWeCant(\"remove a variable observer\"),null!==this._variableObservers)if(void 0!==e){if(this._variableObservers.has(e)){let n=this._variableObservers.get(e);n.splice(n.indexOf(t),1)}}else{let e=this._variableObservers.keys();for(let n of e){let e=this._variableObservers.get(n);e.splice(e.indexOf(t),1)}}}VariableStateDidChangeEvent(t,e){if(null===this._variableObservers)return;let n=this._variableObservers.get(t);if(void 0!==n){if(!(e instanceof y))throw new Error(\"Tried to get the value of a variable that isn't a standard type\");let i=s(e,y);for(let e of n)e(t,i.valueObject)}}get globalTags(){return this.TagsAtStartOfFlowContainerWithPathString(\"\")}TagsForContentAtPath(t){return this.TagsAtStartOfFlowContainerWithPathString(t)}TagsAtStartOfFlowContainerWithPathString(t){let n=new e(t),i=this.ContentAtPath(n).container;if(null===i)return d(\"flowContainer\");for(;;){let t=i.content[0];if(!(t instanceof N))break;i=t}let a=null;for(let t of i.content){let e=r(t,M);if(!e)break;null==a&&(a=[]),a.push(e.text)}return a}BuildStringOfHierarchy(){let t=new m;return this.mainContentContainer.BuildStringOfHierarchy(t,0,this.state.currentPointer.Resolve()),t.toString()}BuildStringOfContainer(t){let e=new m;return t.BuildStringOfHierarchy(e,0,this.state.currentPointer.Resolve()),e.toString()}NextContent(){if(this.state.previousPointer=this.state.currentPointer.copy(),!this.state.divertedPointer.isNull&&(this.state.currentPointer=this.state.divertedPointer.copy(),this.state.divertedPointer=k.Null,this.VisitChangedContainersDueToDivert(),!this.state.currentPointer.isNull))return;if(!this.IncrementContentPointer()){let t=!1;this.state.callStack.CanPop(a.Function)?(this.state.PopCallStack(a.Function),this.state.inExpressionEvaluation&&this.state.PushEvaluationStack(new R),t=!0):this.state.callStack.canPopThread?(this.state.callStack.PopThread(),t=!0):this.state.TryExitFunctionEvaluationFromGame(),t&&!this.state.currentPointer.isNull&&this.NextContent()}}IncrementContentPointer(){let t=!0,e=this.state.callStack.currentElement.currentPointer.copy();if(e.index++,null===e.container)return d(\"pointer.container\");for(;e.index>=e.container.content.length;){t=!1;let n=r(e.container.parent,N);if(n instanceof N==!1)break;let i=n.content.indexOf(e.container);if(-1==i)break;if((e=new k(n,i)).index++,t=!0,null===e.container)return d(\"pointer.container\")}return t||(e=k.Null),this.state.callStack.currentElement.currentPointer=e.copy(),t}TryFollowDefaultInvisibleChoice(){let t=this._state.currentChoices,e=t.filter(t=>t.isInvisibleDefault);if(0==e.length||t.length>e.length)return!1;let n=e[0];return null===n.targetPath?d(\"choice.targetPath\"):null===n.threadAtGeneration?d(\"choice.threadAtGeneration\"):(this.state.callStack.currentThread=n.threadAtGeneration,this.ChoosePath(n.targetPath,!1),!0)}VisitCountForContainer(t){if(null===t)return d(\"container\");if(!t.visitsShouldBeCounted)return console.warn(\"Read count for target (\"+t.name+\" - on \"+t.debugMetadata+\") unknown. The story may need to be compiled with countAllVisits flag (-c).\"),0;let e=0,n=t.path.toString();return e=this.state.visitCounts.get(n)||e}IncrementVisitCountForContainer(t){let e=0,n=t.path.toString();this.state.visitCounts.has(n)&&(e=this.state.visitCounts.get(n)),e++,this.state.visitCounts.set(n,e)}RecordTurnIndexVisitToContainer(t){let e=t.path.toString();this.state.turnIndices.set(e,this.state.currentTurnIndex)}TurnsSinceForContainer(t){t.turnIndexShouldBeCounted||this.Error(\"TURNS_SINCE() for target (\"+t.name+\" - on \"+t.debugMetadata+\") unknown. The story may need to be compiled with countAllVisits flag (-c).\");let e=t.path.toString(),n=this.state.turnIndices.get(e);return void 0!==n?this.state.currentTurnIndex-n:-1}NextSequenceShuffleIndex(){let t=r(this.state.PopEvaluationStack(),T);if(!(t instanceof T))return this.Error(\"expected number of elements in sequence for shuffle index\"),0;let e=this.state.currentPointer.container;if(null===e)return d(\"seqContainer\");if(null===t.value)return d(\"numElementsIntVal.value\");let n=t.value,i=s(this.state.PopEvaluationStack(),T).value;if(null===i)return d(\"seqCount\");let a=i/n,l=i%n,o=e.path.toString(),u=0;for(let t=0,e=o.length;t<e;t++)u+=o.charCodeAt(t)||0;let h=u+a+this.state.storySeed,c=new K(Math.floor(h)),p=[];for(let t=0;t<n;++t)p.push(t);for(let t=0;t<=l;++t){let e=c.next()%p.length,n=p[e];if(p.splice(e,1),t==l)return n}throw new Error(\"Should never reach here\")}Error(t,e=!1){let n=new C(t);throw n.useEndLineNumber=e,n}Warning(t){this.AddError(t,!0)}AddError(t,e=!1,n=!1){let i=this.currentDebugMetadata,a=e?\"WARNING\":\"ERROR\";if(null!=i){let e=n?i.endLineNumber:i.startLineNumber;t=\"RUNTIME \"+a+\": '\"+i.fileName+\"' line \"+e+\": \"+t}else t=this.state.currentPointer.isNull?\"RUNTIME \"+a+\": \"+t:\"RUNTIME \"+a+\": (\"+this.state.currentPointer+\"): \"+t;this.state.AddError(t,e),e||this.state.ForceEnd()}Assert(t,e=null){if(0==t)throw null==e&&(e=\"Story assert\"),new Error(e+\" \"+this.currentDebugMetadata)}get currentDebugMetadata(){let t,e=this.state.currentPointer;if(!e.isNull&&null!==e.Resolve()&&null!==(t=e.Resolve().debugMetadata))return t;for(let n=this.state.callStack.elements.length-1;n>=0;--n)if(!(e=this.state.callStack.elements[n].currentPointer).isNull&&null!==e.Resolve()&&null!==(t=e.Resolve().debugMetadata))return t;for(let e=this.state.outputStream.length-1;e>=0;--e){if(null!==(t=this.state.outputStream[e].debugMetadata))return t}return null}get mainContentContainer(){return this._temporaryEvaluationContainer?this._temporaryEvaluationContainer:this._mainContentContainer}}!function(t){let e;!function(t){t[t.NoChange=0]=\"NoChange\",t[t.ExtendedBeyondNewline=1]=\"ExtendedBeyondNewline\",t[t.NewlineRemoved=2]=\"NewlineRemoved\"}(e=t.OutputStateChange||(t.OutputStateChange={}))}(H||(H={})),t.InkList=g,t.Story=H,Object.defineProperty(t,\"__esModule\",{value:!0})});\n//# sourceMappingURL=ink-es2015.js.map\n","\nfunction parseTags(tags) {\n  const tagsObj = {};\n  tags.forEach((item) => {\n    let content = item.match(/\\s*(\\w+)\\s*:\\s*(.+?)\\s*$/);\n    if (Array.isArray(content)) {\n      // tag is in \"key: value\" format\n      const [, key, value] = content;\n      const firstChar = value.substr(0, 1);\n      if (firstChar === '{' || firstChar === '[') {\n        content = JSON.parse(value); // this is JSON\n      } else {\n        content = value;\n      }\n      tagsObj[key] = content;\n    } else {\n      tagsObj[item] = true; // use tag as key name\n    }\n  });\n  return tagsObj;\n}\n\nfunction getScene(atramentStory, cmdInstance) {\n  const inkStory = atramentStory.$ink;\n  const scene = {\n    type: 'text',\n    content: [],\n    text: [],\n    tags: {},\n    choices: []\n  };\n  while (inkStory.canContinue) {\n    inkStory.Continue();\n    const {currentText} = inkStory;\n    if (currentText.indexOf('>>>') === 0) {\n      // parse command\n      const output = cmdInstance.run(currentText, atramentStory);\n      if (output) {\n        scene.text.push(output);\n      }\n    } else {\n      // add story text\n      scene.text.push(currentText); // eslint-disable-line new-cap\n    }\n    // add tags\n    const tags = parseTags(inkStory.currentTags);\n    if (tags.scene) {\n      scene.type = tags.scene;\n    }\n    scene.tags = Object.assign({}, scene.tags, tags);\n    // save content - text along with tags\n    scene.content.push({text: currentText, tags});\n  }\n  inkStory.currentChoices.forEach((choice, id) => {\n    scene.choices.push({id, choice: choice.text});\n  });\n  return scene;\n}\n\nexport default getScene;\n","import {Story} from 'inkjs';\nimport getScene from './scene';\n\n/*\n  * make choice:        story.$ink.ChooseChoiceIndex(choiceId)\n  * get tags:           story.$ink.currentTags\n  * get global tags:    story.$ink.globalTags\n  * get tags for knot:  story.$ink.TagsForContentAtPath(knot)\n  * go to knot/stitch:  story.$ink.ChoosePathString(ref)\n  * register observer variable:\n      function callback(variableName:string, newValue) {}\n      story.$ink.ObserveVariable(varName, callback);\n  * bind external function:\n      story.$ink.BindExternalFunction(name, function_definition)\n  * call ink function:\n      story.$ink.EvaluateFunction(inkFunctionName, argsArray, returnTextOutput)\n      (if returnTextOutput is true, returns\n       {'returned': functionResult, 'output': functionTextOutput},\n       otherwise returns just functionResult.)\n*/\n\nclass AtramentStory {\n  constructor(storyContent) {\n    this.$ink = new Story(storyContent);\n    this.$episode = [];\n    this.$sceneId = -1;\n  }\n\n  clearEpisode() {\n    this.$episode.splice(0);\n    this.$sceneId = -1;\n  }\n\n  getCurrentEpisode() {\n    return this.$episode;\n  }\n\n  getCurrentScene() {\n    return this.$episode[this.$episode.length - 1];\n  }\n\n  renderScene(cmdInstance) {\n    const scene = getScene(this, cmdInstance);\n    return this.updateEpisode(scene);\n  }\n\n  makeChoice(choiceId) {\n    return this.$ink.ChooseChoiceIndex(choiceId);\n  }\n\n  // getters\n  updateEpisode(scene) {\n    // deactivate previous scene\n    if (this.$sceneId >= 0) {\n      this.$episode[this.$sceneId].isActive = false;\n    }\n    this.$sceneId += 1;\n    // append new scene\n    scene.isActive = true;\n    scene.id = this.$sceneId;\n    this.$episode.push(scene);\n    return scene;\n  }\n\n  // get state snapshot\n  getState() {\n    return {\n      episode: this.$episode,\n      story: JSON.parse(this.$ink.state.toJson())\n    };\n  }\n\n  // restore\n  restoreState(state) {\n    this.$episode = state.episode;\n    this.$ink.state.LoadJson(JSON.stringify(state.story));\n  }\n\n  // get variable value\n  getVar(name) {\n    return this.$ink.variablesState[name];\n  }\n\n  // get all global variable values\n  getVars() {\n    const vState = this.$ink.variablesState;\n    const vars = {};\n    // eslint-disable-next-line no-underscore-dangle\n    vState._globalVariables.forEach((v, k) => {\n      vars[k] = vState[k];\n    });\n    return vars;\n  }\n\n  // set variable value\n  setVar(name, value) {\n    this.$ink.variablesState[name] = value;\n  }\n\n  // batch set variables values\n  setVars(vars) {\n    Object.keys(vars).forEach((k) => {\n      this.$ink.variablesState[k] = vars[k];\n    });\n  }\n\n  // get visit count\n  getVisitCount(ref) {\n    this.$ink.state.VisitCountAtPathString(ref);\n  }\n\n  // evaluate function\n  evaluateFunction(...args) {\n    return this.$ink.EvaluateFunction(...args);\n  }\n}\n\nexport default AtramentStory;\n","class InkCommands {\n  constructor() {\n    this.commands = {};\n  }\n\n  register(cmd, callback) {\n    this.commands[cmd] = callback;\n  }\n\n  run(rawText, storyObj) {\n    const cmdArr = rawText.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, '').split(' ');\n    const cmd = cmdArr[1];\n    const params = cmdArr.slice(2);\n    if (!(cmd in this.commands)) {\n      return rawText;\n    }\n    // run callback\n    return this.commands[cmd](params, storyObj, cmd);\n  }\n}\n\nexport default InkCommands;\n","class PubSub {\n  constructor() {\n    this.handlers = {};\n  }\n\n  subscribeAll(eventList) {\n    Object.entries(eventList).forEach((event) => this.subscribe(...event));\n  }\n\n  subscribe(event, handler) {\n    this.handlers[event] = handler;\n  }\n\n  apply(callback) {\n    Object.entries(this.handlers).forEach(callback);\n  }\n\n  publish(event, args) {\n    return this.handlers[event] ? this.handlers[event](args) : null;\n  }\n}\n\nexport default PubSub;\n","import AtramentStory from './story';\nimport InkCommands from './commands';\nimport PubSub from './pubsub';\n\nfunction stub(id) {\n  return new Promise(() => {\n    throw new Error(`${id} is not implemented`);\n  });\n}\n\n/*\n  gameConfig: {\n    storyFile: 'filename.ink.json',\n    transcript: true\n  }\n*/\n\n// atrament.story.getCurrentEpisode();\n// atrament.story.getCurrentScene();\n// atrament.story.getState();\n\nclass Atrament {\n  constructor(gameConfig) {\n    this.game = gameConfig;\n    this.event = new PubSub();\n    this.event.subscribeAll({\n      loadStory: () => stub('loadStory'),\n      loadGame: () => stub('loadGame'),\n      saveGame: () => stub('saveGame'),\n      error: () => stub('error')\n    });\n    this.inkObservers = new PubSub();\n    this.inkFunctions = new PubSub();\n    this.inkCommands = new InkCommands();\n    this.story = {};\n    this.transcript = [];\n  }\n\n  startGame() {\n    // load first episode\n    return this.loadStoryFile().then(() => {\n      this.story.clearEpisode();\n    });\n  }\n\n  loadGame(slotId) {\n    let gameState = {};\n    return this.event.publish('loadGame', slotId)\n      .then((data) => {\n        gameState = JSON.parse(data);\n        return this.loadStoryFile();\n      })\n      .then(() => {\n        this.story.restoreState(gameState.data);\n      });\n  }\n\n  saveGame(slotId) {\n    return this.event.publish(\n      'saveGame',\n      {\n        id: slotId,\n        data: this.story.getState()\n      }\n    );\n  }\n\n  // render scene\n  renderScene() {\n    const scene = this.story.renderScene(this.inkCommands);\n    if (this.game.transcript) {\n      this.transcript.push(scene);\n    }\n    return scene;\n  }\n\n  getTranscript() {\n    return this.transcript;\n  }\n\n  makeChoice(choiceId) {\n    return new Promise((resolve) => {\n      if (this.game.transcript) {\n        this.transcript[this.transcript.length - 1].chosen = choiceId;\n      }\n      this.story.$ink.ChooseChoiceIndex(choiceId); // eslint-disable-line new-cap\n      resolve();\n    }).catch((error) => {\n      this.event.publish('error', error);\n    });\n  }\n\n  loadStoryFile() {\n    return this.event.publish('loadStory', this.game.storyFile).then((data) => {\n      let storyContent = data;\n      if (typeof data === 'string') {\n        const outputFileContent = data.replace('\\uFEFF', '');\n        storyContent = JSON.parse(outputFileContent);\n      }\n      this.initEpisode(storyContent);\n    });\n  }\n\n  initEpisode(storyContent) {\n    // init story\n    const story = new AtramentStory(storyContent);\n    // register observers\n    this.inkObservers.apply(([v, cb]) => {\n      story.$ink.ObserveVariable(v, cb);\n    });\n    // register functions\n    this.inkFunctions.apply(([name, fn]) => {\n      story.$ink.BindExternalFunction(name, fn);\n    });\n    // expose story\n    this.story = story;\n  }\n\n  // register functions for ink story\n  registerFunctions(fnList) {\n    this.inkFunctions.subscribeAll(fnList);\n  }\n\n  // register observers for ink story variables\n  registerObservers(obList) {\n    this.inkObservers.subscribeAll(obList);\n  }\n\n  // register Ink commands\n  registerCommand(cmd, callback) {\n    this.inkCommands.register(cmd, callback);\n  }\n\n  // register Atrament event handler\n  on(event, handler) {\n    this.event.subscribe(event, handler);\n  }\n\n  debug() {\n    return this.story.$ink.state;\n  }\n}\n\nexport default Atrament;\n"],"sourceRoot":""}